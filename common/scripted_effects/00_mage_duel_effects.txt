configure_start_mage_duel_effect = {
	$MD_ATTACKER$ = { save_scope_as = md_attacker }
	$MD_DEFENDER$ = { save_scope_as = md_defender }
	if = {
		limit = {
			scope:md_attacker = {
				is_antimagic_trigger = no
			}
			scope:md_defender = {
				is_antimagic_trigger = no
			}
		}
		custom_tooltip = mage_duel_duel_ct
		hidden_effect_new_object = {
			scope:md_attacker = {
				set_spell_id = { ID = 27 }
				clean_winner_loser_flags = yes
				if = {
					limit = {
						is_ai = yes
						any_character_artifact = { has_variable = pot8 }
						NOT = {
							has_character_modifier = alchemical_enhancement
						}
					}
					add_character_modifier = {
						modifier = alchemical_enhancement
						months = 12
					}
					random_character_artifact = {
						limit = {
							has_variable = pot8
							}
						destroy_artifact = this
					}
				}
				if = {
					limit = {
						is_ai = yes
						any_character_artifact = { has_variable = pot2 }
						can_be_power_saturated_trigger = yes
					}
					gain_standard_ps_effect = yes
					random_character_artifact = {
						limit = {
							has_variable = pot2
						}
						destroy_artifact = this
					}
				}
				set_variable = {
					name = pclash
					value = 10
				}
				set_variable = {
					name = dendurance
					value = duel_endurance_level_value
				}
				set_variable = {
					name = lpower
					value = duel_power_level_value
				}
				set_variable = {
					name = lfire
					value = duel_fire_level_value
				}
				set_variable = {
					name = lkinetic
					value = duel_kinetic_level_value
				}
				set_variable = {
					name = lshadow
					value = duel_shadow_level_value
				}
				set_variable = {
					name = lnecrotic
					value = duel_necrotic_level_value
				}	
				set_variable = {
					name = ilpower
					value = duel_power_level_value
				}	
				set_variable = {
					name = ilfire
					value = duel_fire_level_value
				}
				set_variable = {
					name = ilkinetic
					value = duel_kinetic_level_value
				}
				set_variable = {
					name = ilshadow
					value = duel_shadow_level_value
				}
				set_variable = {
					name = ilnecrotic
					value = duel_necrotic_level_value
				}
				set_variable = {
					name = pcprogress
					value = 0
				}
				set_variable = {
					name = nrround
					value = 0
				}
				set_variable = {
					name = mdmana
					value = 10
				}
				set_variable = {
					name = md_show_room
					value = 0
				}
				if = {
					limit = {
						OR = {
							has_character_modifier = di_abraxas_support_modifier
							AND = {
								has_trait = archmage
								has_trait_xp = {
									trait = archmage
									track = combat_magic
									value > 34
								}
							}
						}
						NOT = {
							has_character_flag = may_use_magic_shield_free_flag
						}
					}
					add_character_flag = may_use_magic_shield_free_flag
				}
				if = {
					limit = {
						has_character_modifier = yaga_modifier
						NOT = {
							has_character_flag = may_use_magic_shield_free_flag
						}
					}
					add_character_flag = may_use_magic_shield_free_flag
				}
				if = {
					limit = {
						any_character_artifact = {
							OR = {
								has_artifact_modifier = singularity_modifier5
								has_artifact_modifier = singularity_modifierX
							}
						}
					}
					if = {
						limit = {
							has_character_flag = md_locked_as_for_duel
						}
						remove_character_flag = md_locked_as_for_duel
					}
					else = {
						add_character_flag = may_use_singularity_md_flag
					}
				}
				md_reduce_initial_endurance_effect = yes
				
			}
			scope:md_defender = {
				set_spell_id = { ID = 27 }
				clean_winner_loser_flags = yes
				if = {
					limit = {
						is_ai = yes
						any_character_artifact = { has_variable = pot8 }
						NOT = {
							has_character_modifier = alchemical_enhancement
						}
					}
					add_character_modifier = {
						modifier = alchemical_enhancement
						months = 12
					}
					random_character_artifact = {
						limit = {
							has_variable = pot8
							}
						destroy_artifact = this
					}
				}
				if = {
					limit = {
						is_ai = yes
						any_character_artifact = { has_variable = pot2 }
						can_be_power_saturated_trigger = yes
					}
					gain_standard_ps_effect = yes
					random_character_artifact = {
						limit = {
							has_variable = pot2
						}
						destroy_artifact = this
					}
				}
				set_variable = {
					name = pclash
					value = 10
				}
				set_variable = {	
					name = dendurance
					value = duel_endurance_level_value
				}
				set_variable = {
					name = lpower
					value = duel_power_level_value
				}
				set_variable = {
					name = lfire
					value = duel_fire_level_value
				}
				set_variable = {
					name = lkinetic
					value = duel_kinetic_level_value
				}
				set_variable = {
					name = lshadow
					value = duel_shadow_level_value
				}
				set_variable = {
					name = lnecrotic
					value = duel_necrotic_level_value
				}
				set_variable = {
					name = ilpower
					value = duel_power_level_value
				}
				set_variable = {
					name = ilfire
					value = duel_fire_level_value
				}
				set_variable = {
					name = ilkinetic
					value = duel_kinetic_level_value
				}
				set_variable = {
					name = ilshadow
					value = duel_shadow_level_value
				}
				set_variable = {
					name = ilnecrotic
					value = duel_necrotic_level_value
				}
				set_variable = {
					name = pcprogress
					value = 0
				}
				set_variable = {
					name = nrround
					value = 0
				}
				set_variable = {
					name = mdmana
					value = 10
				}
				set_variable = {
					name = md_show_room
				value = 0
				}
				if = {
					limit = {
						OR = {
							has_character_modifier = di_abraxas_support_modifier
							AND = {
								has_trait = archmage
								has_trait_xp = {
									trait = archmage
									track = combat_magic
									value > 34
								}
							}
						}
						NOT = {
							has_character_flag = may_use_magic_shield_free_flag
						}
					}
					add_character_flag = may_use_magic_shield_free_flag
				}
			if = {
				limit = {
					has_character_modifier = yaga_modifier
					NOT = {
						has_character_flag = may_use_magic_shield_free_flag
					}
				}
				add_character_flag = may_use_magic_shield_free_flag
			}	
			if = {	
				limit = {	
					any_character_artifact = {
						OR = {	
							has_artifact_modifier = singularity_modifier5
								has_artifact_modifier = singularity_modifierX
							}
						}
					}
					if = {
						limit = {
							has_character_flag = md_locked_as_for_duel
						}
						remove_character_flag = md_locked_as_for_duel
					}
					else = {
						add_character_flag = may_use_singularity_md_flag
					}
				}
				md_reduce_initial_endurance_effect = yes
			}
		}
		if = {
			limit = {
				OR = {
					scope:md_attacker = {
						any_equipped_character_artifact = {	has_variable = magic_ring0	}
					}
					scope:md_defender = {
						any_equipped_character_artifact = {	has_variable = magic_ring0	}
					}
				}
			}
			scope:md_attacker = {
				if = {
					limit = {
						var:lnecrotic > 0
					}
					change_variable = {
						name = lnecrotic
						add = -1
					}
				}
			}
			scope:md_defender = {
				if = {
					limit = {
						var:lnecrotic > 0
					}
					change_variable = {
						name = lnecrotic
						add = -1
					}
				}
			}
		}
		scope:md_attacker = {
			trigger_event = magic_ev10.1
		}
	}
	else = {
		custom_tooltip = start_duel_ct
		configure_start_single_combat_effect = {
			SC_INITIATOR = scope:md_attacker
			SC_ATTACKER = scope:md_attacker
			SC_DEFENDER = scope:md_defender
			FATALITY = always
			FIXED = no
			LOCALE = throne_room
			OUTPUT_EVENT = single_combat.1006
			INVALIDATION_EVENT = fp1_tbc.0021
		}
	}
	#trigger_event = { saved_event_id = scope:follow_up_event }
}

clear_spell_slot = {
	hidden_effect_new_object = {
		if = {
			limit = {
				exists = var:md_damage1
			}
			remove_variable = md_damage1
		}
		if = {
			limit = {
				exists = var:md_damage2
			}
			remove_variable = md_damage2
		}
		if = {
			limit = {
				exists = var:md_damage3
			}
			remove_variable = md_damage3
		}
		if = {
			limit = {
				exists = var:md_damage4
			}
			remove_variable = md_damage4
		}
		if = {
			limit = {
				exists = var:md_damage5
			}
			remove_variable = md_damage5
		}
		if = {
			limit = {
				exists = var:md_shield
			}
			remove_variable = md_shield
		}
		if = {
			limit = {
				exists = var:md_spec_effect
			}
			remove_variable = md_spec_effect
		}
		if = {
			limit = {
				exists = var:md_main_damage_marker
			}
			remove_variable = md_main_damage_marker
		}
		if = {
			limit = {
				exists = var:md_endurance_loss
			}
			remove_variable = md_endurance_loss
		}
		if = {
			limit = {
				exists = var:md_damage5_minus
			}
			remove_variable = md_damage5_minus
		}
	}
}
prepare_spell_slot = {
	hidden_effect_new_object = {
		clear_spell_slot = yes
		clear_elements_flags_effect = yes
		set_variable = {
			name = md_damage1
			value = 0
		}
		set_variable = {
			name = md_damage2
			value = 0
		}
		set_variable = {
			name = md_damage3
			value = 0
		}
		set_variable = {
			name = md_damage4
			value = 0
		}
		set_variable = {
			name = md_damage5
			value = 0
		}
		set_variable = {
			name = md_shield
			value = 0
		}
		set_variable = {
			name = md_spec_effect
			value = 0
		}
		set_variable = {
			name = md_main_damage_marker
			value = 0
		}
		set_variable = {
			name = md_endurance_loss
			value = 0
		}
		set_variable = {
			name = md_damage5_minus
			value = 0
		}
	}
}
clear_md_display_variables = {
	hidden_effect_new_object = {
		if = {
			limit = {
				exists = var:md_damage1_disp
			}
			remove_variable = md_damage1_disp
		}
		if = {
			limit = {
				exists = var:md_damage2_disp
			}
			remove_variable = md_damage2_disp
		}
		if = {
			limit = {
				exists = var:md_damage3_disp
			}
			remove_variable = md_damage3_disp
		}
		if = {
			limit = {
				exists = var:md_damage4_disp
			}
			remove_variable = md_damage4_disp
		}
		if = {
			limit = {
				exists = var:md_damage5_disp
			}
			remove_variable = md_damage5_disp
		}
		if = {
			limit = {
				exists = var:md_shield_disp
			}
			remove_variable = md_shield_disp
		}
		if = {
			limit = {
				exists = var:md_spec_effect_disp
			}
			remove_variable = md_spec_effect_disp
		}
		if = {
			limit = {
				exists = var:md_main_damage_marker_disp
			}
			remove_variable = md_main_damage_marker_disp
		}
		if = {
			limit = {
				exists = var:md_endurance_loss_disp
			}
			remove_variable = md_endurance_loss_disp
		}
		if = {
			limit = {
				exists = var:md_damage5_minus_disp
			}
			remove_variable = md_damage5_minus_disp
		}
		if = {
			limit = {
				has_character_flag = char_use_power_element_flag_disp
			}
			remove_character_flag = char_use_power_element_flag_disp
		}
		if = {
			limit = {
				has_character_flag = char_use_fire_element_flag_disp
			}
			remove_character_flag = char_use_fire_element_flag_disp
		}
		if = {
			limit = {
				has_character_flag = char_use_kinetic_element_flag_disp
			}
			remove_character_flag = char_use_kinetic_element_flag_disp
		}
		if = {
			limit = {
				has_character_flag = char_use_shadow_element_flag_disp
			}
			remove_character_flag = char_use_shadow_element_flag_disp
		}
		if = {
			limit = {
				has_character_flag = char_use_necrotic_element_flag_disp
			}
			remove_character_flag = char_use_necrotic_element_flag_disp
		}
		if = {
			limit = {
				has_character_flag = no_char_use_power_element_flag_disp
			}
			remove_character_flag = no_char_use_power_element_flag_disp
		}
		if = {
			limit = {
				has_character_flag = no_char_use_fire_element_flag_disp
			}
			remove_character_flag = no_char_use_fire_element_flag_disp
		}
		if = {
			limit = {
				has_character_flag = no_char_use_kinetic_element_flag_disp
			}
			remove_character_flag = no_char_use_kinetic_element_flag_disp
		}
		if = {
			limit = {
				has_character_flag = no_char_use_shadow_element_flag_disp
			}
			remove_character_flag = no_char_use_shadow_element_flag_disp
		}
		if = {
			limit = {
				has_character_flag = no_char_use_necrotic_element_flag_disp
			}
			remove_character_flag = no_char_use_necrotic_element_flag_disp
		}
		if = {
			limit = {
				has_character_flag = char_use_double_power_element_flag_disp
			}
			remove_character_flag = char_use_double_power_element_flag_disp
		}
		if = {
			limit = {
				has_character_flag = char_use_double_fire_element_flag_disp
			}
			remove_character_flag = char_use_double_fire_element_flag_disp
		}
		if = {
			limit = {
				has_character_flag = char_use_double_kinetic_element_flag_disp
			}
			remove_character_flag = char_use_double_kinetic_element_flag_disp
		}
		if = {
			limit = {
				has_character_flag = char_use_double_shadow_element_flag_disp
			}
			remove_character_flag = char_use_double_shadow_element_flag_disp
		}
		if = {
			limit = {
				has_character_flag = char_use_double_necrotic_element_flag_disp
			}
			remove_character_flag = char_use_double_necrotic_element_flag_disp
		}
		if = {
			limit = {
				has_character_flag = char_use_additional_power_element_flag_disp
			}
			remove_character_flag = char_use_additional_power_element_flag_disp
		}
		if = {
			limit = {
				has_character_flag = char_use_additional_fire_element_flag_disp
			}
			remove_character_flag = char_use_additional_fire_element_flag_disp
		}
		if = {
			limit = {
				has_character_flag = char_use_additional_kinetic_element_flag_disp
			}
			remove_character_flag = char_use_additional_kinetic_element_flag_disp
		}
		if = {
			limit = {
				has_character_flag = char_use_additional_shadow_element_flag_disp
			}
			remove_character_flag = char_use_additional_shadow_element_flag_disp
		}
		if = {
			limit = {
				has_character_flag = char_use_additional_necrotic_element_flag_disp
			}
			remove_character_flag = char_use_additional_necrotic_element_flag_disp
		}
	}
}
save_md_display_variables = {
	clear_md_display_variables = yes
	set_variable = {
		name = md_damage1_disp
		value = var:md_damage1
	}
	set_variable = {
		name = md_damage2_disp
		value = var:md_damage2
	}
	set_variable = {
		name = md_damage3_disp
		value = var:md_damage3
	}
	set_variable = {
		name = md_damage4_disp
		value = var:md_damage4
	}
	set_variable = {
		name = md_damage5_disp
		value = var:md_damage5
	}
	set_variable = {
		name = md_shield_disp
		value = var:md_shield
	}
	set_variable = {
		name = md_spec_effect_disp
		value = var:md_spec_effect
	}
	set_variable = {
		name = md_main_damage_marker_disp
		value = var:md_main_damage_marker
	}
	set_variable = {
		name = md_endurance_loss_disp
		value = var:md_endurance_loss
	}
	set_variable = {
		name = md_damage5_minus_disp
		value = var:md_damage5_minus
	}
	if = {
		limit = {
			has_character_flag = char_use_power_element_flag
		}
		add_character_flag = char_use_power_element_flag_disp
	}
	if = {
		limit = {
			has_character_flag = char_use_fire_element_flag
		}
		add_character_flag = char_use_fire_element_flag_disp
	}
	if = {
		limit = {
			has_character_flag = char_use_kinetic_element_flag
		}
		add_character_flag = char_use_kinetic_element_flag_disp
	}
	if = {
		limit = {
			has_character_flag = char_use_shadow_element_flag
		}
		add_character_flag = char_use_shadow_element_flag_disp
	}
	if = {
		limit = {
			has_character_flag = char_use_necrotic_element_flag
		}
		add_character_flag = char_use_necrotic_element_flag_disp
	}
	if = {
		limit = {
			has_character_flag = no_char_use_power_element_flag
		}
		add_character_flag = no_char_use_power_element_flag_disp
	}
	if = {
		limit = {
			has_character_flag = no_char_use_fire_element_flag
		}
		add_character_flag = no_char_use_fire_element_flag_disp
	}
	if = {
		limit = {
			has_character_flag = no_char_use_kinetic_element_flag
		}
		add_character_flag = no_char_use_kinetic_element_flag_disp
	}
	if = {
		limit = {
			has_character_flag = no_char_use_shadow_element_flag
		}
		add_character_flag = no_char_use_shadow_element_flag_disp
	}
	if = {
		limit = {
			has_character_flag = no_char_use_necrotic_element_flag
		}
		add_character_flag = no_char_use_necrotic_element_flag_disp
	}
	if = {
		limit = {
			has_character_flag = char_use_double_power_element_flag
		}
		add_character_flag = char_use_double_power_element_flag_disp
	}
	if = {
		limit = {
			has_character_flag = char_use_double_fire_element_flag
		}
		add_character_flag = char_use_double_fire_element_flag_disp
	}
	if = {
		limit = {
			has_character_flag = char_use_double_kinetic_element_flag
		}
		add_character_flag = char_use_double_kinetic_element_flag_disp
	}
	if = {
		limit = {
			has_character_flag = char_use_double_shadow_element_flag
		}
		add_character_flag = char_use_double_shadow_element_flag_disp
	}
	if = {
		limit = {
			has_character_flag = char_use_double_necrotic_element_flag
		}
		add_character_flag = char_use_double_necrotic_element_flag_disp
	}

	if = {
		limit = {
			has_character_flag = char_use_additional_power_element_flag
		}
		add_character_flag = char_use_additional_power_element_flag_disp
	}
	if = {
		limit = {
			has_character_flag = char_use_additional_fire_element_flag
		}
		add_character_flag = char_use_additional_fire_element_flag_disp
	}
	if = {
		limit = {
			has_character_flag = char_use_additional_kinetic_element_flag
		}
		add_character_flag = char_use_additional_kinetic_element_flag_disp
	}
	if = {
		limit = {
			has_character_flag = char_use_additional_shadow_element_flag
		}
		add_character_flag = char_use_additional_shadow_element_flag_disp
	}
	if = {
		limit = {
			has_character_flag = char_use_additional_necrotic_element_flag
		}
		add_character_flag = char_use_additional_necrotic_element_flag_disp
	}
}

clear_mage_duel_variables_effect = {
	remove_variable = pclash
	remove_variable = dendurance
	remove_variable = pcprogress
	remove_variable = nrround
	remove_variable = mdmana
	remove_variable = lpower
	remove_variable = lfire
	remove_variable = lkinetic
	remove_variable = lshadow
	remove_variable = lnecrotic
	remove_variable = ilpower
	remove_variable = ilfire
	remove_variable = ilkinetic
	remove_variable = ilshadow
	remove_variable = ilnecrotic
	remove_variable = md_show_room
	clear_spell_slot = yes
	if = {
		limit = {
			has_character_flag = may_use_magic_shield_free_flag
		}
		remove_character_flag = may_use_magic_shield_free_flag
	}
	if = {
		limit = {
			has_character_flag = may_use_singularity_md_flag
		}
		remove_character_flag = may_use_singularity_md_flag
	}
	if = {
		limit = {
			has_character_flag = md_locked_as_for_duel
		}
		remove_character_flag = md_locked_as_for_duel
	}
	if = {
		limit = {
			has_character_flag = banisher_punisher_flag
		}
		remove_character_flag = banisher_punisher_flag
	}
	if = {
		limit = {
			has_character_flag = mage_arena_flag
		}
		remove_character_flag = mage_arena_flag
	}
}
clear_elements_flags_effect = {
	if = {
		limit = {
			has_character_flag = char_use_power_element_flag
		}
		remove_character_flag = char_use_power_element_flag
	}
	if = {
		limit = {
			has_character_flag = char_use_fire_element_flag
		}
		remove_character_flag = char_use_fire_element_flag
	}
	if = {
		limit = {
			has_character_flag = char_use_kinetic_element_flag
		}
		remove_character_flag = char_use_kinetic_element_flag
	}
	if = {
		limit = {
			has_character_flag = char_use_shadow_element_flag
		}
		remove_character_flag = char_use_shadow_element_flag
	}
	if = {
		limit = {
			has_character_flag = char_use_necrotic_element_flag
		}
		remove_character_flag = char_use_necrotic_element_flag
	}
	if = {
		limit = {
			has_character_flag = no_char_use_power_element_flag
		}
		remove_character_flag = no_char_use_power_element_flag
	}
	if = {
		limit = {
			has_character_flag = no_char_use_fire_element_flag
		}
		remove_character_flag = no_char_use_fire_element_flag
	}
	if = {
		limit = {
			has_character_flag = no_char_use_kinetic_element_flag
		}
		remove_character_flag = no_char_use_kinetic_element_flag
	}
	if = {
		limit = {
			has_character_flag = no_char_use_shadow_element_flag
		}
		remove_character_flag = no_char_use_shadow_element_flag
	}
	if = {
		limit = {
			has_character_flag = no_char_use_necrotic_element_flag
		}
		remove_character_flag = no_char_use_necrotic_element_flag
	}
	if = {
		limit = {
			has_character_flag = char_use_double_power_element_flag
		}
		remove_character_flag = char_use_double_power_element_flag
	}
	if = {
		limit = {
			has_character_flag = char_use_double_fire_element_flag
		}
		remove_character_flag = char_use_double_fire_element_flag
	}
	if = {
		limit = {
			has_character_flag = char_use_double_kinetic_element_flag
		}
		remove_character_flag = char_use_double_kinetic_element_flag
	}
	if = {
		limit = {
			has_character_flag = char_use_double_shadow_element_flag
		}
		remove_character_flag = char_use_double_shadow_element_flag
	}
	if = {
		limit = {
			has_character_flag = char_use_double_necrotic_element_flag
		}
		remove_character_flag = char_use_double_necrotic_element_flag
	}
	
	if = {
		limit = {
			has_character_flag = char_use_additional_power_element_flag
		}
		remove_character_flag = char_use_additional_power_element_flag
	}
	if = {
		limit = {
			has_character_flag = char_use_additional_fire_element_flag
		}
		remove_character_flag = char_use_additional_fire_element_flag
	}
	if = {
		limit = {
			has_character_flag = char_use_additional_kinetic_element_flag
		}
		remove_character_flag = char_use_additional_kinetic_element_flag
	}
	if = {
		limit = {
			has_character_flag = char_use_additional_shadow_element_flag
		}
		remove_character_flag = char_use_additional_shadow_element_flag
	}
	if = {
		limit = {
			has_character_flag = char_use_additional_necrotic_element_flag
		}
		remove_character_flag = char_use_additional_necrotic_element_flag
	}
}
select_mage_duel_moves = {
	hidden_effect_new_object = {
		clear_mage_duel_moves = yes
		if = {
			limit = {
				NOR = {
					has_character_flag = md_winner
					has_character_flag = md_loser
					has_character_flag = md_not_concluded
				}
			}
			random_list = {
				1 = {
					add_character_flag = mage_duel_type1
				}
				1 = {
					trigger = {
						var:nrround > 1
					}
					add_character_flag = mage_duel_type2
				}
				1 = {
					add_character_flag = mage_duel_type3
				}
				1 = {
					add_character_flag = mage_duel_type4
				}
				1 = {
					add_character_flag = mage_duel_type5
				}
				1 = {
					add_character_flag = mage_duel_type6
				}
				1 = {
					trigger = {
						has_trait = archmage
					}
					add_character_flag = mage_duel_type7
				}
				1 = {
					trigger = {
						var:lnecrotic > 0
					}
					add_character_flag = mage_duel_type8
				}
			}
			random_list = {
				1 = {
					trigger = {
						scope:char2.var:pclash > 0
					}
					add_character_flag = md_desc1
				}
				1 = {
					trigger = {
						scope:char2.var:pclash = 0
					}
					add_character_flag = md_desc2
				}
				1 = {
					trigger = {
						var:pclash < 3
					}
					add_character_flag = md_desc3
				}
				1 = {
					trigger = {
						var:pclash > 12
					}
					add_character_flag = md_desc4
				}
				#1 = {
				#	#trigger = {
				#	#	scope:char2.var:dspell > 12
				#	#}
				#	add_character_flag = md_desc5
				#}
				1 = {
					trigger = {
						exists = var:md_shield_disp
						var:md_shield_disp > 0
					}
					add_character_flag = md_desc6
				}
				4 = {
					trigger = {
						scope:char2 = {
							is_a_demon_trigger = yes
						}
						has_character_flag = mage_duel_type3
					}
					add_character_flag = md_desc7
				}
			}
		}
	}
	
	
}

clear_mage_duel_moves = {
	if = {
		limit = {
			has_character_flag = mage_duel_type1
		}
		remove_character_flag = mage_duel_type1
	}
	if = {
		limit = {
			has_character_flag = mage_duel_type2
		}
		remove_character_flag = mage_duel_type2
	}
	if = {
		limit = {
			has_character_flag = mage_duel_type3
		}
		remove_character_flag = mage_duel_type3
	}
	if = {
		limit = {
			has_character_flag = mage_duel_type4
		}
		remove_character_flag = mage_duel_type4
	}
	if = {
		limit = {
			has_character_flag = mage_duel_type5
		}
		remove_character_flag = mage_duel_type5
	}
	if = {
		limit = {
			has_character_flag = mage_duel_type6
		}
		remove_character_flag = mage_duel_type6
	}
	if = {
		limit = {
			has_character_flag = mage_duel_type7
		}
		remove_character_flag = mage_duel_type7
	}
	if = {
		limit = {
			has_character_flag = mage_duel_type8
		}
		remove_character_flag = mage_duel_type8
	}
	clear_md_desc_flags_effect = yes
}

clear_md_desc_flags_effect = {
	if = {
		limit = {
			has_character_flag = md_desc1
		}
		remove_character_flag = md_desc1
	}
	if = {
		limit = {
			has_character_flag = md_desc2
		}
		remove_character_flag = md_desc2
	}
	if = {
		limit = {
			has_character_flag = md_desc3
		}
		remove_character_flag = md_desc3
	}
	if = {
		limit = {
			has_character_flag = md_desc4
		}
		remove_character_flag = md_desc4
	}
	#if = {
	#	limit = {
	#		has_character_flag = md_desc5
	#	}
	#	remove_character_flag = md_desc5
	#}
	if = {
		limit = {
			has_character_flag = md_desc6
		}
		remove_character_flag = md_desc6
	}
	if = {
		limit = {
			has_character_flag = md_desc7
		}
		remove_character_flag = md_desc7
	}
}
display_mage_duel_correctly = {
	hidden_effect_new_object = {
		change_variable = {
			name = nrround
			add = 1
		}
		if = {
			limit = {
				exists = scope:char1
			}
			clear_saved_scope = char1
		}
		if = {
			limit = {
				exists = scope:char2
			}
			clear_saved_scope = char2
		}
		if = {
			limit = {
				root = scope:md_attacker
			}
			save_scope_as = char1
			scope:md_defender = {
				save_scope_as = char2
			}
		}
		else = {
			save_scope_as = char1
			scope:md_attacker = {
				save_scope_as = char2
			}
		}
		if = {
			limit = {
				has_variable = pclash
				var:pclash > 20
			}
			set_variable = {
				name = pclash
				value = 20
			}
		}
		if = {
			limit = {
				has_variable = pclash
				var:pclash < 0
			}
			set_variable = {
				name = pclash
				value = 0
			}
		}
		if = {
			limit = {
				var:lshadow < 0
			}
			set_variable = {
				name = lshadow
				value = 0
			}
		}
		if = {
			limit = {
				exists = var:my_custom_spell
			}
			if = {
				limit = {
					exists = scope:my_custom_spell
				}
				clear_saved_scope = my_custom_spell
			}
			var:my_custom_spell = {
				save_scope_as = my_custom_spell
			}
		}
		if = {
			limit = {
				exists = var:my_custom_spell2
			}
			if = {
				limit = {
					exists = scope:my_custom_spell2
				}
				clear_saved_scope = my_custom_spell2
			}
			var:my_custom_spell2 = {
				save_scope_as = my_custom_spell2
			}
		}
		if = {
			limit = {
				exists = var:my_custom_spell2_author
			}
			if = {
				limit = {
					exists = scope:my_custom_spell2_author
				}
				clear_saved_scope = my_custom_spell2_author
			}
			var:my_custom_spell2 = {
				save_scope_as = my_custom_spell2_author
			}
		}
		scope:char2 = {
			if = {
				limit = {
					has_variable = pclash
					var:pclash > 20
				}
				set_variable = {
					name = pclash
					value = 20
				}
			}
			if = {
				limit = {
					has_variable = pclash
					var:pclash < 0
				}
				set_variable = {
					name = pclash
					value = 0
				}
			}
			if = {
				limit = {
					var:lshadow < 0
				}
				set_variable = {
					name = lshadow
					value = 0
				}
			}
			#if = {
			#	limit = {
			#		has_variable = nrround
			#		var:nrround > 7
			#	}
			#	set_variable = {
			#		name = nrround
			#		value = 7
			#	}
			#}
		}
	}
}
#T - type (and type determines the slot in the spell and duel button)
use_power_damage_effect = {
	if = {
		limit = {
			$T$ = 1	#main damage
		}
		prepare_spell_slot = yes
		custom_tooltip = use_power_damage_ct1
		add_internal_flag = power_flag
		add_internal_flag = spacer1
		hidden_effect_new_object = {
			set_variable = {
				name = md_main_damage_marker
				value = 1
			}
		}
	}
	else_if = {
		limit = {
			$T$ = 2	#side damage
		}
		custom_tooltip = use_power_damage_ct2
		add_internal_flag = power_flag2
		add_internal_flag = spacer2
	}
	else_if = {
		limit = {
			$T$ = 3 #pure single damage
		}
		prepare_spell_slot = yes
		custom_tooltip = use_power_damage_ct3
		add_internal_flag = power_flag
		add_internal_flag = spacer1
	}
	else_if = {
		limit = {
			$T$ = 4	#pure double damage
		}
		prepare_spell_slot = yes
		custom_tooltip = use_double_power_damage_ct
		add_internal_flag = power_flag
		add_internal_flag = power_flag2
		add_internal_flag = spacer1
		add_internal_flag = spacer2
		hidden_effect_new_object = {
			change_variable = {
				name = md_damage1
				add = var:lpower
			}
			add_character_flag = char_use_double_power_element_flag
		}
	}
	else_if = {
		limit = {
			$T$ = 5	#additional side damage (third slot)
		}
		custom_tooltip = use_power_damage_ct2
		add_internal_flag = power_flag3
		add_internal_flag = spacer3
		hidden_effect_new_object = {
			add_character_flag = char_use_additional_power_element_flag
		}
	}
	else_if = {
		limit = {
			$T$ = 6	#main double damage
		}
		prepare_spell_slot = yes
		custom_tooltip = use_double_power_damage_ct2
		add_internal_flag = power_flag
		add_internal_flag = power_flag2
		add_internal_flag = spacer1
		add_internal_flag = spacer2
		hidden_effect_new_object = {
			set_variable = {
				name = md_main_damage_marker
				value = 1
			}
			change_variable = {
				name = md_damage1
				add = var:lpower
			}
			add_character_flag = char_use_double_power_element_flag
		}
	}
	else_if = {
		limit = {
			$T$ = 7	#side double damage
		}
		custom_tooltip = use_double_power_damage_ct3
		add_internal_flag = power_flag3
		add_internal_flag = power_flag2
		add_internal_flag = spacer2
		add_internal_flag = spacer3
		hidden_effect_new_object = {
			change_variable = {
				name = md_damage1
				add = var:lpower
			}
			add_character_flag = char_use_double_power_element_flag
			add_character_flag = char_use_additional_power_element_flag
		}
	}
	hidden_effect_new_object = {
		change_variable = {
			name = md_damage1
			add = var:lpower
		}
		if = {
			limit = {
				$T$ != 5
				NOT = { has_character_flag = char_use_power_element_flag }
			}
			add_character_flag = char_use_power_element_flag
		}
	}
}
use_fire_damage_effect = {
	if = {
		limit = {
			$T$ = 1
		}
		prepare_spell_slot = yes
		custom_tooltip = use_fire_damage_ct1
		add_internal_flag = fire_flag
		add_internal_flag = spacer1
		hidden_effect_new_object = {
			set_variable = {
				name = md_main_damage_marker
				value = 2
			}
		}
	}
	else_if = {
		limit = {
			$T$ = 2
		}
		custom_tooltip = use_fire_damage_ct2
		add_internal_flag = fire_flag2
		add_internal_flag = spacer2
	}
	else_if = {
		limit = {
			$T$ = 3
		}
		prepare_spell_slot = yes
		custom_tooltip = use_fire_damage_ct3
		add_internal_flag = fire_flag
		add_internal_flag = spacer1
	}
	else_if = {
		limit = {
			$T$ = 4
		}
		prepare_spell_slot = yes
		custom_tooltip = use_double_fire_damage_ct
		add_internal_flag = fire_flag
		add_internal_flag = fire_flag2
		add_internal_flag = spacer1
		add_internal_flag = spacer2
		hidden_effect_new_object = {
			change_variable = {
				name = md_damage2
				add = var:lfire
			}
			add_character_flag = char_use_double_fire_element_flag
		}
	}
	else_if = {
		limit = {
			$T$ = 5
		}
		custom_tooltip = use_fire_damage_ct2
		add_internal_flag = fire_flag3
		add_internal_flag = spacer3
		hidden_effect_new_object = {
			add_character_flag = char_use_additional_fire_element_flag
		}
	}
	else_if = {
		limit = {
			$T$ = 6
		}
		prepare_spell_slot = yes
		custom_tooltip = use_double_fire_damage_ct2
		add_internal_flag = fire_flag
		add_internal_flag = fire_flag2
		add_internal_flag = spacer1
		add_internal_flag = spacer2
		hidden_effect_new_object = {
			set_variable = {
				name = md_main_damage_marker
				value = 2
			}
			change_variable = {
				name = md_damage2
				add = var:lfire
			}
			add_character_flag = char_use_double_fire_element_flag
		}
	}
	else_if = {
		limit = {
			$T$ = 7
		}
		custom_tooltip = use_double_fire_damage_ct3
		add_internal_flag = fire_flag3
		add_internal_flag = fire_flag2
		add_internal_flag = spacer2
		add_internal_flag = spacer3
		hidden_effect_new_object = {
			change_variable = {
				name = md_damage2
				add = var:lfire
			}
			add_character_flag = char_use_double_fire_element_flag
			add_character_flag = char_use_additional_fire_element_flag
		}
	}
	hidden_effect_new_object = {
		change_variable = {
			name = md_damage2
			add = var:lfire
		}
		if = {
			limit = {
				$T$ != 5
				NOT = { has_character_flag = char_use_fire_element_flag }
			}
			add_character_flag = char_use_fire_element_flag
		}
	}
}
use_kinetic_damage_effect = {
	if = {
		limit = {
			$T$ = 1
		}
		prepare_spell_slot = yes
		custom_tooltip = use_kinetic_damage_ct1
		add_internal_flag = kinetic_flag
		add_internal_flag = spacer1
		hidden_effect_new_object = {
			set_variable = {
				name = md_main_damage_marker
				value = 3
			}
		}
	}
	else_if = {
		limit = {
			$T$ = 2
		}
		custom_tooltip = use_kinetic_damage_ct2
		add_internal_flag = kinetic_flag2
		add_internal_flag = spacer2
	}
	else_if = {
		limit = {
			$T$ = 3
		}
		prepare_spell_slot = yes
		custom_tooltip = use_kinetic_damage_ct3
		add_internal_flag = kinetic_flag
		add_internal_flag = spacer1
	}
	else_if = {
		limit = {
			$T$ = 4
		}
		prepare_spell_slot = yes
		custom_tooltip = use_double_kinetic_damage_ct
		add_internal_flag = kinetic_flag
		add_internal_flag = kinetic_flag2
		add_internal_flag = spacer1
		add_internal_flag = spacer2
		hidden_effect_new_object = {
			change_variable = {
				name = md_damage3
				add = var:lkinetic
			}
			add_character_flag = char_use_double_kinetic_element_flag
		}
	}
	else_if = {
		limit = {
			$T$ = 5
		}
		custom_tooltip = use_kinetic_damage_ct2
		add_internal_flag = kinetic_flag3
		add_internal_flag = spacer3
		hidden_effect_new_object = {
			add_character_flag = char_use_additional_kinetic_element_flag
		}
	}
	else_if = {
		limit = {
			$T$ = 6
		}
		prepare_spell_slot = yes
		custom_tooltip = use_double_kinetic_damage_ct2
		add_internal_flag = kinetic_flag
		add_internal_flag = kinetic_flag2
		add_internal_flag = spacer1
		add_internal_flag = spacer2
		hidden_effect_new_object = {
			set_variable = {
				name = md_main_damage_marker
				value = 3
			}
			change_variable = {
				name = md_damage3
				add = var:lkinetic
			}
			add_character_flag = char_use_double_kinetic_element_flag
		}
	}
	else_if = {
		limit = {
			$T$ = 7
		}
		custom_tooltip = use_double_kinetic_damage_ct3
		add_internal_flag = kinetic_flag3
		add_internal_flag = kinetic_flag2
		add_internal_flag = spacer2
		add_internal_flag = spacer3
		hidden_effect_new_object = {
			change_variable = {
				name = md_damage3
				add = var:lkinetic
			}
			add_character_flag = char_use_double_kinetic_element_flag
			add_character_flag = char_use_additional_kinetic_element_flag
		}
	}
	hidden_effect_new_object = {
		change_variable = {
			name = md_damage3
			add = var:lkinetic
		}
		if = {
			limit = {
				$T$ != 5
				NOT = { has_character_flag = char_use_kinetic_element_flag }
			}
			add_character_flag = char_use_kinetic_element_flag
		}
	}
}
use_shadow_damage_effect = {
	
	if = {
		limit = {
			$T$ = 1
		}
		prepare_spell_slot = yes
		custom_tooltip = use_shadow_damage_ct1
		add_internal_flag = shadow_flag
		add_internal_flag = spacer1
		hidden_effect_new_object = {
			set_variable = {
				name = md_main_damage_marker
				value = 4
			}
		}
	}
	else_if = {
		limit = {
			$T$ = 2
		}
		custom_tooltip = use_shadow_damage_ct2
		add_internal_flag = shadow_flag2
		add_internal_flag = spacer2
	}
	else_if = {
		limit = {
			$T$ = 3
		}
		prepare_spell_slot = yes
		custom_tooltip = use_shadow_damage_ct3
		add_internal_flag = shadow_flag
		add_internal_flag = spacer1
	}
	else_if = {
		limit = {
			$T$ = 4
		}
		prepare_spell_slot = yes
		custom_tooltip = use_double_shadow_damage_ct
		add_internal_flag = shadow_flag
		add_internal_flag = shadow_flag2
		add_internal_flag = spacer1
		add_internal_flag = spacer2
		hidden_effect_new_object = {
			change_variable = {
				name = md_damage4
				add = var:lshadow
			}
			add_character_flag = char_use_double_shadow_element_flag
		}
	}
	else_if = {
		limit = {
			$T$ = 5
		}
		custom_tooltip = use_shadow_damage_ct2
		add_internal_flag = shadow_flag3
		add_internal_flag = spacer3
		hidden_effect_new_object = {
			add_character_flag = char_use_additional_shadow_element_flag
		}
	}
	else_if = {
		limit = {
			$T$ = 6
		}
		prepare_spell_slot = yes
		custom_tooltip = use_double_shadow_damage_ct2
		add_internal_flag = shadow_flag
		add_internal_flag = shadow_flag2
		add_internal_flag = spacer1
		add_internal_flag = spacer2
		hidden_effect_new_object = {
			set_variable = {
				name = md_main_damage_marker
				value = 4
			}
			change_variable = {
				name = md_damage4
				add = var:lshadow
			}
			add_character_flag = char_use_double_shadow_element_flag
		}
	}
	else_if = {
		limit = {
			$T$ = 7
		}
		custom_tooltip = use_double_shadow_damage_ct3
		add_internal_flag = shadow_flag3
		add_internal_flag = shadow_flag2
		add_internal_flag = spacer2
		add_internal_flag = spacer3
		hidden_effect_new_object = {
			change_variable = {
				name = md_damage4
				add = var:lshadow
			}
			add_character_flag = char_use_double_shadow_element_flag
			add_character_flag = char_use_additional_shadow_element_flag
		}
	}
	hidden_effect_new_object = {
		change_variable = {
			name = md_damage4
			add = var:lshadow
		}
		if = {
			limit = {
				$T$ != 5
				NOT = { has_character_flag = char_use_shadow_element_flag }
			}
			add_character_flag = char_use_shadow_element_flag
		}
	}
	
}
use_necrotic_damage_effect = {
	if = {
		limit = {
			$T$ = 1
		}
		prepare_spell_slot = yes
		custom_tooltip = use_necrotic_damage_ct1
		add_internal_flag = necrotic_flag
		add_internal_flag = spacer1
		hidden_effect_new_object = {
			set_variable = {
				name = md_main_damage_marker
				value = 5
			}
		}
	}
	else_if = {
		limit = {
			$T$ = 2
		}
		custom_tooltip = use_necrotic_damage_ct2
		add_internal_flag = necrotic_flag2
		add_internal_flag = spacer2
	}
	else_if = {
		limit = {
			$T$ = 3
		}
		prepare_spell_slot = yes
		custom_tooltip = use_necrotic_damage_ct3
		add_internal_flag = necrotic_flag
		add_internal_flag = spacer1
	}
	else_if = {
		limit = {
			$T$ = 4
		}
		prepare_spell_slot = yes
		custom_tooltip = use_double_necrotic_damage_ct
		add_internal_flag = necrotic_flag
		add_internal_flag = necrotic_flag2
		add_internal_flag = spacer1
		add_internal_flag = spacer2
		hidden_effect_new_object = {
			change_variable = {
				name = md_damage5
				add = var:lnecrotic
			}
			add_character_flag = char_use_double_necrotic_element_flag
		}
	}
	else_if = {
		limit = {
			$T$ = 5
		}
		custom_tooltip = use_necrotic_damage_ct2
		add_internal_flag = necrotic_flag3
		add_internal_flag = spacer3
		hidden_effect_new_object = {
			add_character_flag = char_use_additional_necrotic_element_flag
		}
	}
	else_if = {
		limit = {
			$T$ = 6
		}
		prepare_spell_slot = yes
		custom_tooltip = use_double_necrotic_damage_ct2
		add_internal_flag = necrotic_flag
		add_internal_flag = necrotic_flag2
		add_internal_flag = spacer1
		add_internal_flag = spacer2
		hidden_effect_new_object = {
			set_variable = {
				name = md_main_damage_marker
				value = 5
			}
			change_variable = {
				name = md_damage5
				add = var:lnecrotic
			}
			add_character_flag = char_use_double_necrotic_element_flag
		}
	}
	else_if = {
		limit = {
			$T$ = 7
		}
		custom_tooltip = use_double_necrotic_damage_ct3
		add_internal_flag = necrotic_flag3
		add_internal_flag = necrotic_flag2
		add_internal_flag = spacer2
		add_internal_flag = spacer3
		hidden_effect_new_object = {
			change_variable = {
				name = md_damage5
				add = var:lnecrotic
			}
			add_character_flag = char_use_double_necrotic_element_flag
			add_character_flag = char_use_additional_necrotic_element_flag
		}
	}
	hidden_effect_new_object = {
		change_variable = {
			name = md_damage5
			add = var:lnecrotic
		}
		if = {
			limit = {
				$T$ != 5
				NOT = { has_character_flag = char_use_necrotic_element_flag }
			}
			add_character_flag = char_use_necrotic_element_flag
		}
	}
	
}
#S - slot (1 - prepare new one)
use_magic_shield_effect = {
	if = {
		limit = {
			OR = {
				var:lpower > 0
				has_character_flag = may_use_magic_shield_free_flag
				#has_character_modifier = master_defence_modifier
			}
		}
		custom_description_no_bullet = {
			text = cast_magic_shield
		}
		custom_tooltip = use_magic_shield_ct1
		#if = {
		#	limit = {
		#		has_character_modifier = master_defence_modifier
		#	}
		#	custom_tooltip = master_defence_terrain_cancel_negative_supply
		#}
		#else_
		if = {
			limit = {
				has_character_flag = may_use_magic_shield_free_flag
			}
			custom_tooltip = md_magic_shield_no_costs_ct
		}
		else = {
			custom_tooltip = use_magic_shield_ct2
		}
		
		if = {
			limit = {
				$S$ = 1
			}
			prepare_spell_slot = yes
			add_internal_flag = shield_flag
			add_internal_flag = spacer3
		}
		else_if = {
			limit = {
				$S$ = 2
			}
			add_internal_flag = shield_flag2
			add_internal_flag = spacer4
		}
		else_if = {
			limit = {
				$S$ = 3	#first shield button slot, but no new spell slot
			}
			add_internal_flag = shield_flag
			add_internal_flag = spacer3
		}
		hidden_effect_new_object = {
			change_variable = {
				name = md_shield
				add = 1
			}
		}
	}
	else_if = {
		limit = {
			$S$ = 1
		}
		prepare_spell_slot = yes
	}
}
#T - type; S - Slot
use_magic_special_effect = {
	custom_description_no_bullet = {
		text = magic_special_effect
	}
	if = {
		limit = {
			$S$ = 1
		}
		prepare_spell_slot = yes
		add_internal_flag = special_effect_flag
		add_internal_flag = spacer3
		
	}
	else_if = {
		limit = {
			$S$ = 2
		}
		add_internal_flag = special_effect_flag2
		add_internal_flag = spacer4
	}
	if = {
		limit = {
			$T$ = 1	#double endurance loss
		}
		custom_tooltip = magic_special_duel_effect_ct1
	}
	else_if = {
		limit = {
			$T$ = 2	#no main damage
		}
		if = {
			limit = {
				var:lpower > 0
			}
			custom_tooltip = magic_special_duel_effect_ct2
		}
		else = {
			custom_tooltip = magic_special_duel_effect_ct2B
		}
	}
	else_if = {
		limit = {
			$T$ = 3	#mental strike
		}
		show_as_tooltip = {
			scope:char2 = {
				if = {
					limit = {
						ROOT = {
							has_character_modifier = master_psionic_modifier
						}
					}
					add_stress = massive_stress_gain
				}
				else = {
					add_stress = major_stress_gain
				}
				
				custom_tooltip = magic_special_duel_effect_ct3
			}
		}
	}
	else_if = {
		limit = {
			$T$ = 4	#blinding spell
		}
		ROOT = {
			show_as_tooltip = {
				scope:char2 = {
					custom_tooltip = magic_special_duel_effect_ct4a
					custom_tooltip = magic_special_duel_effect_ct4b
					if = {
						limit = {
							NOT = {
								has_trait = blind
							}
						}
						add_stress = minor_stress_gain
						random = {
							chance = 10
							add_trait = blind
						}
					}
				}
			}
		}
	}
	else_if = {
		limit = {
			$T$ = 5	#double endurance loss+bystanders (firestorm)
		}
		custom_tooltip = magic_special_duel_effect_ct1
		custom_tooltip = ev5.28.0.s6_ct
	}
	else_if = {
		limit = {
			$T$ = 6	#cannot lose endurance (shadowstep)
		}
		custom_tooltip = magic_special_duel_effect_ct6
	}
	else_if = {
		limit = {
			$T$ = 7	#plague
			scope:char2 = {
				NAND = {
					has_trait = cancer
					has_trait = consumption
					has_trait = bubonic_plague
					has_trait = typhus
				}
			}
		}
		show_as_tooltip = {
			scope:char2 = {
				custom_tooltip = magic_special_duel_effect_ct7
				random_list = {
					1 = {
						trigger = {
							NOT = { has_trait = cancer }
						}
						add_trait = cancer
					}
					1 = {
						trigger = {
							NOT = { has_trait = consumption }
						}
						add_trait = consumption
					}
					1 = {
						trigger = {
							NOT = { has_trait = bubonic_plague }
						}
						add_trait = bubonic_plague
					}
					1 = {
						trigger = {
							NOT = { has_trait = typhus }
						}
						add_trait = typhus
					}
				}
			}
		}
	}
	else_if = {
		limit = {
			$T$ = 8	#necrotic grip
		}
		show_as_tooltip = {
			custom_tooltip = magic_special_duel_effect_ct7
			scope:char2 = {
				if = {
					limit = {
						has_trait = strong
					}
					remove_trait = strong
				}
				else = {
					add_trait = weak
				}
			}
		}
	}
	else_if = {
		limit = {
			$T$ = 9	#AS
		}
		custom_tooltip = magic_special_duel_effect_ct9a
		custom_tooltip = magic_special_duel_effect_ct9b
		if = {
			limit = {
				any_character_artifact = {
					has_artifact_modifier = singularity_modifierX
				}
			}
			custom_tooltip = magic_special_duel_effect_ct9c_alt
		}
		else = {
			custom_tooltip = magic_special_duel_effect_ct9c
		}
		custom_tooltip = ev5.28.0.s6_ct
	}
	else_if = {
		limit = {
			$T$ = 10	#banishment
		}
		custom_tooltip = magic_special_duel_effect_ct10
	}
	
	hidden_effect_new_object = {
		change_variable = {
			name = md_spec_effect
			add = $T$
		}
	}
}

resolve_md_round_effect = {
	hidden_effect_new_object = {
		if = {
			limit = {
				this = scope:md_defender
				NOR = {
					has_character_flag = md_winner
					has_character_flag = md_loser
					has_character_flag = md_not_concluded
				}
			}
			scope:md_defender = {
				if = {
					limit = {
						var:md_spec_effect = 9
					}
					scope:md_attacker = {
						change_variable = {
							name = md_shield
							add = -2
						}
						if = {
							limit = {
								var:md_shield = -1
							}
							send_interface_toast = {
								title = magic_special_duel_effect_ct9_title
								left_icon = scope:md_attacker
								right_icon = scope:md_defender
								custom_tooltip = magic_special_duel_effect_ct9b_notif
							}
						}
						else_if = {
							limit = {
								var:md_spec_effect != 6
							}
							send_interface_toast = {
								title = magic_special_duel_effect_ct9_title
								left_icon = scope:md_attacker
								right_icon = scope:md_defender
								if = {
									limit = {
										scope:md_defender = {
											any_character_artifact = {
												has_artifact_modifier = singularity_modifierX
											}
										}
									}
									custom_tooltip = magic_special_duel_effect_ct9c_alt_notif
								}
								else = {
									custom_tooltip = magic_special_duel_effect_ct9c_notif
								}
							}
						}
					}
				}
			}
			scope:md_attacker = {
				if = {
					limit = {
						var:md_spec_effect = 9
					}
					scope:md_defender = {
						change_variable = {
							name = md_shield
							add = -2
						}
						if = {
							limit = {
								var:md_shield = -1
							}
							send_interface_toast = {
								title = magic_special_duel_effect_ct9_title
								left_icon = scope:md_defender
								right_icon = scope:md_attacker
								custom_tooltip = magic_special_duel_effect_ct9b_notif
							}
						}
						else_if = {
							limit = {
								var:md_spec_effect != 6
							}
							send_interface_toast = {
								title = magic_special_duel_effect_ct9_title
								left_icon = scope:md_defender
								right_icon = scope:md_attacker
								if = {
									limit = {
										scope:md_attacker = {
											any_character_artifact = {
												has_artifact_modifier = singularity_modifierX
											}
										}
									}
									custom_tooltip = magic_special_duel_effect_ct9c_alt_notif
								}
								else = {
									custom_tooltip = magic_special_duel_effect_ct9c_notif
								}
							}
						}
					}
				}
				set_variable = {
					name = pcprogress
					value = 0
				}
				set_variable = {
					name = md_endurance_loss
					value = 0
				}
				change_variable = {
					name = md_show_room
					add = 1
				}
				scope:md_defender = {
					set_variable = {
						name = pcprogress
						value = 0
					}
					set_variable = {
						name = md_endurance_loss
						value = 0
					}
					change_variable = {
						name = md_show_room
						add = 1
					}
				}
				if = {
					limit = {
						scope:md_defender.var:md_spec_effect = 4
					}
					if = {
						limit = {
							NOR = {
								has_trait = blind
								var:md_shield = 1
							}
						}
						random = {
							chance = 10
							add_character_flag = blinded_in_md
						}
					}
					send_interface_toast = {
						title = magic_special_duel_effect_ct4_title
						left_icon = scope:md_attacker
						right_icon = scope:md_defender
						if = {
							limit = {
								var:md_damage4 > 0
							}
							custom_tooltip = magic_special_duel_effect_ct4a_notif
						}
						if = {
							limit = {
								var:lshadow > 0
							}
							custom_tooltip = magic_special_duel_effect_ct4b_notif
						}
						if = {
							limit = {
								NOT = {
									has_trait = blind
								}
							}
							add_stress = minor_stress_gain
							if = {
								limit = {
									has_character_flag = blinded_in_md
								}
								add_trait = blind
								remove_character_flag = blinded_in_md
							}
						}
					}
					remove_variable = md_damage4
					set_variable = {
						name = md_damage4
						value = 0
					}
					add_character_flag = no_char_use_shadow_element_flag
				}
				if = {
					limit = {
						scope:md_defender.var:md_shield = 1
					}
					if = {
						limit = {
							var:md_main_damage_marker = 1
							scope:md_defender.var:md_spec_effect !=2
						}
						change_variable = {
							name = pcprogress
							add = var:md_damage1
						}
						add_character_flag = no_char_use_fire_element_flag
						add_character_flag = no_char_use_kinetic_element_flag
						add_character_flag = no_char_use_shadow_element_flag
						add_character_flag = no_char_use_necrotic_element_flag
					}
					else_if = {
						limit = {
							var:md_main_damage_marker = 2
							scope:md_defender.var:md_spec_effect !=2
						}
						change_variable = {
							name = pcprogress
							add = var:md_damage2
						}
						random = {
							chance = fire_loss_endurance_chance
							scope:md_defender = {
								change_variable = {
									name = md_endurance_loss
									add = -1
								}
								if = {
									limit = {
										scope:md_attacker = {
											OR = {
												var:md_spec_effect = 1
												var:md_spec_effect = 5
											}
										}
									}
									change_variable = {
										name = md_endurance_loss
										add = -1
									}
								}
							}
						}
						add_character_flag = no_char_use_power_element_flag
						add_character_flag = no_char_use_kinetic_element_flag
						add_character_flag = no_char_use_shadow_element_flag
						add_character_flag = no_char_use_necrotic_element_flag
					}
					else_if = {
						limit = {
							var:md_main_damage_marker = 3
							scope:md_defender.var:md_spec_effect !=2
						}
						change_variable = {
							name = pcprogress
							add = var:md_damage3
						}
						
						if = {
							limit = {
								var:md_shield = 1
							}
							if = {
								limit = {
									scope:md_defender.var:md_main_damage_marker = 3
								}
								if = {
									limit = {
										var:md_damage3 > scope:md_defender.var:md_damage3
									}
									scope:md_defender = {
										change_variable = {
											name = md_endurance_loss
											add = -1
										}
									}
									if = {
										limit = {
											scope:md_attacker = {
												OR = {
													var:md_spec_effect = 1
													var:md_spec_effect = 5
												}
											}
										}
										scope:md_defender = {
											change_variable = {
												name = md_endurance_loss
												add = -1
											}
										}
									}
								}
							}
						}
						else = {
							if = {
								limit = {
									var:md_damage3 > scope:md_defender.var:md_damage3
								}
								scope:md_defender = {
									change_variable = {
										name = md_endurance_loss
										add = -1
									}
								}
								if = {
									limit = {
										scope:md_attacker = {
											OR = {
												var:md_spec_effect = 1
												var:md_spec_effect = 5
											}
										}
									}
									scope:md_defender = {
										change_variable = {
											name = md_endurance_loss
											add = -1
										}
									}
								}
							}
						}
						add_character_flag = no_char_use_power_element_flag
						add_character_flag = no_char_use_fire_element_flag
						add_character_flag = no_char_use_shadow_element_flag
						add_character_flag = no_char_use_necrotic_element_flag
					}
					else_if = {
						limit = {
							var:md_main_damage_marker = 4
							scope:md_defender.var:md_spec_effect !=2
						}
						change_variable = {
							name = pcprogress
							add = var:md_damage4
						}
						add_character_flag = no_char_use_power_element_flag
						add_character_flag = no_char_use_fire_element_flag
						add_character_flag = no_char_use_kinetic_element_flag
						add_character_flag = no_char_use_necrotic_element_flag
					}
					else_if = {
						limit = {
							var:md_main_damage_marker = 5
							scope:md_defender.var:md_spec_effect !=2							
						}
						change_variable = {
							name = pcprogress
							add = var:md_damage5
						}
						set_variable = {
							name = md_damage5_minus
							value = var:md_damage5
						}
						change_variable = {
							name = md_damage5_minus
							multiply = -1
						}
						scope:md_defender = {
							if = {
								limit = {
									NOT = {
										has_trait = necromancer
									}
								}
								change_variable = {
									name = md_endurance_loss
									add = scope:md_attacker.var:md_damage5_minus
								}
							}
						}
						add_character_flag = no_char_use_power_element_flag
						add_character_flag = no_char_use_fire_element_flag
						add_character_flag = no_char_use_kinetic_element_flag
						add_character_flag = no_char_use_shadow_element_flag
					}
					else = {
						add_character_flag = no_char_use_power_element_flag
						add_character_flag = no_char_use_fire_element_flag
						add_character_flag = no_char_use_kinetic_element_flag
						add_character_flag = no_char_use_shadow_element_flag
						add_character_flag = no_char_use_necrotic_element_flag
					}
				}
				else = {
					if = {
						limit = {
							var:md_main_damage_marker = 1
							scope:md_defender.var:md_spec_effect = 2
						}
						set_variable = {
							name = md_damage1
							value = 0
						}
						add_character_flag = no_char_use_power_element_flag
					}
					else_if = {
						limit = {
							var:md_main_damage_marker = 2
							scope:md_defender.var:md_spec_effect = 2
						}
						set_variable = {
							name = md_damage2
							value = 0
						}
						add_character_flag = no_char_use_fire_element_flag
					}
					else_if = {
						limit = {
							var:md_main_damage_marker = 3
							scope:md_defender.var:md_spec_effect = 2
						}
						set_variable = {
							name = md_damage3
							value = 0
						}
						add_character_flag = no_char_use_kinetic_element_flag
					}
					else_if = {
						limit = {
							var:md_main_damage_marker = 4
							scope:md_defender.var:md_spec_effect = 2
						}
						set_variable = {
							name = md_damage4
							value = 0
						}
						add_character_flag = no_char_use_shadow_element_flag
					}
					else_if = {
						limit = {
							var:md_main_damage_marker = 5
							scope:md_defender.var:md_spec_effect = 2
						}
						set_variable = {
							name = md_damage5
							value = 0
						}
						add_character_flag = no_char_use_necrotic_element_flag
					}
					change_variable = {
						name = pcprogress
						add = var:md_damage1
					}
					change_variable = {
						name = pcprogress
						add = var:md_damage2
					}
					change_variable = {
						name = pcprogress
						add = var:md_damage3
					}
					change_variable = {
						name = pcprogress
						add = var:md_damage4
					}
					change_variable = {
						name = pcprogress
						add = var:md_damage5
					}
					
					if = {
						limit = {
							var:md_damage2 > 0
						}
						random = {
							chance = fire_loss_endurance_chance
							scope:md_defender = {
								change_variable = {
									name = md_endurance_loss
									add = -1
								}
								if = {
									limit = {
										scope:md_attacker = {
											OR = {
												var:md_spec_effect = 1
												var:md_spec_effect = 5
											}
										}
									}
									change_variable = {
										name = md_endurance_loss
										add = -1
									}
								}
							}
						}
					}
					if = {
						limit = {
							var:md_shield = 1
						}
						if = {
							limit = {
								scope:md_defender = {
									var:md_main_damage_marker = 3
								}
							}
							if = {
								limit = {
									var:md_damage3 > scope:md_defender.var:md_damage3
								}
								scope:md_defender = {
									change_variable = {
										name = md_endurance_loss
										add = -1
									}
									if = {
										limit = {
											scope:md_attacker = {
												OR = {
													var:md_spec_effect = 1
													var:md_spec_effect = 5
												}
											}
										}
										change_variable = {
											name = md_endurance_loss
											add = -1
										}
									}
								}
							}
						}
						else = {
							if = {
								limit = {
									var:md_damage3 > 0
								}
								scope:md_defender = {
									change_variable = {
										name = md_endurance_loss
										add = -1
									}
									if = {
										limit = {
											scope:md_attacker = {
												OR = {
													var:md_spec_effect = 1
													var:md_spec_effect = 5
												}
											}
										}
										change_variable = {
											name = md_endurance_loss
											add = -1
										}
									}
								}
							}
						}
					}
					else = {
						if = {
							limit = {
								var:md_damage3 > scope:md_defender.var:md_damage3
							}
							scope:md_defender = {
								change_variable = {
									name = md_endurance_loss
									add = -1
								}
								if = {
									limit = {
										scope:md_attacker = {
											OR = {
												var:md_spec_effect = 1
												var:md_spec_effect = 5
											}
										}
									}
									change_variable = {
										name = md_endurance_loss
										add = -1
									}
								}
							}
						}
					}
					if = {
						limit = {
							var:md_damage5 > 0
						}
						set_variable = {
							name = md_damage5_minus
							value = var:md_damage5
						}
						change_variable = {
							name = md_damage5_minus
							multiply = -1
						}
						scope:md_defender = {
							if = {
								limit = {
									NOT = {
										has_trait = necromancer
									}
								}
								change_variable = {
									name = md_endurance_loss
									add = scope:md_attacker.var:md_damage5_minus
								}
							}
						}
					}
					if = {
						limit = {
							var:md_spec_effect = 7
							scope:md_defender = {
								NAND = {
									has_trait = cancer
									has_trait = consumption
									has_trait = bubonic_plague
									has_trait = typhus
								}
							}
						}
						scope:md_defender = {
							random_list = {
								1 = {
									trigger = {
										NOT = { has_trait = cancer }
									}
									send_interface_toast = {
										title = magic_special_duel_effect_ct7_title
										add_trait = cancer
									}
								}
								1 = {
									trigger = {
										NOT = { has_trait = consumption }
									}
									send_interface_toast = {
										title = magic_special_duel_effect_ct7_title
										add_trait = consumption
									}
								}
								1 = {
									trigger = {
										NOT = { has_trait = bubonic_plague }
									}
									send_interface_toast = {
										title = magic_special_duel_effect_ct7_title
										add_trait = bubonic_plague
									}
								}
								1 = {
									trigger = {
										NOT = { has_trait = typhus }
									}
									send_interface_toast = {
										title = magic_special_duel_effect_ct7_title
										add_trait = typhus
									}
									
								}
							}
						}
					}
					if = {
						limit = {
							var:md_spec_effect = 8
						}
						scope:md_defender = {
							send_interface_toast = {
								title = magic_special_duel_effect_ct8_title
								if = {
									limit = {
										has_trait = strong
									}
									remove_trait = strong
								}
								else = {
									add_trait = weak
								}
							}
						}
					}
				}
				set_variable = {
					name = pcprogress_minus
					value = var:pcprogress
				}
				change_variable = {
					name = pcprogress_minus
					multiply = -1
				}
				if = {
					limit = {
						scope:md_defender.var:md_spec_effect = 3
					}
					set_variable = {
						name = temp_stress_level
						value = stress_level
					}
					send_interface_toast = {
						title = mental_strike_title
						left_icon = scope:md_attacker
						right_icon = scope:md_defender
						if = {
							limit = {
								scope:md_defender = {
									has_character_modifier = master_psionic_modifier
								}
							}
							add_stress = massive_stress_gain
						}
						else = {
							add_stress = major_stress_gain
						}
						if = {
							limit = {
								stress_level > var:temp_stress_level
								var:md_spec_effect != 6
							}
							custom_tooltip = magic_special_duel_effect_ct3_notif
						}
					}
					if = {
						limit = {
							stress_level > var:temp_stress_level
							var:md_spec_effect != 6
						}
						change_variable = {
							name = md_endurance_loss
							add = -1
						}
					}
					remove_variable = temp_stress_level
				}
				if = {
					limit = {
						scope:md_defender.var:md_spec_effect = 2
						var:md_main_damage_marker > 0
					}
					send_interface_toast = {
						title = magic_special_duel_effect_ct2_title
						left_icon = scope:md_attacker
						right_icon = scope:md_defender
						if = {
							limit = {
								scope:md_defender.var:md_shield = 1
							}
							custom_tooltip = magic_special_duel_effect_ct2_notif
						}
						else = {
							custom_tooltip = magic_special_duel_effect_ct2B_notif
						}
					}
				}
			}
			scope:md_defender = {
				if = {
					limit = {
						scope:md_attacker.var:md_spec_effect = 4
					}
					if = {
						limit = {
							NOR = {
								has_trait = blind
								var:md_shield = 1
							}
						}
						random = {
							chance = 10
							add_character_flag = blinded_in_md
						}
					}
					send_interface_toast = {
						title = magic_special_duel_effect_ct4_title
						left_icon = scope:md_defender
						right_icon = scope:md_attacker
						if = {
							limit = {
								var:md_damage4 > 0
							}
							custom_tooltip = magic_special_duel_effect_ct4a_notif
						}
						if = {
							limit = {
								var:lshadow > 0
							}
							custom_tooltip = magic_special_duel_effect_ct4b_notif
						}
						if = {
							limit = {
								NOT = {
									has_trait = blind
								}
							}
							add_stress = minor_stress_gain
							if = {
								limit = {
									has_character_flag = blinded_in_md
								}
								add_trait = blind
								remove_character_flag = blinded_in_md
							}
						}
					}
					remove_variable = md_damage4
					set_variable = {
						name = md_damage4
						value = 0
					}
					add_character_flag = no_char_use_shadow_element_flag
				}
				if = {
					limit = {
						scope:md_attacker.var:md_shield = 1
					}
					if = {
						limit = {
							var:md_main_damage_marker = 1
							scope:md_attacker.var:md_spec_effect !=2
						}
						change_variable = {
							name = pcprogress
							add = var:md_damage1
						}
						add_character_flag = no_char_use_fire_element_flag
						add_character_flag = no_char_use_kinetic_element_flag
						add_character_flag = no_char_use_shadow_element_flag
						add_character_flag = no_char_use_necrotic_element_flag
					}
					else_if = {
						limit = {
							var:md_main_damage_marker = 2
							scope:md_attacker.var:md_spec_effect !=2
						}
						change_variable = {
							name = pcprogress
							add = var:md_damage2
						}
						random = {
							chance = fire_loss_endurance_chance
							scope:md_attacker = {
								change_variable = {
									name = md_endurance_loss
									add = -1
								}
								if = {
									limit = {
										scope:md_defender = {
											OR = {
												var:md_spec_effect = 1
												var:md_spec_effect = 5
											}
										}
									}
									change_variable = {
										name = md_endurance_loss
										add = -1
									}
								}
							}
						}
						add_character_flag = no_char_use_power_element_flag
						add_character_flag = no_char_use_kinetic_element_flag
						add_character_flag = no_char_use_shadow_element_flag
						add_character_flag = no_char_use_necrotic_element_flag
					}
					else_if = {
						limit = {
							var:md_main_damage_marker = 3
							scope:md_attacker.var:md_spec_effect !=2
						}
						change_variable = {
							name = pcprogress
							add = var:md_damage3
						}
						if = {
							limit = {
								var:md_shield = 1
							}
							if = {
								limit = {
									scope:md_attacker = {
										var:md_main_damage_marker = 3
									}
								}
								if = {
									limit = {
										var:md_damage3 > scope:md_attacker.var:md_damage3
									}
									scope:md_attacker = {
										change_variable = {
											name = md_endurance_loss
											add = -1
										}
										if = {
											limit = {
												scope:md_defender = {
													OR = {
														var:md_spec_effect = 1
														var:md_spec_effect = 5
													}
												}
											}
											change_variable = {
												name = md_endurance_loss
												add = -1
											}
										}
									}
								}
							}
						}
						else = {
							if = {
								limit = {
									var:md_damage3 > scope:md_attacker.var:md_damage3
								}
								scope:md_attacker = {
									change_variable = {
										name = md_endurance_loss
										add = -1
									}
									if = {
										limit = {
											scope:md_defender = {
												OR = {
													var:md_spec_effect = 1
													var:md_spec_effect = 5
												}
											}
										}
										change_variable = {
											name = md_endurance_loss
											add = -1
										}
									}
								}
							}
						}
						add_character_flag = no_char_use_power_element_flag
						add_character_flag = no_char_use_fire_element_flag
						add_character_flag = no_char_use_shadow_element_flag
						add_character_flag = no_char_use_necrotic_element_flag
					}
					else_if = {
						limit = {
							var:md_main_damage_marker = 4
							scope:md_attacker.var:md_spec_effect !=2
						}
						change_variable = {
							name = pcprogress
							add = var:md_damage4
						}
						add_character_flag = no_char_use_power_element_flag
						add_character_flag = no_char_use_fire_element_flag
						add_character_flag = no_char_use_kinetic_element_flag
						add_character_flag = no_char_use_necrotic_element_flag
					}
					else_if = {
						limit = {
							var:md_main_damage_marker = 5
							scope:md_attacker.var:md_spec_effect !=2
						}
						change_variable = {
							name = pcprogress
							add = var:md_damage5
						}
						set_variable = {
							name = md_damage5_minus
							value = var:md_damage5
						}
						change_variable = {
							name = md_damage5_minus
							multiply = -1
						}
						scope:md_attacker = {
							if = {
								limit = {
									NOT = {
										has_trait = necromancer
									}
								}
								change_variable = {
									name = md_endurance_loss
									add = scope:md_defender.var:md_damage5_minus
								}
							}
						}
						add_character_flag = no_char_use_power_element_flag
						add_character_flag = no_char_use_fire_element_flag
						add_character_flag = no_char_use_kinetic_element_flag
						add_character_flag = no_char_use_shadow_element_flag
					}
					else = {
						add_character_flag = no_char_use_power_element_flag
						add_character_flag = no_char_use_fire_element_flag
						add_character_flag = no_char_use_kinetic_element_flag
						add_character_flag = no_char_use_shadow_element_flag
						add_character_flag = no_char_use_necrotic_element_flag
					}
				}
				else = {
					if = {
						limit = {
							var:md_main_damage_marker = 1
							scope:md_attacker.var:md_spec_effect =2
						}
						set_variable = {
							name = md_damage1
							value = 0
						}
						add_character_flag = no_char_use_power_element_flag
					}
					else_if = {
						limit = {
							var:md_main_damage_marker = 2
							scope:md_attacker.var:md_spec_effect =2
						}
						set_variable = {
							name = md_damage2
							value = 0
						}
						add_character_flag = no_char_use_fire_element_flag
					}
					else_if = {
						limit = {
							var:md_main_damage_marker = 3
							scope:md_attacker.var:md_spec_effect =2
						}
						set_variable = {
							name = md_damage3
							value = 0
						}
						add_character_flag = no_char_use_kinetic_element_flag
					}
					else_if = {
						limit = {
							var:md_main_damage_marker = 4
							scope:md_attacker.var:md_spec_effect =2
						}
						set_variable = {
							name = md_damage4
							value = 0
						}
						add_character_flag = no_char_use_shadow_element_flag
					}
					else_if = {
						limit = {
							var:md_main_damage_marker = 5
							scope:md_attacker.var:md_spec_effect =2
						}
						set_variable = {
							name = md_damage5
							value = 0
						}
						add_character_flag = no_char_use_necrotic_element_flag
					}
					change_variable = {
						name = pcprogress
						add = var:md_damage1
					}
					change_variable = {
						name = pcprogress
						add = var:md_damage2
					}
					change_variable = {
						name = pcprogress
						add = var:md_damage3
					}
					change_variable = {
						name = pcprogress
						add = var:md_damage4
					}
					change_variable = {
						name = pcprogress
						add = var:md_damage5
					}
					random = {
						chance = fire_loss_endurance_chance
						scope:md_attacker = {
							change_variable = {
								name = md_endurance_loss
								add = -1
							}
							if = {
								limit = {
									scope:md_defender = {
										OR = {
											var:md_spec_effect = 1
											var:md_spec_effect = 5
										}
									}
								}
								change_variable = {
									name = md_endurance_loss
									add = -1
								}
							}
						}
					}
					if = {
						limit = {
							var:md_shield = 1
						}
						if = {
							limit = {
								scope:md_attacker = {
									var:md_main_damage_marker = 3
								}
							}
							if = {
								limit = {
									var:md_damage3 > scope:md_attacker.var:md_damage3
								}
								scope:md_attacker = {
									change_variable = {
										name = md_endurance_loss
										add = -1
									}
									if = {
										limit = {
											scope:md_defender = {
												OR = {
													var:md_spec_effect = 1
													var:md_spec_effect = 5
												}
											}
										}
										change_variable = {
											name = md_endurance_loss
											add = -1
										}
									}
								}
							}
						}
						else = {
							if = {
								limit = {
									var:md_damage3 > 0
								}
								scope:md_attacker = {
									change_variable = {
										name = md_endurance_loss
										add = -1
									}
									if = {
										limit = {
											scope:md_defender = {
												OR = {
													var:md_spec_effect = 1
													var:md_spec_effect = 5
												}
											}
										}
										change_variable = {
											name = md_endurance_loss
											add = -1
										}
									}
								}
							}
						}
					}
					else = {
						if = {
							limit = {
								var:md_damage3 > scope:md_attacker.var:md_damage3
							}
							scope:md_attacker = {
								change_variable = {
									name = md_endurance_loss
									add = -1
								}
								if = {
									limit = {
										scope:md_defender = {
											OR = {
												var:md_spec_effect = 1
												var:md_spec_effect = 5
											}
										}
									}
									change_variable = {
										name = md_endurance_loss
										add = -1
									}
								}
							}
						}
					}
					if = {
						limit = {
							var:md_damage5 > 0
						}
						set_variable = {
							name = md_damage5_minus
							value = var:md_damage5
						}
						change_variable = {
							name = md_damage5_minus
							multiply = -1
						}
						scope:md_attacker = {
							if = {
								limit = {
									NOT = {
										has_trait = necromancer
									}
								}
								change_variable = {
									name = md_endurance_loss
									add = scope:md_defender.var:md_damage5_minus
								}
							}
						}
					}
				}
				if = {
					limit = {
						var:md_spec_effect = 7
						scope:md_attacker = {
							NAND = {
								has_trait = cancer
								has_trait = consumption
								has_trait = bubonic_plague
								has_trait = typhus
							}
						}
					}
					scope:md_attacker = {
						random_list = {
							1 = {
								trigger = {
									NOT = { has_trait = cancer }
								}
								send_interface_toast = {
									title = magic_special_duel_effect_ct7_title
									add_trait = cancer
								}
							}
							1 = {
								trigger = {
									NOT = { has_trait = consumption }
								}
								send_interface_toast = {
									title = magic_special_duel_effect_ct7_title
									add_trait = consumption
								}
							}
							1 = {
								trigger = {
									NOT = { has_trait = bubonic_plague }
								}
								send_interface_toast = {
									title = magic_special_duel_effect_ct7_title
									add_trait = bubonic_plague
								}
							}
							1 = {
								trigger = {
									NOT = { has_trait = typhus }
								}
								send_interface_toast = {
									title = magic_special_duel_effect_ct7_title
									add_trait = typhus
								}
							}
						}
					}
				}
				if = {
					limit = {
						var:md_spec_effect = 8
					}
					scope:md_attacker = {
						send_interface_toast = {
							title = magic_special_duel_effect_ct8_title
							if = {
								limit = {
									has_trait = strong
								}
								remove_trait = strong
							}
							else = {
								add_trait = weak
							}
						}
					}
				}
				set_variable = {
					name = pcprogress_minus
					value = var:pcprogress
				}
				change_variable = {
					name = pcprogress_minus
					multiply = -1
				}
				if = {
					limit = {
						scope:md_attacker.var:md_spec_effect = 3
					}
					set_variable = {
						name = temp_stress_level
						value = stress_level
					}
					send_interface_toast = {
						title = mental_strike_title
						left_icon = scope:md_defender
						right_icon = scope:md_attacker
						if = {
							limit = {
								scope:md_attacker = {
									has_character_modifier = master_psionic_modifier
								}
							}
							add_stress = massive_stress_gain
						}
						else = {
							add_stress = major_stress_gain
						}
						if = {
							limit = {
								stress_level > var:temp_stress_level
								var:md_spec_effect != 6
							}
							custom_tooltip = magic_special_duel_effect_ct3_notif
						}
					}
					if = {
						limit = {
							stress_level > var:temp_stress_level
							var:md_spec_effect != 6
						}
						change_variable = {
							name = md_endurance_loss
							add = -1
						}
					}
					remove_variable = temp_stress_level
				}
				if = {
					limit = {
						scope:md_attacker.var:md_spec_effect = 2
						var:md_main_damage_marker > 0
					}
					send_interface_toast = {
						title = magic_special_duel_effect_ct2_title
						left_icon = scope:md_defender
						right_icon = scope:md_attacker
						if = {
							limit = {
								scope:md_attacker.var:md_shield = 1
							}
							custom_tooltip = magic_special_duel_effect_ct2_notif
						}
						else = {
							custom_tooltip = magic_special_duel_effect_ct2B_notif
						}
					}
				}
			}
			scope:md_attacker = {
				change_variable = {
					name = pclash
					add = var:pcprogress
				}
				change_variable = {
					name = pclash
					add = scope:md_defender.var:pcprogress_minus
				}
				if = {
					limit = {
						var:md_shield = -2
					}
					if = {
						limit = {
							scope:md_defender = {
								any_character_artifact = {
									has_artifact_modifier = singularity_modifierX
								}
							}
						}
						change_variable = {
							name = md_endurance_loss
							add = -4
						}
					}
					else = {
						change_variable = {
							name = md_endurance_loss
							add = -3
						}
					}
				}
				if = {
					limit = {
						var:md_spec_effect = 6
						var:md_endurance_loss < 0
					}
					set_variable = {
						name = md_endurance_loss
						value = 0
					}
					scope:md_defender = {
						send_interface_toast = {
							title = magic_special_duel_effect_ct6_title
							custom_tooltip = magic_special_duel_effect_ct6
						}
					}
				}
				change_variable = {
					name = dendurance
					add = var:md_endurance_loss
				}
			}
			scope:md_defender = {
				change_variable = {
					name = pclash
					add = var:pcprogress
				}
				change_variable = {
					name = pclash
					add = scope:md_attacker.var:pcprogress_minus
				}
				if = {
					limit = {
						var:md_shield = -2
					}
					if = {
						limit = {
							scope:md_attacker = {
								any_character_artifact = {
									has_artifact_modifier = singularity_modifierX
								}
							}
						}
						change_variable = {
							name = md_endurance_loss
							add = -4
						}
					}
					else = {
						change_variable = {
							name = md_endurance_loss
							add = -3
						}
					}
				}
				if = {
					limit = {
						var:md_spec_effect = 6
						var:md_endurance_loss < 0
					}
					set_variable = {
						name = md_endurance_loss
						value = 0
					}
					scope:md_attacker = {
						send_interface_toast = {
							title = magic_special_duel_effect_ct6_title
							custom_tooltip = magic_special_duel_effect_ct6
						}
					}
				}
				change_variable = {
					name = dendurance
					add = var:md_endurance_loss
				}
				save_md_display_variables = yes
				if = {
					limit = {
						OR = {
							var:md_spec_effect = 5
							var:md_spec_effect = 9
						}
					}
					bystanders_get_hurt = yes
				}
				if = {
					limit = {
						OR = {
							has_character_flag = char_use_double_power_element_flag
							has_character_flag = char_use_double_fire_element_flag
						}
					}
					scope:md_attacker = {
						if = {
							limit = {
								var:lshadow > 0
							}
							change_variable = {
								name = lshadow
								add = -2
							}
						}
					}
				}
				increase_or_decrease_other_elements_level = yes
				if = {
					limit = {
						scope:md_attacker.var:md_spec_effect = 4
					}
					change_variable = {
						name = lshadow
						add = -3
					}
					if = {
						limit = {
							var:lshadow < 0
						}
						set_variable = {
							name = lshadow
							value = 0
						}
					}
				}
			}
			scope:md_attacker = {
				save_md_display_variables = yes
				if = {
					limit = {
						OR = {
							var:md_spec_effect = 5
							var:md_spec_effect = 9
						}
					}
					bystanders_get_hurt = yes
				}
				if = {
					limit = {
						OR = {
							has_character_flag = char_use_double_power_element_flag
							has_character_flag = char_use_double_fire_element_flag
						}
					}
					scope:md_defender = {
						if = {
							limit = {
								var:lshadow > 0
							}
							change_variable = {
								name = lshadow
								add = -2
							}
						}
					}
				}
				increase_or_decrease_other_elements_level = yes
				if = {
					limit = {
						scope:md_defender.var:md_spec_effect = 4
					}
					change_variable = {
						name = lshadow
						add = -3
					}
					if = {
						limit = {
							var:lshadow < 0
						}
						set_variable = {
							name = lshadow
							value = 0
						}
					}
				}
			}
			scope:md_attacker = {
				clear_elements_flags_effect = yes
			}
			scope:md_defender = {
				clear_elements_flags_effect = yes
			}
		}
	}
}
increase_or_decrease_other_elements_level = {
	#if = {
	#	limit = {
	#		OR = {
	#			has_character_flag = char_use_double_shadow_element_flag
	#		}
	#	}
	#	change_variable = {
	#		name = lshadow
	#		add = 2
	#	}
	#}
	if = {
		limit = {
			OR = {
				has_character_flag = char_use_shadow_element_flag
				has_character_flag = char_use_additional_shadow_element_flag
				has_character_flag = char_use_double_shadow_element_flag
			}
		}
		change_variable = {
			name = lshadow
			add = 1
		}
	}
	if = {
		limit = {
			OR = {
				var:md_shield = 1
				var:md_shield = -1
			}
		}
		if = {
			limit = {
				has_character_flag = may_use_magic_shield_free_flag
			}
			remove_character_flag = may_use_magic_shield_free_flag
		}
		#else_if = {
		#	limit = {
		#		has_trait = demon2
		#		has_trait_xp = {
		#			trait = demon2
		#			track = hell_powers
		#			value > 34
		#		}
		#		var:lpower < 1
		#	}
		#	change_variable = {
		#		name = lshadow
		#		add = -1
		#	}
		#}
		else = {
			change_variable = {
				name = lpower
				add = -1
			}
		}
	}
	if = {
		limit = {
			var:lshadow < 0
		}
		set_variable = {
			name = lshadow
			value = 0
		}
	}
}
consider_end_of_duel = {
	if = {
		limit = {
			this = scope:md_defender
			NOR = {
				has_character_flag = md_winner
				has_character_flag = md_loser
				has_character_flag = md_not_concluded
			}
		}
		if = {
			limit = {
				is_alive = no
			}
			#add_character_flag = md_loser
			scope:char2 = {
				add_character_flag = md_winner
			}
		}
		else_if = {
			limit = {
				scope:char2 = {
					is_alive = no
				}
			}
			add_character_flag = md_winner
		}
		#else_if = {
		#	limit = {
		#		has_character_flag = md_this_is_my_end
		#	}
		#	add_character_flag = md_loser
		#	scope:char2 = {
		#		add_character_flag = md_winner
		#	}
		#}
		#else_if = {
		#	limit = {
		#		scope:char2 = {
		#			has_character_flag = md_this_is_my_end
		#		}
		#	}
		#	add_character_flag = md_winner
		#	scope:char2 = {
		#		add_character_flag = md_loser
		#	}
		#}
		else_if = {
			limit = {
				var:dendurance > 0
				scope:char2.var:dendurance < 1
			}
			add_character_flag = md_winner
			scope:char2 = {
				add_character_flag = md_loser
			}
		}
		else_if = {
			limit = {
				var:dendurance < 1
				scope:char2.var:dendurance > 0
			}
			add_character_flag = md_loser
			scope:char2 = {
				add_character_flag = md_winner
			}
		}
		else_if = {
			limit = {
				var:pclash < 1
			}
			add_character_flag = md_loser
			scope:char2 = {
				add_character_flag = md_winner
			}
		}
		else_if = {
			limit = {
				var:pclash > 19
			}
			add_character_flag = md_winner
			scope:char2 = {
				add_character_flag = md_loser
			}
		}
		else_if = {
			limit = {
				var:dendurance < 1
				scope:char2.var:dendurance < 1
			}
			add_character_flag = md_not_concluded
			scope:char2 = {
				add_character_flag = md_not_concluded
			}
		}
		else_if = {
			limit = {
				var:nrround > 6
				#this = scope:md_defender
			}
			if = {
				limit = {
					var:pclash > 10
				}
				add_character_flag = md_winner
				scope:char2 = {
					add_character_flag = md_loser
				}
			}
			else_if = {
				limit = {
					var:pclash < 10
				}
				add_character_flag = md_loser
				scope:char2 = {
					add_character_flag = md_winner
				}
			}
			else_if = {
				limit = {
					var:pclash = 10
				}
				add_character_flag = md_not_concluded
				scope:char2 = {
					add_character_flag = md_not_concluded
				}
			}
		}
	}
}
add_proper_prize_for_md_winner_effect = {
	add_prestige = massive_prestige_gain
	if = {
		limit = {
			has_character_flag = fight_against_blob_flag
		}
		gain_sc_xp5_effect = yes
		remove_character_flag = fight_against_blob_flag
	}
	else = {
		gain_sc_xp1_effect = yes
	}
	if = {
		limit = {
			NOT = {
				has_character_flag = banisher_punisher_flag
			}
		}
		gain_cm_xp20_effect = yes
	}
	else = {
		gain_cm_xp1_effect = yes
	}
	if = {
		limit = {
			scope:char2 = {
				has_character_flag = asmodeus
			}
		}
		hidden_effect = {
			send_interface_toast = {
				title = asmodeus_beaten
				add_prestige = monumental_prestige_value
				if = {
					limit = {
						NOT = {
							has_character_modifier = touched_divinity_modifier
						}
					}
					add_character_modifier = {
						modifier = touched_divinity_modifier
					}
				}
			}
		}
	}
	if = {
		limit = {
			is_valid_for_legitimacy_change = yes
			culture = {
				has_cultural_tradition = mage_rulership_tradition
			}
		}
		add_legitimacy = medium_legitimacy_gain
	}
	if = {
		limit = {
			has_character_flag = blob_flag
			is_ruler = no
		}
		blob_becomes_ruler_effect = yes
	}
	if = {
		limit = {
			has_any_nickname = no
			is_a_demon_trigger = yes
			NOT = {
				has_trait = archmage
			}
			exists = scope:char2
			scope:char2 = {
				has_trait = archmage
			}
		}
		give_nickname = mageslayer_nickname
	}
	if = {
		limit = {
			exists = scope:task_contract
		}
		if = {
			limit = {
				ROOT = scope:task_contract.task_contract_taker
			}
			scope:task_contract = {
				complete_task_contract = success_standard
			}
		}
		else = {
			scope:task_contract = {
				complete_task_contract = failure_standard
			}
		}
	}
	hidden_effect = {
		if = {
			limit = {
				has_character_flag = mage_arena_flag
			}
			increment_mage_arena_challenge = yes
		}
	}
}
add_proper_prize_when_no_resolution_effect = {
	if = {
		limit = {
			has_character_flag = md_not_concluded
		}
		add_prestige = major_prestige_gain
		gain_cm_xp5_effect = yes
		if = {
			limit = {
				this = scope:md_attacker
			}
			show_as_tooltip = {
				scope:md_defender = {
					add_prestige = major_prestige_gain
					gain_cm_xp5_effect = yes
				}
			}
		}
		else = {
			show_as_tooltip = {
				scope:md_attacker = {
					add_prestige = major_prestige_gain
					gain_cm_xp5_effect = yes
				}
			}
		}
		hidden_effect = {
			if = {
				limit = {
					exists = scope:task_contract
					ROOT = scope:task_contract.task_contract_taker
				}
				scope:task_contract = {
					complete_task_contract = failure_standard
				}
			}
		}
	}
}

clear_all_md_staff_effect = {
	hidden_effect = {
		if = {
			limit = {
				is_alive = yes
			}
			clear_mage_duel_variables_effect = yes
			clear_elements_flags_effect = yes
			clear_md_display_variables = yes
			clear_mage_duel_moves = yes
			clean_winner_loser_flags = yes
		}
	}
}
clean_winner_loser_flags = {
	if = {
		limit = {
			has_character_flag = md_winner
		}
		remove_character_flag = md_winner
	}
	if = {
		limit = {
			has_character_flag = md_winner2
		}
		remove_character_flag = md_winner2
	}
	if = {
		limit = {
			has_character_flag = md_loser
		}
		remove_character_flag = md_loser
	}
	if = {
		limit = {
			has_character_flag = md_loser2
		}
		remove_character_flag = md_loser2
	}
	if = {
		limit = {
			has_character_flag = md_not_concluded
		}
		remove_character_flag = md_not_concluded
	}
	if = {
		limit = {
			has_character_flag = md_not_concluded2
		}
		remove_character_flag = md_not_concluded2
	}
}

remove_mana_after_md_effect = {
	if = {
		limit = {
			OR = {
				has_character_flag = md_winner
				has_character_flag = md_loser
				has_character_flag = md_not_concluded
			}
		}
		if = {
			limit = {
				has_trait = archmage
			}
			if = {
				limit = {
					has_trait_xp = {
						trait = archmage
						track = power_saturation
						value < md_mana_cost_value
					}
				}
				hidden_effect = {
					add_trait_xp = {
						trait = archmage
						track = power_saturation
						value = -100
					}
				}
				custom_tooltip = remove_mana_after_md_ct
			}
			else = {
				#change_variable = {
				#	name = mdmana
				#	add = md_mana_cost_value
				#}
				hidden_effect = {
					add_trait_xp = {
						trait = archmage
						track = power_saturation
						value = md_mana_cost_rev_value
					}
				}
				custom_tooltip = remove_mana_after_md_ct3
			}
		}
		else_if = {
			limit = {
				has_character_modifier = power_saturated1
			}
			remove_character_modifier = power_saturated1
		}
		if = {
			limit = {
				has_character_modifier = ultimate_spell_modifier
			}
			remove_character_modifier = ultimate_spell_modifier
		}
	}
}
win_or_lose_notification_effect = {
	#custom_tooltip = md_char1_log_info
	#custom_tooltip = md_char2_log_info
	if = {
		limit = {
			has_character_flag = md_winner
			ROOT = scope:md_attacker
		}
		if = {
			limit = {
				scope:md_defender.var:dendurance < 1
			}
			custom_tooltip = md_win_reason2
		}
		else = {
			custom_tooltip = md_win_reason
		}
	}
	else_if = {
		limit = {
			has_character_flag = md_winner
			ROOT = scope:md_defender
		}
		if = {
			limit = {
				scope:md_attacker.var:dendurance < 1
			}
			custom_tooltip = md_win_reason2
		}
		else = {
			custom_tooltip = md_win_reason
		}
	}
	else_if = {
		limit = {
			has_character_flag = md_loser
			ROOT = scope:md_attacker
		}
		if = {
			limit = {
				scope:md_attacker.var:dendurance < 1
			}
			custom_tooltip = md_lose_reason2
		}
		else = {
			custom_tooltip = md_lose_reason
		}
	}
	else_if = {
		limit = {
			has_character_flag = md_loser
			ROOT = scope:md_defender
		}
		if = {
			limit = {
				scope:md_defender.var:dendurance < 1
			}
			custom_tooltip = md_lose_reason2
		}
		else = {
			custom_tooltip = md_lose_reason
		}
	}
	else_if = {
		limit = {
			has_character_flag = md_not_concluded
			scope:md_attacker.var:dendurance < 1
			scope:md_defender.var:dendurance < 1
		}
		custom_tooltip = md_not_resolved_reason2
	}
	else_if = {
		limit = {
			has_character_flag = md_not_concluded
		}
		custom_tooltip = md_not_resolved_reason
	}
}
md_increas_magic_injury_effect = {
	hidden_effect = {
		if = {
			limit = {
				var:dendurance < 0
			}
			increas_magic_injury_effect = yes
			increas_magic_injury_effect = yes
		}
		else_if = {
			limit = {
				var:dendurance < 1
			}
			increas_magic_injury_effect = yes
		}
	}
}
increas_magic_injury_effect = {
	if = {
		limit = {
			NOR = {
				has_trait = wounded_1
				has_trait = wounded_2
				has_trait = wounded_3
			}
		}
		add_trait = wounded_1
	}
	else_if = {
		limit = {
			has_trait = wounded_1
		}
		change_trait_rank = {
			trait = wounded
			rank = 2
			max = 3
		}
	}
	else_if = {
		limit = {
			has_trait = wounded_2
		}
		change_trait_rank = {
			trait = wounded
			rank = 3
			max = 3
		}
	}
	else_if = {
		limit = {
			has_trait = wounded_3
			NOT = {
				has_trait = maimed
			}
		}
		add_trait = maimed
	}
}

md_reduce_initial_endurance_effect = {
	if = {
		limit = {
			exists = var:dendurance
			OR = {
				has_trait = wounded_2
				has_trait = wounded_3
				has_trait = maimed
				has_trait = ill
				AND = {
					NOT = { is_a_demon_trigger = yes }
					has_trait = leper
				}
				has_trait = infirm
				has_trait = incapable
				has_trait = gout_ridden
				has_trait = consumption
				has_trait = cancer
				has_trait = typhus
				has_trait = bubonic_plague
				has_trait = pneumonic
				has_trait = measles
				has_trait = dysentery
				has_trait = ergotism
			}
		}
		change_variable = {
			name = dendurance
			add = -1
		}
		send_interface_toast = {
			title = mage_duel
			custom_tooltip = md_reduce_initial_ct
		}
	}
}
bystanders_get_hurt = {
	location = {
		every_character_in_location = {
			limit = {
				NOR = {
					this = scope:md_attacker
					this = scope:md_defender
				}
				is_powerful_being = no
			}
			random = {
				chance = 20
				increas_magic_injury_effect = yes
			}
		}
	}
}
prepare_custom_spell_effect = {
	if = {
		limit = {
			var:my_cs_slot1 = 1
		}
		use_power_damage_effect = { T = 1 }
	}
	else_if = {
		limit = {
			var:my_cs_slot1 = 2
		}
		use_fire_damage_effect = { T = 1 }
	}
	else_if = {
		limit = {
			var:my_cs_slot1 = 3
		}
		use_kinetic_damage_effect = { T = 1 }
	}
	else_if = {
		limit = {
			var:my_cs_slot1 = 4
		}
		use_shadow_damage_effect = { T = 1 }
	}
	else_if = {
		limit = {
			var:my_cs_slot1 = 5
		}
		use_necrotic_damage_effect = { T = 1 }
	}
	if = {
		limit = {
			var:my_cs_slot2 = 1
			var:my_cs_slot3 = 1
		}
		use_power_damage_effect = { T = 7 }
	}
	else_if = {
		limit = {
			var:my_cs_slot2 = 2
			var:my_cs_slot3 = 2
		}
		use_fire_damage_effect = { T = 7 }
	}
	else_if = {
		limit = {
			var:my_cs_slot2 = 3
			var:my_cs_slot3 = 3
		}
		use_kinetic_damage_effect = { T = 7 }
	}
	else_if = {
		limit = {
			var:my_cs_slot2 = 4
			var:my_cs_slot3 = 4
		}
		use_shadow_damage_effect = { T = 7 }
	}
	else_if = {
		limit = {
			var:my_cs_slot2 = 5
			var:my_cs_slot3 = 5
		}
		use_necrotic_damage_effect = { T = 7 }
	}
	else_if = {
		limit = {
			var:my_cs_slot2 = 1
		}
		use_power_damage_effect = { T = 2 }
	}
	else_if = {
		limit = {
			var:my_cs_slot2 = 2
		}
		use_fire_damage_effect = { T = 2 }
	}
	else_if = {
		limit = {
			var:my_cs_slot2 = 3
		}
		use_kinetic_damage_effect = { T = 2 }
	}
	else_if = {
		limit = {
			var:my_cs_slot2 = 4
		}
		use_shadow_damage_effect = { T = 2 }
	}
	else_if = {
		limit = {
			var:my_cs_slot2 = 5
		}
		use_necrotic_damage_effect = { T = 2 }
	}
	if = {
		limit = {
			var:my_cs_slot2 != 1
			var:my_cs_slot3 = 1
		}
		use_power_damage_effect = { T = 5 }
	}
	else_if = {
		limit = {
			var:my_cs_slot2 != 2
			var:my_cs_slot3 = 2
		}
		use_fire_damage_effect = { T = 5 }
	}
	else_if = {
		limit = {
			var:my_cs_slot2 != 3
			var:my_cs_slot3 = 3
		}
		use_kinetic_damage_effect = { T = 5 }
	}
	else_if = {
		limit = {
			var:my_cs_slot2 != 4
			var:my_cs_slot3 = 4
		}
		use_shadow_damage_effect = { T = 5 }
	}
	else_if = {
		limit = {
			var:my_cs_slot2 != 5
			var:my_cs_slot3 = 5
		}
		use_necrotic_damage_effect = { T = 5 }
	}
	else_if = {
		limit = {
			var:my_cs_slot3 = 6
		}
		use_magic_shield_effect = { S = 2 }
	}
}
prepare_custom_spell2_effect = {
	if = {
		limit = {
			var:my_cs_slot1b = 1
		}
		use_power_damage_effect = { T = 1 }
	}
	else_if = {
		limit = {
			var:my_cs_slot1b = 2
		}
		use_fire_damage_effect = { T = 1 }
	}
	else_if = {
		limit = {
			var:my_cs_slot1b = 3
		}
		use_kinetic_damage_effect = { T = 1 }
	}
	else_if = {
		limit = {
			var:my_cs_slot1b = 4
		}
		use_shadow_damage_effect = { T = 1 }
	}
	else_if = {
		limit = {
			var:my_cs_slot1b = 5
		}
		use_necrotic_damage_effect = { T = 1 }
	}
	if = {
		limit = {
			var:my_cs_slot2b = 1
			var:my_cs_slot3b = 1
		}
		use_power_damage_effect = { T = 7 }
	}
	else_if = {
		limit = {
			var:my_cs_slot2b = 2
			var:my_cs_slot3b = 2
		}
		use_fire_damage_effect = { T = 7 }
	}
	else_if = {
		limit = {
			var:my_cs_slot2b = 3
			var:my_cs_slot3b = 3
		}
		use_kinetic_damage_effect = { T = 7 }
	}
	else_if = {
		limit = {
			var:my_cs_slot2b = 4
			var:my_cs_slot3b = 4
		}
		use_shadow_damage_effect = { T = 7 }
	}
	else_if = {
		limit = {
			var:my_cs_slot2b = 5
			var:my_cs_slot3b = 5
		}
		use_necrotic_damage_effect = { T = 7 }
	}
	else_if = {
		limit = {
			var:my_cs_slot2b = 1
		}
		use_power_damage_effect = { T = 2 }
	}
	else_if = {
		limit = {
			var:my_cs_slot2b = 2
		}
		use_fire_damage_effect = { T = 2 }
	}
	else_if = {
		limit = {
			var:my_cs_slot2b = 3
		}
		use_kinetic_damage_effect = { T = 2 }
	}
	else_if = {
		limit = {
			var:my_cs_slot2b = 4
		}
		use_shadow_damage_effect = { T = 2 }
	}
	else_if = {
		limit = {
			var:my_cs_slot2b = 5
		}
		use_necrotic_damage_effect = { T = 2 }
	}
	if = {
		limit = {
			var:my_cs_slot2b != 1
			var:my_cs_slot3b = 1
		}
		use_power_damage_effect = { T = 5 }
	}
	else_if = {
		limit = {
			var:my_cs_slot2b != 2
			var:my_cs_slot3b = 2
		}
		use_fire_damage_effect = { T = 5 }
	}
	else_if = {
		limit = {
			var:my_cs_slot2b != 3
			var:my_cs_slot3b = 3
		}
		use_kinetic_damage_effect = { T = 5 }
	}
	else_if = {
		limit = {
			var:my_cs_slot2b != 4
			var:my_cs_slot3b = 4
		}
		use_shadow_damage_effect = { T = 5 }
	}
	else_if = {
		limit = {
			var:my_cs_slot2b != 5
			var:my_cs_slot3b = 5
		}
		use_necrotic_damage_effect = { T = 5 }
	}
	else_if = {
		limit = {
			var:my_cs_slot3b = 6
		}
		use_magic_shield_effect = { S = 2 }
	}
}
select_ai_strategy_effect = {
	hidden_effect = {
		if = {
			limit = {
				is_ai = yes
				NOR = {
					has_character_flag = md_winner
					has_character_flag = md_loser
					has_character_flag = md_not_concluded
				}
			}
			random_list = {
				1 = {
					trigger = {
						OR = {
							AND = {
								var:lpower > 0
								var:lpower >= scope:char2.var:lpower
								var:pclash > 10
							}
							var:lpower > 1
						}
					}
					add_character_flag = md_ai_strat_clash
				}
				1 = {
					add_character_flag = md_ai_strat_endurance
				}
				20 = {
					trigger = {
						scope:char2.overall_magic_power_p1_value < overall_magic_power_value
						var:lpower > 3
						var:lfire > 3
						var:dendurance > 3
					}
					add_character_flag = md_ai_strat_clash
				}
				10 = {
					trigger = {
						var:lpower >= scope:char2.var:lpower
						OR = {
							var:nrround < 2
							AND = {
								var:dendurance > 2
								var:pclash > 9
							}
						}
					}
					add_character_flag = md_ai_strat_clash
				}
				90 = {
					trigger = {
						overall_magic_power_p1_value < scope:char2.overall_magic_power_value
						scope:char2.var:dendurance > 3
						var:lpower > 2
						var:dendurance > 2
					}
					add_character_flag = md_ai_strat_clash
				}
				10 = {
					trigger = {
						OR = {
							AND = {
								scope:char2.var:dendurance < 3
								var:nrround < 7
							}
							AND = {
								scope:char2.var:dendurance < 2
								var:nrround > 6
							}
							AND = {
								scope:char2.var:dendurance < 3
								has_character_flag = mage_duel_type4
							}
							AND = {
								scope:char2.var:dendurance < 3
								has_character_flag = mage_duel_type5
								can_cast_firestorm_trigger = yes
							}
						}
						
						#var:dendurance > 2
						OR = {
							var:dendurance > scope:char2.var:dendurance
							var:dendurance > 2
						}
					}
					add_character_flag = md_ai_strat_endurance
				}
				10 = {
					trigger = {
						OR = {
							var:dendurance < 3
							scope:char2 = {
								has_character_flag = may_use_singularity_md_flag
							}
							AND = {
								overall_magic_power_p1_value < scope:char2.overall_magic_power_value
								var:nrround > 1
							}
						}
						OR = {
							var:lpower > 0
							has_character_flag = may_use_magic_shield_free_flag
						}
						OR = {
							var:nrround > 1
							scope:char2.var:lnecrotic > 0
							scope:char2 = {
								has_character_flag = may_use_singularity_md_flag
							}
						}
					}
					add_character_flag = md_ai_strat_shield
				}
				10 = {
					trigger = {
						OR = {
							var:nrround = 1
							AND = {
								var:nrround = 2
								var:lshadow > 0
							}
							AND = {
								var:nrround = 3
								var:lshadow > 1
							}
							var:lshadow > 2
						}
						var:dendurance > 2
						NOR = {
							overall_magic_power_p1_value < scope:char2.overall_magic_power_value
							scope:char2.var:lpower > 3
							scope:char2.var:lfire > 3
						}
					}
					add_character_flag = md_ai_strat_clash2
				}
			}
		}
	}
}
clear_ai_strategy_effect = {
	hidden_effect = {
		if = {
			limit = {
				has_character_flag = md_ai_strat_clash
			}
			remove_character_flag = md_ai_strat_clash
		}
		if = {
			limit = {
				has_character_flag = md_ai_strat_endurance
			}
			remove_character_flag = md_ai_strat_endurance
		}
		if = {
			limit = {
				has_character_flag = md_ai_strat_shield
			}
			remove_character_flag = md_ai_strat_shield
		}
		if = {
			limit = {
				has_character_flag = md_ai_strat_clash2
			}
			remove_character_flag = md_ai_strat_clash2
		}
	}
}
extra_output_event_effect = {
	if = {
		limit = {
			exists = scope:demon_annihilator
			THIS = scope:demon_annihilator
		}
		trigger_event = magic_ev10.29
		if = {
			limit = {
				exists = scope:liege0
				exists = scope:aprotector
				scope:liege0 = {
					is_alive = yes
				}
				NOT = {
					scope:liege0 = scope:aprotector
				}
			}
			scope:liege0 = {
				send_interface_toast = {
					title = extra_output_event_ct
					left_icon = scope:demon_annihilator
					right_icon = scope:aprotector
				}
			}
		}
	}
}