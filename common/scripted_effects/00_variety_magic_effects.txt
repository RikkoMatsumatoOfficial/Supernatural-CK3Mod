gain_standard_ps_effect = {
	if = {
		limit = {
			has_trait = archmage
		}
		add_trait_xp = {
			trait = archmage
			track = power_saturation
			value = gain_standard_ps_value
		}
	}
	else_if = {
		limit = {
			NOR = {
				has_character_modifier = power_saturated1
				has_character_modifier = power_saturated2
				has_character_modifier = magic_flu_modifier
				has_character_modifier = antimagic_seal_modifier
			}
		}
		add_character_modifier = power_saturated1
	}
}

gain_source_ps_effect = {
	if = {
		limit = {
			has_trait = archmage
		}
		add_trait_xp = {
			trait = archmage
			track = power_saturation
			value = { gain_source_ps_value gain_huge_ps_value }
		}
	}
	else_if = {
		limit = {
			NOR = {
				has_character_modifier = power_saturated1
				has_character_modifier = power_saturated2
				has_character_modifier = magic_flu_modifier
				has_character_modifier = antimagic_seal_modifier
			}
		}
		add_character_modifier = power_saturated1
	}
}

gain_huge_ps_effect = {
	if = {
		limit = {
			has_trait = archmage
		}
		add_trait_xp = {
			trait = archmage
			track = power_saturation
			value = gain_huge_ps_value
		}
	}
	else_if = {
		limit = {
			NOR = {
				has_character_modifier = power_saturated1
				has_character_modifier = power_saturated2
				has_character_modifier = magic_flu_modifier
				has_character_modifier = antimagic_seal_modifier
			}
		}
		add_character_modifier = power_saturated1
	}
}

spend_standard_ps_effect = {
	if = {
		limit = {
			OR = {
				has_character_modifier = power_saturated1
				has_character_modifier = power_saturated2
			}
		}
		if = { limit = { has_character_modifier = power_saturated1 }
			remove_character_modifier = power_saturated1
		}
		if = { limit = { has_character_modifier = power_saturated2 }
			remove_character_modifier = power_saturated2
		}
	}
	else_if = {
		limit = {
			has_trait = archmage
		}
		custom_tooltip = mana_loss_ct
		hidden_effect = {
			add_trait_xp = {
				trait = archmage
				track = power_saturation
				value = -10
			}
		}
	}
}
spend_huge_ps_effect = {
	if = {
		limit = {
			has_trait = archmage
		}
		custom_tooltip = mana_loss_ct2
		hidden_effect = {
			add_trait_xp = {
				trait = archmage
				track = power_saturation
				value = -20
			}
		}
	}
}

spend_minor_ps_effect = {
	if = {
		limit = {
			OR = {
				has_character_modifier = power_saturated1
				has_character_modifier = power_saturated2
			}
		}
		if = { limit = { has_character_modifier = power_saturated1 }
			remove_character_modifier = power_saturated1
		}
		if = { limit = { has_character_modifier = power_saturated2 }
			remove_character_modifier = power_saturated2
		}
	}
	else_if = {
		limit = {
			has_trait = archmage
		}
		custom_tooltip = mana_minor_loss_ct
		hidden_effect = {
			add_trait_xp = {
				trait = archmage
				track = power_saturation
				value = -5
			}
		}
	}
}

gain_cm_xp1_effect = {
	if = {
		limit = {
			is_true_mage = yes
			has_trait_xp = {
				trait = archmage
				track = combat_magic
				value < 100
			}
		}
		add_trait_xp = {
			trait = archmage
			track = combat_magic
			value = 1
		}
	}
}
gain_cm_xp5_effect = {
	if = {
		limit = {
			is_true_mage = yes
			has_trait_xp = {
				trait = archmage
				track = combat_magic
				value < 100
			}
		}
		add_trait_xp = {
			trait = archmage
			track = combat_magic
			value = 5
		}
	}
}
gain_cm_xp20_effect = {
	if = {
		limit = {
			is_true_mage = yes
			has_trait_xp = {
				trait = archmage
				track = combat_magic
				value < 100
			}
		}
		add_trait_xp = {
			trait = archmage
			track = combat_magic
			value = 20
		}
	}
}
gain_al_xp_small_effect = {
	if = {
		limit = {
			is_true_mage = yes
			has_trait_xp = {
				trait = archmage
				track = alchemy
				value < 100
			}
		}
		add_trait_xp = {
			trait = archmage
			track = alchemy
			value = gain_standard_alchemy_value
		}
	}
}
gain_al_xp_huge_effect = {
	if = {
		limit = {
			is_true_mage = yes
		}
		add_trait_xp = {
			trait = archmage
			track = alchemy
			value = 25
		}
	}
}
gain_sc_xp1_effect = {
	if = {
		limit = {
			is_true_mage = yes
			has_trait_xp = {
				trait = archmage
				track = secret_knowledge
				value < 100
			}
		}
		add_trait_xp = {
			trait = archmage
			track = secret_knowledge
			value = 1
		}
	}
}

gain_sc_xp2_effect = {
	if = {
		limit = {
			is_true_mage = yes
			has_trait_xp = {
				trait = archmage
				track = secret_knowledge
				value < 100
			}
		}
		add_trait_xp = {
			trait = archmage
			track = secret_knowledge
			value = 2
		}
	}
}

gain_sc_xp5_effect = {
	if = {
		limit = {
			is_true_mage = yes
			has_trait_xp = {
				trait = archmage
				track = secret_knowledge
				value < 100
			}
		}
		add_trait_xp = {
			trait = archmage
			track = secret_knowledge
			value = 5
		}
	}
}

gain_sc_xp10_effect = {
	if = {
		limit = {
			is_true_mage = yes
			has_trait_xp = {
				trait = archmage
				track = secret_knowledge
				value < 100
			}
		}
		add_trait_xp = {
			trait = archmage
			track = secret_knowledge
			value = 10
		}
	}
}

gain_sc_xp20_effect = {
	if = {
		limit = {
			is_true_mage = yes
			has_trait_xp = {
				trait = archmage
				track = secret_knowledge
				value < 100
			}
		}
		add_trait_xp = {
			trait = archmage
			track = secret_knowledge
			value = 20
		}
	}
}

gain_demonology_standard_effect = {
	if = {
		limit = {
			is_true_mage = yes
			has_trait_xp = {
				trait = archmage
				track = demonology
				value < 100
			}
		}
		add_trait_xp = {
			trait = archmage
			track = demonology
			value = gain_standard_demonology_value
		}
	}
}
gain_demonology_or_sc_standard_effect = {
	if = {
		limit = {
			is_true_mage = yes
			has_trait_xp = {
				trait = archmage
				track = demonology
				value < 100
			}
		}
		add_trait_xp = {
			trait = archmage
			track = demonology
			value = gain_standard_demonology_value
		}
	}
	else_if = {
		limit = {
			is_true_mage = yes
			has_trait_xp = {
				trait = archmage
				track = secret_knowledge
				value < 100
			}
			NAND = {
				has_character_flag = ms_met_belial
				has_character_flag = ms_met_mammon
				has_character_flag = ms_met_samael
				has_character_flag = ms_met_hecate
				has_character_flag = ms_met_nyx
			}
		}
		add_trait_xp = {
			trait = archmage
			track = secret_knowledge
			value = 1
		}
	}
}

send_message_4_magic_sense_effect = {
	hidden_effect = {
		if = {
			limit = {
				NOT = {
					exists = scope:magic_user
				}
			}
			save_scope_as = magic_user
		}
		if = {
			limit = {
				scope:magic_user = {
					is_legendary_mage_trigger = yes
				}
			}
			every_living_character = {
				limit = {
					NOT = { THIS = scope:magic_user }
					is_legendary_mage_trigger = yes
					has_perk = magical_senses_perk
					NOT = { has_character_flag = got_magic_senses_notyfication_flag }
				}
				add_character_flag = {
					flag = got_magic_senses_notyfication_flag
					days = 5
				}
				trigger_event = magic_ev.4
			}
		}
		else = {
			if = {
				limit = {
					exists = location
				}
				location = {
					every_character_in_location = {
						limit = {
							has_perk = magical_senses_perk
							NOT = { has_character_flag = got_magic_senses_notyfication_flag }
							NOT = { THIS = scope:magic_user }
							trigger_if = {
								limit = {
									exists = scope:magic_counterer
								}
								NOT = { THIS = scope:magic_counterer }
							}
							trigger_if = {
								limit = {
									exists = scope:actor
								}
								NOT = { THIS = scope:actor }
							}
							trigger_if = {
								limit = {
									exists = scope:recipient
								}
								NOT = { THIS = scope:recipient }
							}
						}
						add_character_flag = {
							flag = got_magic_senses_notyfication_flag
							days = 5
						}
						trigger_event = magic_ev.4
					}
				}
			}
			random = {
				chance = 95
				every_vassal = {
					limit = {
						has_perk = magical_senses_perk
					}
					if = {
						limit = {
							NOT = { has_character_flag = got_magic_senses_notyfication_flag }
							NOT = { THIS = scope:magic_user }
							trigger_if = {
								limit = {
									exists = scope:magic_counterer
								}
								NOT = { THIS = scope:magic_counterer }
							}
							trigger_if = {
								limit = {
									exists = scope:actor
								}
								NOT = { THIS = scope:actor }
							}
							trigger_if = {
								limit = {
									exists = scope:recipient
								}
								NOT = { THIS = scope:recipient }
							}
						}
						add_character_flag = {
							flag = got_magic_senses_notyfication_flag
							days = 5
						}
						trigger_event = magic_ev.4
					}
					
					every_courtier_or_guest = {
						limit = {
							has_perk = magical_senses_perk
							NOT = { THIS = scope:magic_user }
							trigger_if = {
								limit = {
									exists = scope:magic_counterer
								}
								NOT = { THIS = scope:magic_counterer }
							}
							trigger_if = {
								limit = {
									exists = scope:actor
								}
								NOT = { THIS = scope:actor }
							}
							trigger_if = {
								limit = {
									exists = scope:recipient
								}
								NOT = { THIS = scope:recipient }
							}
						}
						if = {
							limit = {
								NOT = { has_character_flag = got_magic_senses_notyfication_flag }
							}
							add_character_flag = {
								flag = got_magic_senses_notyfication_flag
								days = 5
							}
							trigger_event = magic_ev.4
						}
					}
				}
				if = {
					limit = {
						is_independent_ruler = no
					}
					liege = {
						if = {
							limit = {
								has_perk = magical_senses_perk
								NOT = { has_character_flag = got_magic_senses_notyfication_flag }
								NOT = { THIS = scope:magic_user }
								trigger_if = {
									limit = {
										exists = scope:magic_counterer
									}
									NOT = { THIS = scope:magic_counterer }
								}
								trigger_if = {
									limit = {
										exists = scope:actor
									}
									NOT = { THIS = scope:actor }
								}
								trigger_if = {
									limit = {
										exists = scope:recipient
									}
									NOT = { THIS = scope:recipient }
								}
							}
							add_character_flag = {
								flag = got_magic_senses_notyfication_flag
								days = 5
							}
							trigger_event = magic_ev.4
						}
						
						every_courtier_or_guest = {
							limit = {
								has_perk = magical_senses_perk
								NOT = { has_character_flag = got_magic_senses_notyfication_flag }
								NOT = { THIS = scope:magic_user }
								trigger_if = {
									limit = {
										exists = scope:magic_counterer
									}
									NOT = { THIS = scope:magic_counterer }
								}
								trigger_if = {
									limit = {
										exists = scope:actor
									}
									NOT = { THIS = scope:actor }
								}
								trigger_if = {
									limit = {
										exists = scope:recipient
									}
									NOT = { THIS = scope:recipient }
								}
							}
							add_character_flag = {
								flag = got_magic_senses_notyfication_flag
								days = 5
							}
							trigger_event = magic_ev.4
						}
					}
				}
				if = {
					limit = {
						is_ruler = yes
						is_landed = yes
						any_held_title = {
							tier > tier_barony
						}
					}
					every_neighboring_realm_same_rank_owner = {
						limit = {
							has_perk = magical_senses_perk
							NOT = { has_character_flag = got_magic_senses_notyfication_flag }
							NOT = { THIS = scope:magic_user }
							trigger_if = {
								limit = {
									exists = scope:magic_counterer
								}
								NOT = { THIS = scope:magic_counterer }
							}
							trigger_if = {
								limit = {
									exists = scope:actor
								}
								NOT = { THIS = scope:actor }
							}
							trigger_if = {
								limit = {
									exists = scope:recipient
								}
								NOT = { THIS = scope:recipient }
							}
						}
						add_character_flag = {
							flag = got_magic_senses_notyfication_flag
							days = 5
						}
						trigger_event = magic_ev.4
					}
				}
				else_if = {
					limit = {
						is_ruler = yes
						any_held_title = {
							tier = tier_barony
						}
						exists = liege
					}
					liege = {
						every_neighboring_realm_same_rank_owner = {
							limit = {
								has_perk = magical_senses_perk
								NOT = { has_character_flag = got_magic_senses_notyfication_flag }
								NOT = { THIS = scope:magic_user }
								trigger_if = {
									limit = {
										exists = scope:magic_counterer
									}
									NOT = { THIS = scope:magic_counterer }
								}
								trigger_if = {
									limit = {
										exists = scope:actor
									}
									NOT = { THIS = scope:actor }
								}
								trigger_if = {
									limit = {
										exists = scope:recipient
									}
									NOT = { THIS = scope:recipient }
								}
							}
							add_character_flag = {
								flag = got_magic_senses_notyfication_flag
								days = 5
							}
							trigger_event = magic_ev.4
						}
					}
				}
			}
		}
	}
	
	#location = {
	#	duchy = {
	#		every_de_jure_county_holder = {
	#			limit = { 
	#				AND = {
	#					NOT = { this = scope:actor }
	#					has_perk = magical_senses_perk
	#				}
	#			}
	#				trigger_event = magic_ev.4
	#		}
	#
	#	}
	#}
}

send_message_4all_magic_sense_effect = {
	hidden_effect = {
		every_living_character = {
			limit = {
				has_perk = magical_senses_perk
				NOT = { this = scope:actor }
			}
			trigger_event = magic_ev.4
		}
	}
}

metamagic_effect = {
	hidden_effect = {
		if = {
			limit = {
				can_be_power_saturated_trigger = yes
				has_character_flag = master_metamagic
			}
			random = {
				chance = 50
				send_interface_toast = {
					title=metamagic_title
					#gain_standard_ps_effect = yes
					if = {
						limit = {
							has_trait = archmage
						}
						add_trait_xp = {
							trait = archmage
							track = power_saturation
							value = 10
						}
					}
					else_if = {
						limit = {
							NOR = {
								has_character_modifier = power_saturated1
								has_character_modifier = power_saturated2
							}
						}
						add_character_modifier = power_saturated1
					}
				}
			}
		}
	}
}

send_message_4_child_missing_effect = {
	hidden_effect = {
		if = {
			limit = {
				is_landed_or_landless_administrative = yes
			}
			save_scope_as = sender
			every_courtier_or_guest = {
				trigger_event = magic_ev2.40
			}
			every_vassal = {
				trigger_event = magic_ev2.40
				every_courtier_or_guest = {
					trigger_event = magic_ev2.40
				}
			}
			random_neighboring_realm_same_rank_owner = {
				trigger_event = magic_ev2.40
				every_courtier_or_guest = {
					trigger_event = magic_ev2.40
				}
			}
		}
		else = {
			save_scope_as = actor
			liege = {
				save_scope_as = sender
				every_courtier_or_guest = {
					limit = {
						NOT = { this = scope:actor }
					}
					trigger_event = magic_ev2.40
				}
				every_vassal = {
					trigger_event = magic_ev2.40
					every_courtier_or_guest = {
						trigger_event = magic_ev2.40
					}
				}
				random_neighboring_realm_same_rank_owner = {
					trigger_event = magic_ev2.40
					every_courtier_or_guest = {
						trigger_event = magic_ev2.40
					}
				}
			}
		}
	}
}

create_common_witch_effect = {
	create_character = {
		employer = root
		template = witchy_template
		random_traits = no
		save_temporary_scope_as = created_witch
	}
}
create_common_witch_effect2 = {
	create_character = {
		location = root.location
		template = witchy_template
		culture = root.culture
		faith = root.faith
		random_traits = no
		save_scope_as = created_witch
	}
}
create_common_witch_effect3 = {
	create_character = {
		employer = scope:recipient
		template = witchy_template2
		random_traits = no
		save_scope_as = created_witch
	}
}

create_merlin_effect = {
	if = {
		limit = {
			NOT = {
				any_living_character = {
					has_character_flag = merlin_dude
				}
			}
		}
		random_ruler = {
			limit = {
				in_diplomatic_range = ROOT
				is_ai = yes
			}
			save_scope_as = amb_source
		}
		create_character = {
			save_temporary_scope_as = merlin_dude
			employer = root
			template = merlin_character
			name = merlins_name
			dynasty = none
			after_creation = {
				add_perk = protective_runes_perk
				add_perk = magical_senses_perk
				add_character_modifier = mind_reader_modifier
				add_perk = magical_experiments_p1_perk
				add_perk = mage_tower_p2_perk
				add_perk = mind_control_p6_perk
				add_perk = forbidden_ritual_p7_perk
				add_perk = fate_weaver_p10_perk
				add_perk = magic_triangulation_p5_perk
				add_perk = combat_spells_p3_perk
				add_perk = healer_p9_perk
				add_perk = summoner_p8_perk
				add_perk = pedagogy_perk
				add_perk = open_minded_perk
				add_perk = apostate_perk
				add_perk = scientific_perk
				add_perk = planned_cultivation_perk
				add_perk = scholarly_circles_perk
				add_perk = learn_on_the_job_perk
				add_perk = sanctioned_loopholes_perk
				add_perk = mage_p4_perk
				add_perk = carefree_perk
				add_trait = immortal1
				if = {
					limit = {
						NOT = {	has_trait = archmage	}
					}
					add_trait = archmage
				}
				add_trait_xp = {
					trait = archmage
					track = secret_knowledge
					value = 100
				}
				add_trait_xp = {
					trait = archmage
					track = combat_magic
					value = 100
				}
				add_trait_xp = {
					trait = archmage
					track = alchemy
					value = 60
				}
				add_trait_xp = {
					trait = source
					track = magic_potential
					value = 75
				}
				add_character_modifier = master_alteration_modifier
				add_character_modifier = master_metamagic_modifier
				add_character_modifier = master_defence_modifier
				add_character_modifier = infertile_modifier
				add_character_modifier = master_magic_modifier
				add_trait = lifestyle_traveler
				#set_immortal_age = 81
				#add_secret = {
				#	type = secret_witch
				#	target = root
				#}
				give_witch_secret_or_trait_effect2 = yes
				add_character_flag = merlin_dude
				add_character_flag = special_magic_character
				
				#add_hook = {
				#	type = magic_domination_hook
				#	target = liege
				#}
				assign_special_spell_effect = { NR = 1 S1 = 2 S2 = 1 S3 = 1 }
				set_spell_id = { ID = 4 }
				create_landless_adventurer_title_effect = {
					#REASON = flag:voluntary
					#FLAVOR_CHAR = scope:amb_source
					REASON = flag:wanderer
					FLAVOR_CHAR = THIS
				}
				#turn_unlanded_into_landless_adventurer_effect = yes
				
			}
		}
		clear_saved_scope = merlin_dude
	}
}

create_abdul_alhazred_effect = {
	if = {
		limit = {
			NOT = {
				any_living_character = {
					has_character_flag = abdul_dude
				}
			}
		}
		create_character = {
			save_scope_as = abdul
			location = root.location
			template = abdul_alhazred_character
			name = Abdul
			#dynasty_house = house_alhazred
			culture = culture:persian
			faith = faith:ismaili
			after_creation = {
				set_protection_from_harm_events_effect = yes
				give_witch_secret_or_trait_effect2 = yes
				
				add_trait = disfigured
				add_trait = immortal1

				add_perk = magical_experiments_p1_perk
				add_perk = mage_tower_p2_perk
				add_perk = mind_control_p6_perk
				add_perk = forbidden_ritual_p7_perk
				add_perk = fate_weaver_p10_perk
				add_perk = magic_triangulation_p5_perk
				add_perk = combat_spells_p3_perk
				add_perk = healer_p9_perk
				add_perk = summoner_p8_perk
				add_perk = mage_p4_perk

				add_perk = protective_runes_perk
				add_perk = magical_senses_perk
				add_perk = witch_familiar_perk
				add_perk = oneiromancy_perk
				add_perk = wisdom_of_nature_perk
				add_perk = love_potions_perk
				add_perk = mistical_insight_perk
				add_perk = evil_eye_perk
				add_perk = lifestealer_perk
				add_perk = true_witch_perk

				add_perk = pedagogy_perk
				add_perk = open_minded_perk
				add_perk = apostate_perk
				add_perk = scientific_perk
				add_perk = planned_cultivation_perk
				add_perk = scholarly_circles_perk
				add_perk = learn_on_the_job_perk
				add_perk = sanctioned_loopholes_perk
				add_perk = carefree_perk
				add_perk = scholar_perk
				if = {
					limit = {
						NOT = {
							has_perk = truth_is_relative_perk
						}
					}
					add_perk = truth_is_relative_perk
				}
				if = {
					limit = {
						NOT = {
							has_perk = twice_schemed_perk
						}
					}
					add_perk = twice_schemed_perk
				}
				if = {
					limit = {
						NOT = {
							has_perk = a_job_done_right_perk
						}
					}
					add_perk = a_job_done_right_perk
				}
				if = {
					limit = {
						NOT = {
							has_perk = digging_for_dirt_perk
						}
					}
					add_perk = digging_for_dirt_perk
				}
				if = {
					limit = {
						NOT = {
							has_perk = court_of_shadows_perk
						}
					}
					add_perk = court_of_shadows_perk
				}
				if = {
					limit = {
						NOT = {
							has_perk = swift_execution_perk
						}
					}
					add_perk = swift_execution_perk
				}
				if = {
					limit = {
						NOT = {
							has_perk = kidnapper_perk
						}
					}
					add_perk = kidnapper_perk
				}
				if = {
					limit = {
						NOT = {
							has_perk = prepared_for_anything_perk
						}
					}
					add_perk = prepared_for_anything_perk
				}
				#if = {
				#	limit = {
				#		NOT = {
				#			has_perk = prison_feudal_complex_perk
				#		}
				#	}
				#	add_perk = prison_feudal_complex_perk
				#}
				#if = {
				#	limit = {
				#		NOT = {
				#			has_perk = forever_infamous_perk
				#		}
				#	}
				#	add_perk = forever_infamous_perk
				#}
				if = {
					limit = {
						NOT = {
							has_perk = serve_the_crown_perk
						}
					}
					add_perk = serve_the_crown_perk
				}
				if = {
					limit = {
						NOT = {
							has_trait = schemer
						}
					}
					add_perk = schemer_perk
				}

				if = {
					limit = {
						NOT = {	has_trait = archmage	}
					}
					add_trait = archmage
				}
				add_trait_xp = {
					trait = archmage
					track = secret_knowledge
					value = 100
				}
				add_trait_xp = {
					trait = archmage
					track = combat_magic
					value = 100
				}
				add_trait_xp = {
					trait = archmage
					track = demonology
					value = 100
				}
				add_trait_xp = {
					trait = archmage
					track = alchemy
					value = 100
				}
				add_trait_xp = {
					trait = archmage
					track = power_saturation
					value = 100
				}
				add_trait_xp = {
					trait = source
					track = magic_potential
					value = 100
				}
				set_spell_id = { ID = 25 }
				add_character_modifier = master_alteration_modifier
				add_character_modifier = master_metamagic_modifier
				add_character_modifier = master_defence_modifier
				add_character_modifier = mind_reader_modifier
				add_character_modifier = master_psionic_modifier
				add_character_modifier = peaceful_dreams_modifier
				add_character_modifier = ancient_archmage_modifier
				#add_character_modifier = greedy_power_modifier
				add_character_modifier = upgraded_body_modifier
				add_character_modifier = contact_other_worlds_modifier
				add_character_modifier = master_magic_modifier
				add_trait = necromancer
				assign_special_spell_effect = { NR = 1 S1 = 5 S2 = 2 S3 = 6 }
				assign_special_spell_effect = { NR = 2 S1 = 2 S2 = 3 S3 = 1 }
			}
		}
		scope:abdul = {
			add_character_flag = abdul_dude
			add_character_flag = special_magic_character
			add_character_flag = skeleton_warriors
			add_character_flag = shadowstep_flag
			add_character_flag = banish_spell_flag
			add_character_flag = plague_spell_flag
			add_character_flag = firestorm_spell_flag
			add_character_flag = tornado_spell_flag
			
			give_nickname = mad_arab_nickname
			
			add_dread = 80
			dynasty = {
				add_dynasty_prestige = 10000
				add_dynasty_perk = witchcraft_legacy_1
				add_dynasty_perk = witchcraft_legacy_2
				add_dynasty_perk = witchcraft_legacy_3
				add_dynasty_perk = witchcraft_legacy_4
				add_dynasty_perk = witchcraft_legacy_5
			}
			#if = {
			#	limit = {
			#		ROOT = {
			#			OR = {
			#				#has_character_modifier = alchemical_enhancement
			#				is_the_choosen_one_trigger = yes
			#				any_character_artifact = {
			#					has_artifact_modifier = singularity_modifierX
			#				}
			#				#any_character_artifact = { has_variable = pot8 }
			#			}
			#		}
			#	}
			#	create_artifact = {	
			#		name = pot8
			#		description = pot8_desc
			#		template=general_unique_template
			#		type = miscellaneous
			#		#type = elixir
			#		visuals = flask
			#		#visuals = fp2_armillary_sphere
			#		modifier = elixir_modifier
			#		#wealth = scope:wealth
			#		#quality = scope:quality
			#		rarity=illustrious
			#		decaying = no
			#		save_scope_as = newly_created_artifact
			#		#custom_tooltip = magic_catalyst_tooltip
			#	}
			#	scope:newly_created_artifact={
			#		set_variable=pot8
			#	}
			#}
		}
	}
}

create_yaga_family_effect = {
	hidden_effect = {
		random_ruler = {
			limit = {
				is_landed_or_landless_administrative = yes
				is_ai = yes
				primary_title = { is_mercenary_company = no }	
				highest_held_title_tier = 2
				capital_province = {
					geographical_region = world_europe_east
					has_special_building_slot = no
				}
				trait_is_criminal_in_faith_trigger = { TRAIT = witch FAITH = this.faith GENDER_CHARACTER = this }
			}
			save_scope_as = unlucky_guy
			add_trait = incapable
			capital_province = {
				add_special_building = witch_house
			}
		}
		create_character = {
			employer = scope:unlucky_guy
			gender = female
			template = yaga_character
			name = yaga_name
			dynasty_house = scope:unlucky_guy.house
			save_scope_as = yaga
		}
		scope:yaga = {
			set_protection_from_harm_events_effect = yes
			add_character_flag = yaga_flag
			add_secret = {
				type = secret_witch
				target = scope:yaga
			}
			#give_witch_secret_or_trait_effect2 = yes
			add_secret = {
				type = secret_cannibal
				target = scope:yaga
			}
			add_perk = protective_runes_perk
			add_perk = magical_senses_perk
			add_perk = witch_familiar_perk
			add_perk = oneiromancy_perk
			add_perk = wisdom_of_nature_perk
			add_perk = love_potions_perk
			add_perk = mistical_insight_perk
			add_perk = evil_eye_perk
			add_perk = lifestealer_perk
			add_perk = true_witch_perk

			add_perk = truth_is_relative_perk
			add_perk = digging_for_dirt_perk
			add_perk = kidnapper_perk

			every_ruler = {
				limit = {
					is_ai = no
					is_landed_or_landless_administrative = yes
				}
				reverse_add_opinion = {
					target = scope:yaga
					modifier = suspicious_opinion
					opinion = -200
				}
			}

			add_character_modifier = mind_reader_modifier
			add_character_modifier = master_defence_modifier
			add_character_modifier = master_magic_modifier
			add_character_modifier = power_saturated1
			add_trait_xp = {
				trait = source
				track = magic_potential
				value = 80
			}
			create_magic_broom_artifact_effect = yes
			house = {
				add_house_modifier = witch_coven
			}
			add_character_flag = special_magic_character
			assign_special_spell_effect = { NR = 1 S1 = 5 S2 = 1 S3 = 4 }
		}
		scope:unlucky_guy = {
			create_title_and_vassal_change = {
				type = conquest
				save_scope_as = change
				add_claim_on_loss = no
			}
			random_held_title = {
				limit = {
					tier = tier_county
					title_province = scope:unlucky_guy.capital_province
				}
				change_title_holder_include_vassals = {
					holder = scope:yaga
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change
		}
		#scope:yaga.capital_province = {
		#	add_special_building = witch_house
		#}
		create_character = {
			employer = scope:yaga
			gender = female
			template = yaga_d_character
			mother = scope:yaga
			dynasty_house = scope:unlucky_guy.house
			save_scope_as = dou
		}
		scope:dou = {
			add_secret = {
				type = secret_witch
				target = scope:dou
			}
			add_trait = source
			add_trait_xp = {
				trait = source
				track = magic_potential
				value = 51
			}
			#add_character_modifier = yagas_blood_modifier
			random_secret = {
				limit = {
					secret_type = secret_witch
				}
				reveal_to = scope:yaga
			}
			scope:yaga = {
				random_secret = {
					limit = {
						secret_type = secret_witch
					}
					reveal_to = scope:dou
				}
			}
		}
		create_character = {
			employer = scope:yaga
			gender = female
			template = yaga_d_character
			mother = scope:yaga
			dynasty_house = scope:unlucky_guy.house
			save_scope_as = dou
		}
		scope:dou = {
			add_secret = {
				type = secret_witch
				target = scope:dou
			}
			add_trait = source
			add_trait_xp = {
				trait = source
				track = magic_potential
				value = 14
			}
			#add_character_modifier = yagas_blood_modifier
			random_secret = {
				limit = {
					secret_type = secret_witch
				}
				reveal_to = scope:yaga
			}
			scope:yaga = {
				random_secret = {
					limit = {
						secret_type = secret_witch
					}
					reveal_to = scope:dou
				}
			}
		}
		create_character = {
			employer = scope:yaga
			gender = female
			template = yaga_d_character
			mother = scope:yaga
			dynasty_house = scope:unlucky_guy.house
			save_scope_as = dou
		}
		scope:dou = {
			add_secret = {
				type = secret_witch
				target = scope:dou
			}
			#add_character_modifier = yagas_blood_modifier
			random_secret = {
				limit = {
					secret_type = secret_witch
				}
				reveal_to = scope:yaga
			}
			scope:yaga = {
				random_secret = {
					limit = {
						secret_type = secret_witch
					}
					reveal_to = scope:dou
				}
			}
		}
		scope:yaga = {
			#add_trait = source
			change_current_weight = 200
			spawn_army = {
				name = demonic_knights
				men_at_arms = {
					type = special_magic_hut_lol
					stacks = 1
				}
				men_at_arms = {
					type = demonic_knights
					stacks = 4
				}
				men_at_arms = {
					type = skeletons
					stacks = 6
				}
				inheritable = no
				uses_supply = no
				location = scope:yaga.location
			}
			add_character_modifier = yaga_modifier
		}
		clear_saved_scope = dou
		clear_saved_scope = yaga
	}
}

create_yaga_family_effect2 = {
	hidden_effect = {
		random_ruler = {
			limit = {
				is_landed_or_landless_administrative = yes
				is_ai = yes
				primary_title = { is_mercenary_company = no }	
				highest_held_title_tier=2
				capital_province = {
					geographical_region = world_europe_east
					has_special_building_slot = no
				}
				NOT = {
					trait_is_criminal_in_faith_trigger = { TRAIT = witch FAITH = this.faith GENDER_CHARACTER = this }
				}
			}
			save_scope_as = unlucky_guy
			capital_province = {
				add_special_building = witch_house
			}
		}
		create_character = {
			employer = scope:unlucky_guy
			gender = female
			template = yaga_character
			name = yaga_name
			dynasty_house = scope:unlucky_guy.house
			save_scope_as = yaga
		}
		scope:yaga = {
			set_protection_from_harm_events_effect = yes
			add_character_flag = yaga_flag
			add_trait = witch
			#give_witch_secret_or_trait_effect2 = yes
			add_secret = {
				type = secret_cannibal
				target = scope:yaga
			}
			add_perk = mage_tower_p2_perk
			add_perk = protective_runes_perk
			add_perk = magical_senses_perk
			add_perk = witch_familiar_perk
			add_perk = oneiromancy_perk
			add_perk = wisdom_of_nature_perk
			add_perk = love_potions_perk
			add_perk = mistical_insight_perk
			add_perk = evil_eye_perk
			add_perk = lifestealer_perk
			add_perk = true_witch_perk

			#add_perk = fate_weaver_p10_perk
			#add_perk = healer_p9_perk

			add_perk = truth_is_relative_perk
			add_perk = digging_for_dirt_perk
			add_perk = kidnapper_perk

			every_ruler = {
				limit = {
					is_ai = no
				}
				reverse_add_opinion = {
					target = scope:yaga
					modifier = suspicious_opinion
					opinion = -200
				}
			}

			add_character_modifier = mind_reader_modifier
			add_character_modifier = master_defence_modifier
			add_character_modifier = master_magic_modifier
			add_trait_xp = {
				trait = source
				track = magic_potential
				value = 80
			}
			create_magic_broom_artifact_effect = yes
			add_character_flag = special_magic_character
			house = {
				add_house_modifier = witch_coven
			}
		}
		scope:unlucky_guy = {
			create_title_and_vassal_change = {
				type = conquest
				save_scope_as = change
				add_claim_on_loss = no
			}
			random_held_title = {
				limit = {
					tier = tier_county
					title_province = scope:unlucky_guy.capital_province
				}
				change_title_holder_include_vassals = {
					holder = scope:yaga
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change
		}
		#scope:yaga.capital_province = {
		#	add_special_building = witch_house
		#}
		create_character = {
			employer = scope:yaga
			gender = female
			template = yaga_d_character
			mother = scope:yaga
			dynasty_house = scope:unlucky_guy.house
			save_scope_as = dou
		}
		scope:dou = {
			add_trait = witch
			add_trait = source
			add_trait_xp = {
				trait = source
				track = magic_potential
				value = 51
			}
		}
		create_character = {
			employer = scope:yaga
			gender = female
			template = yaga_d_character
			mother = scope:yaga
			dynasty_house = scope:unlucky_guy.house
			save_scope_as = dou
		}
		scope:dou = {
			add_trait = witch
			add_trait = source
			add_trait_xp = {
				trait = source
				track = magic_potential
				value = 14
			}
		}
		create_character = {
			employer = scope:yaga
			gender = female
			template = yaga_d_character
			mother = scope:yaga
			dynasty_house = scope:unlucky_guy.house
			save_scope_as = dou
		}
		scope:dou = {
			add_trait = witch
		}
		scope:yaga = {
			#add_trait = source
			change_current_weight = 200
			spawn_army = {
				name = demonic_knights
				men_at_arms = {
					type = special_magic_hut_lol
					stacks = 1
				}
				men_at_arms = {
					type = demonic_knights
					stacks = 4
				}
				men_at_arms = {
					type = skeletons
					stacks = 6
				}
				inheritable = no
				uses_supply = no
				location = scope:yaga.location
			}
			add_character_modifier = yaga_modifier
		}
		clear_saved_scope = dou
		clear_saved_scope = yaga
	}
}
#AR version - will run when the game does not detect a matching geographic region (in case when other mods change the map geography)
create_yaga_family_effectAR = {
	hidden_effect = {
		random_ruler = {
			limit = {
				is_landed_or_landless_administrative = yes
				is_ai = yes
				primary_title = { is_mercenary_company = no }	
				highest_held_title_tier = 2
				trait_is_criminal_in_faith_trigger = { TRAIT = witch FAITH = this.faith GENDER_CHARACTER = this }
			}
			save_scope_as = unlucky_guy
			add_trait = incapable
			capital_province = {
				add_special_building = witch_house
			}
		}
		create_character = {
			employer = scope:unlucky_guy
			gender = female
			template = yaga_character
			name = yaga_name
			dynasty_house = scope:unlucky_guy.house
			save_scope_as = yaga
		}
		scope:yaga = {
			set_protection_from_harm_events_effect = yes
			add_character_flag = yaga_flag
			add_secret = {
				type = secret_witch
				target = scope:yaga
			}
			#give_witch_secret_or_trait_effect2 = yes
			add_secret = {
				type = secret_cannibal
				target = scope:yaga
			}
			add_perk = protective_runes_perk
			add_perk = magical_senses_perk
			add_perk = witch_familiar_perk
			add_perk = oneiromancy_perk
			add_perk = wisdom_of_nature_perk
			add_perk = love_potions_perk
			add_perk = mistical_insight_perk
			add_perk = evil_eye_perk
			add_perk = lifestealer_perk
			add_perk = true_witch_perk

			add_perk = truth_is_relative_perk
			add_perk = digging_for_dirt_perk
			add_perk = kidnapper_perk

			every_ruler = {
				limit = {
					is_ai = no
				}
				reverse_add_opinion = {
					target = scope:yaga
					modifier = suspicious_opinion
					opinion = -200
				}
			}

			add_character_modifier = mind_reader_modifier
			add_character_modifier = master_defence_modifier
			add_character_modifier = master_magic_modifier
			add_trait_xp = {
				trait = source
				track = magic_potential
				value = 80
			}
			create_magic_broom_artifact_effect = yes
			house = {
				add_house_modifier = witch_coven
			}
			add_character_flag = special_magic_character
		}
		scope:unlucky_guy = {
			create_title_and_vassal_change = {
				type = conquest
				save_scope_as = change
				add_claim_on_loss = no
			}
			random_held_title = {
				limit = {
					tier = tier_county
					title_province = scope:unlucky_guy.capital_province
				}
				change_title_holder_include_vassals = {
					holder = scope:yaga
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change
		}
		#scope:yaga.capital_province = {
		#	add_special_building = witch_house
		#}
		create_character = {
			employer = scope:yaga
			gender = female
			template = yaga_d_character
			mother = scope:yaga
			dynasty_house = scope:unlucky_guy.house
			save_scope_as = dou
		}
		scope:dou = {
			add_secret = {
				type = secret_witch
				target = scope:dou
			}
			add_trait = source
			add_trait_xp = {
				trait = source
				track = magic_potential
				value = 51
			}
			#add_character_modifier = yagas_blood_modifier
			random_secret = {
				limit = {
					secret_type = secret_witch
				}
				reveal_to = scope:yaga
			}
			scope:yaga = {
				random_secret = {
					limit = {
						secret_type = secret_witch
					}
					reveal_to = scope:dou
				}
			}
		}
		create_character = {
			employer = scope:yaga
			gender = female
			template = yaga_d_character
			mother = scope:yaga
			dynasty_house = scope:unlucky_guy.house
			save_scope_as = dou
		}
		scope:dou = {
			add_secret = {
				type = secret_witch
				target = scope:dou
			}
			add_trait = source
			add_trait_xp = {
				trait = source
				track = magic_potential
				value = 14
			}
			#add_character_modifier = yagas_blood_modifier
			random_secret = {
				limit = {
					secret_type = secret_witch
				}
				reveal_to = scope:yaga
			}
			scope:yaga = {
				random_secret = {
					limit = {
						secret_type = secret_witch
					}
					reveal_to = scope:dou
				}
			}
		}
		create_character = {
			employer = scope:yaga
			gender = female
			template = yaga_d_character
			mother = scope:yaga
			dynasty_house = scope:unlucky_guy.house
			save_scope_as = dou
		}
		scope:dou = {
			add_secret = {
				type = secret_witch
				target = scope:dou
			}
			#add_character_modifier = yagas_blood_modifier
			random_secret = {
				limit = {
					secret_type = secret_witch
				}
				reveal_to = scope:yaga
			}
			scope:yaga = {
				random_secret = {
					limit = {
						secret_type = secret_witch
					}
					reveal_to = scope:dou
				}
			}
		}
		scope:yaga = {
			#add_trait = source
			change_current_weight = 200
			spawn_army = {
				name = demonic_knights
				men_at_arms = {
					type = special_magic_hut_lol
					stacks = 1
				}
				men_at_arms = {
					type = demonic_knights
					stacks = 4
				}
				men_at_arms = {
					type = skeletons
					stacks = 6
				}
				inheritable = no
				uses_supply = no
				location = scope:yaga.location
			}
			add_character_modifier = yaga_modifier
		}
		clear_saved_scope = dou
		clear_saved_scope = yaga
	}
}

create_yaga_family_effect2AR = {
	hidden_effect = {
		random_ruler = {
			limit = {
				is_landed_or_landless_administrative = yes
				is_ai = yes
				primary_title = { is_mercenary_company = no }	
				highest_held_title_tier=2
				NOT = {
					trait_is_criminal_in_faith_trigger = { TRAIT = witch FAITH = this.faith GENDER_CHARACTER = this }
				}
			}
			save_scope_as = unlucky_guy
			capital_province = {
				add_special_building = witch_house
			}
		}
		create_character = {
			employer = scope:unlucky_guy
			gender = female
			template = yaga_character
			name = yaga_name
			dynasty_house = scope:unlucky_guy.house
			save_scope_as = yaga
		}
		scope:yaga = {
			set_protection_from_harm_events_effect = yes
			add_character_flag = yaga_flag
			add_trait = witch
			#give_witch_secret_or_trait_effect2 = yes
			add_secret = {
				type = secret_cannibal
				target = scope:yaga
			}
			add_perk = protective_runes_perk
			add_perk = magical_senses_perk
			add_perk = witch_familiar_perk
			add_perk = oneiromancy_perk
			add_perk = wisdom_of_nature_perk
			add_perk = love_potions_perk
			add_perk = mistical_insight_perk
			add_perk = evil_eye_perk
			add_perk = lifestealer_perk
			add_perk = true_witch_perk

			#add_perk = fate_weaver_p10_perk
			#add_perk = healer_p9_perk

			add_perk = truth_is_relative_perk
			add_perk = digging_for_dirt_perk
			add_perk = kidnapper_perk

			every_ruler = {
				limit = {
					is_ai = no
				}
				reverse_add_opinion = {
					target = scope:yaga
					modifier = suspicious_opinion
					opinion = -200
				}
			}

			add_character_modifier = mind_reader_modifier
			add_character_modifier = master_defence_modifier
			add_character_modifier = master_magic_modifier
			add_trait_xp = {
				trait = source
				track = magic_potential
				value = 80
			}
			create_magic_broom_artifact_effect = yes
			add_character_flag = special_magic_character
			house = {
				add_house_modifier = witch_coven
			}
		}
		scope:unlucky_guy = {
			create_title_and_vassal_change = {
				type = conquest
				save_scope_as = change
				add_claim_on_loss = no
			}
			random_held_title = {
				limit = {
					tier = tier_county
					title_province = scope:unlucky_guy.capital_province
				}
				change_title_holder_include_vassals = {
					holder = scope:yaga
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change
		}
		#scope:yaga.capital_province = {
		#	add_special_building = witch_house
		#}
		create_character = {
			employer = scope:yaga
			gender = female
			template = yaga_d_character
			mother = scope:yaga
			dynasty_house = scope:unlucky_guy.house
			save_scope_as = dou
		}
		scope:dou = {
			add_trait = witch
			add_trait = source
			add_trait_xp = {
				trait = source
				track = magic_potential
				value = 51
			}
		}
		create_character = {
			employer = scope:yaga
			gender = female
			template = yaga_d_character
			mother = scope:yaga
			dynasty_house = scope:unlucky_guy.house
			save_scope_as = dou
		}
		scope:dou = {
			add_trait = witch
			add_trait = source
			add_trait_xp = {
				trait = source
				track = magic_potential
				value = 14
			}
		}
		create_character = {
			employer = scope:yaga
			gender = female
			template = yaga_d_character
			mother = scope:yaga
			dynasty_house = scope:unlucky_guy.house
			save_scope_as = dou
		}
		scope:dou = {
			add_trait = witch
		}
		scope:yaga = {
			#add_trait = source
			change_current_weight = 200
			spawn_army = {
				name = demonic_knights
				men_at_arms = {
					type = special_magic_hut_lol
					stacks = 1
				}
				men_at_arms = {
					type = demonic_knights
					stacks = 4
				}
				men_at_arms = {
					type = skeletons
					stacks = 10
				}
				inheritable = no
				uses_supply = no
				location = scope:yaga.location
			}
			add_character_modifier = yaga_modifier
		}
		clear_saved_scope = dou
		clear_saved_scope = yaga
	}
}

create_dark_temple = {
	hidden_effect = {
		random_ruler = {
			limit = {
				is_landed_or_landless_administrative = yes
				is_ai = yes
				primary_title = { is_mercenary_company = no }	
				capital_province = {
					has_special_building_slot = no
				}
			}
			capital_province = {
				add_special_building = horned_god_house
			}
			give_witch_secret_or_trait_effect2 = yes
		}
	}
}

create_magic_academy = {
	hidden_effect = {
		random_ruler = {
			limit = {
				is_landed_or_landless_administrative = yes
				is_ai = yes
				primary_title = { is_mercenary_company = no }	
				capital_province = {
					has_special_building_slot = no
				}
			}
			capital_province = {
				add_special_building = mage_house
			}
			#give_witch_secret_or_trait_effect2 = yes
		}
	}
}
create_houska = {
	hidden_effect = {
		#title:b_slany.title_province = {
		if = {
			limit = {
				exists = title:c_litomerice
			}
			title:c_litomerice = {
				title_province = {
					if = {
						limit = {
							has_special_building_slot = no
						}
						add_special_building_slot = houska
					}
				}
			}
		}
	}
}

create_extra_coven = {
	random_ruler = {
		limit = {
			is_landed_or_landless_administrative = yes
			is_ai = yes
			is_adult = yes
			exists = house
			house = {
				house_head = PREV
				any_house_member = {
					is_adult = yes
					count > 3
				}
				NOT = {
					any_house_member = {
						OR = {
							is_ai = no
							has_trait = witch_hunter
						}
					}
				}
			}
		}
		house = {
			every_house_member = {
				limit = {
					is_adult = yes
					NOR = {
						has_trait = witch
						any_secret = { secret_type = secret_witch }
					}
				}
				give_witch_secret_or_trait_effect2 = yes
			}
			add_house_modifier = {
				modifier = witch_coven
			}
			every_house_member = {
				limit = {
					is_adult = yes
				}
				save_scope_as = w1
				house = {
					every_house_member = {
						limit = {
							is_adult = yes
							NOT = { THIS = scope:w1 }
						}
						random_secret = {
							limit = { secret_type = secret_witch }
							reveal_to = scope:w1
						}
					}
				}
				clear_saved_scope = w1
			}
		}
		add_trait = grandmaster_coven
		add_perk = protective_runes_perk
		add_perk = witch_familiar_perk
		add_perk = oneiromancy_perk
		add_perk = wisdom_of_nature_perk
		add_perk = love_potions_perk
		add_perk = mistical_insight_perk
		add_perk = evil_eye_perk
		add_perk = magical_senses_perk
		add_perk = lifestealer_perk
		add_perk = true_witch_perk
	}
}

create_true_witch_effect = {
	hidden_effect = {
		#random_artifact = {
		#	limit = {
		#		has_variable = magic1
		#	}
		#	save_scope_as = art0
		#}
		if = {
			limit = {
				any_ruler = {
					has_trait = true_witch
					count < 10
				}
			}
			random_living_character = {
				limit = {
					any_character_artifact = { has_variable = magic1 }
				}
				random_character_artifact = {
					limit = {
						has_variable = magic1
					}
					save_scope_as = art0
				}
			}
			random_ruler = {
				limit = {
					NOR = {
						any_character_artifact = { has_variable = magic1 }
						has_trait = zealous
						has_trait = source
						#has_trait = source2
						#has_trait = source3
						#has_trait = source4
						has_trait = honest
						has_trait = true_witch
					}
					is_male = no
					is_landed_or_landless_administrative = yes
					is_ai = yes
					is_adult = yes
					is_imprisoned = no
				}
				#add_secret = {
				#	type = secret_witch
				#	target = THIS
				#}
				give_witch_secret_or_trait_effect2 = yes
				add_character_modifier = {
					modifier = yaga_modifier
					days = 3
				}
				turn_into_true_witch_effect = yes
				
				if = {
					limit = {
						exists = scope:art0
					}
					random = {
						chance = 26
						add_personal_artifact_claim = scope:art0
					}
					clear_saved_scope = art0
				}
			}
		}
	}
}

create_some_mage_effect = {
	hidden_effect = {
		if = {
			limit = {
				NOT = {
					has_game_rule = min_num_of_mages
				}
				any_living_character = {
					is_true_mage = yes
					is_ai = yes
					count < num_of_mages_limit_value
				}
			}
			random_list = {
				1 = {
					create_mage_effect = yes
				}
				1 = {
					create_adventuring_mage_effect = yes
				}
				1 = {
					create_pool_mage_effect = yes
				}
				1 = {
					create_court_mage_effect = yes
				}
				1 = {

				}
			}
			random_list = {
				1 = {
					create_true_witch_effect = yes
				}
				1 = {
					create_pure_wandering_true_witch_effect = yes
				}
			}
		}
	}
}
create_pure_wandering_true_witch_effect = {
	random_ruler = {
		save_scope_as = pruler
	}
	create_character = {
		location = scope:pruler.location
		template = wandering_mage_character
		faith =scope:pruler.faith
		culture = scope:pruler.culture
		save_scope_as = wmage0
		after_creation = {
			give_witch_secret_or_trait_effect2 = yes
			add_trait_xp = {
				trait = lifestyle_traveler
				track = travel
				value = { 40 80 }
			}
			add_trait_xp = {
				trait = lifestyle_traveler
				track = danger
				value = { 40 80 }
			}
			turn_into_true_witch_effect = yes
		}
	}
	scope:wmage0 = {
		random_list = {
			8 = {
				trigger_event = {
					id = magic_ev10.167
					days = { 20 40 }
				}
			}
			2 = {
				add_trait = adventurer
			}
		}
	}
}
create_adventuring_mage_effect = {
	random_ruler = {
		save_scope_as = pruler
	}
	create_character = {
		location = scope:pruler.location
		template = wandering_mage_character
		faith =scope:pruler.faith
		culture = scope:pruler.culture
		save_scope_as = wmage0
		after_creation = {
			give_witch_secret_or_trait_effect2 = yes
			add_trait_xp = {
				trait = lifestyle_traveler
				track = travel
				value = { 40 80 }
			}
			add_trait_xp = {
				trait = lifestyle_traveler
				track = danger
				value = { 40 80 }
			}
			#add_perk = magical_experiments_p1_perk
			#add_perk = mage_tower_p2_perk
			#add_perk = mind_control_p6_perk
			#add_perk = forbidden_ritual_p7_perk
			#add_perk = fate_weaver_p10_perk
			#add_perk = magic_triangulation_p5_perk
			#add_perk = combat_spells_p3_perk
			#add_perk = healer_p9_perk
			#add_perk = summoner_p8_perk
			#add_perk = mage_p4_perk
			#add_character_flag = special_magic_character
			turn_into_mage_effect = yes
			set_random_spell_id = yes
			random = {
				chance = 20
				add_character_modifier = gift_from_hell_modifier
			}
			if = {
				limit = {
					NOT = {	has_trait = archmage	}
				}
				add_trait = archmage
			}
			add_trait_xp = {
				trait = archmage
				track = secret_knowledge
				value = { 0 45 }
			}
			random_list = {
				1 = {
					add_trait_xp = {
						trait = archmage
						track = combat_magic
						value = { 10 35 }
					}
				}
				1 = {
					add_trait_xp = {
						trait = archmage
						track = alchemy
						value = { 10 35 }
					}
				}
			}
			add_trait_xp = {
				trait = archmage
				track = power_saturation
				value = { 10 50 }
			}
			random = {
				chance = 10
				add_trait = necromancer
				add_character_flag = skeleton_warriors
			}
			random = {
				chance = 10
				add_character_modifier = {
					modifier = mind_reader_modifier
				}
			}
		}
	}
	scope:wmage0 = {
		#create_landless_adventurer_title_effect = {
		#	REASON = flag:wanderer
		#	FLAVOR_CHAR = THIS
		#}
		trigger_event = {
			id = magic_ev10.167
			days = { 20 40 }
		}
	}
}
create_pool_mage_effect = {
	random_ruler = {
		save_scope_as = pruler
	}
	create_character = {
		location = scope:pruler.location
		template = wandering_mage_character
		faith =scope:pruler.faith
		culture = scope:pruler.culture
		save_scope_as = wmage0
		after_creation = {
			give_witch_secret_or_trait_effect2 = yes
			add_trait_xp = {
				trait = lifestyle_traveler
				track = travel
				value = { 40 80 }
			}
			add_trait_xp = {
				trait = lifestyle_traveler
				track = danger
				value = { 40 80 }
			}
			#add_perk = magical_experiments_p1_perk
			#add_perk = mage_tower_p2_perk
			#add_perk = mind_control_p6_perk
			#add_perk = forbidden_ritual_p7_perk
			#add_perk = fate_weaver_p10_perk
			#add_perk = magic_triangulation_p5_perk
			#add_perk = combat_spells_p3_perk
			#add_perk = healer_p9_perk
			#add_perk = summoner_p8_perk
			#add_perk = mage_p4_perk
			#add_character_flag = special_magic_character
			turn_into_mage_effect = yes
			set_random_spell_id = yes
			random = {
				chance = 20
				add_character_modifier = gift_from_hell_modifier
			}
			if = {
				limit = {
					NOT = {	has_trait = archmage	}
				}
				add_trait = archmage
			}
			add_trait_xp = {
				trait = archmage
				track = secret_knowledge
				value = { 0 45 }
			}
			random_list = {
				1 = {
					add_trait_xp = {
						trait = archmage
						track = combat_magic
						value = { 10 35 }
					}
				}
				1 = {
					add_trait_xp = {
						trait = archmage
						track = alchemy
						value = { 10 35 }
					}
				}
			}
			add_trait_xp = {
				trait = archmage
				track = power_saturation
				value = { 10 50 }
			}
			random = {
				chance = 10
				add_trait = necromancer
				add_character_flag = skeleton_warriors
			}
			random = {
				chance = 10
				add_character_modifier = {
					modifier = mind_reader_modifier
				}
			}
		}
	}
	scope:wmage0 = {
		add_trait = adventurer
	}
}
create_court_mage_effect = {
	random_ruler = {
		limit = {
			highest_held_title_tier >= tier_kingdom
			NOT = {
				employs_court_position = mage_court_position
			}
			NOR = {
				has_trait = zealous
				has_trait = content
			}
			is_powerful_being = no
			is_ai = yes
			is_adult = yes
		}
		save_scope_as = pruler
	}
	create_character = {
		employer = scope:pruler
		gender_female_chance = 50
		template = student_mage_character
		save_scope_as = wmage0
		after_creation = {
			give_witch_secret_or_trait_effect2 = yes
			random_list = {
				8 = {
					turn_into_mage_effect = yes
					set_random_spell_id = yes
					if = {
						limit = {
							NOT = {	has_trait = archmage	}
						}
						add_trait = archmage
					}
					add_trait_xp = {
						trait = archmage
						track = power_saturation
						value = { 10 50 }
					}
					random = {
						chance = 10
						add_character_flag = healing_spell_flag
					}
				}
				2 = {
					become_false_mage_effect = yes
				}
			}
			add_trait_xp = {
				trait = archmage
				track = secret_knowledge
				value = { 0 5 }
			}
			random_list = {
				1 = {
					add_trait_xp = {
						trait = archmage
						track = combat_magic
						value = { 0 5 }
					}
				}
				1 = {
					add_trait_xp = {
						trait = archmage
						track = alchemy
						value = { 0 10 }
					}
				}
			}
		}
	}
	scope:pruler = {
		appoint_court_position = {
			recipient = scope:wmage0
			court_position = mage_court_position
		}
	}
}
turn_into_true_witch_effect = {
	if = {
		limit = {
			NOR = {
				has_trait = supernatural_hunter
				has_trait = witch_hunter
				has_character_modifier = novice_witch_hunter_modifier
				has_trait = true_witch
			}
		}
		show_as_tooltip = {
			add_trait = true_witch
		}
		hidden_effect = {
			if = {
				limit = {
					NOR = {
						has_trait = witch
						any_secret = { secret_type = secret_witch }
					}
				}
				give_witch_secret_or_trait_effect2 = yes
			}
			if = {
				limit = {
					NOT = {
						has_perk = protective_runes_perk
					}
				}
				add_perk = protective_runes_perk
			}
			if = {
				limit = {
					NOT = {
						has_perk = witch_familiar_perk
					}
				}
				add_perk = witch_familiar_perk
			}
			if = {
				limit = {
					NOT = {
						has_perk = oneiromancy_perk
					}
				}
				add_perk = oneiromancy_perk
			}
			if = {
				limit = {
					NOT = {
						has_perk = wisdom_of_nature_perk
					}
				}
				add_perk = wisdom_of_nature_perk
			}
			if = {
				limit = {
					NOT = {
						has_perk = love_potions_perk
					}
				}
				add_perk = love_potions_perk
			}
			if = {
				limit = {
					NOT = {
						has_perk = mistical_insight_perk
					}
				}
				add_perk = mistical_insight_perk
			}
			if = {
				limit = {
					NOT = {
						has_perk = evil_eye_perk
					}
				}
				add_perk = evil_eye_perk
			}
			if = {
				limit = {
					NOT = {
						has_perk = magical_senses_perk
					}
				}
				add_perk = magical_senses_perk
			}
			if = {
				limit = {
					NOT = {
						has_perk = lifestealer_perk
					}
				}
				add_perk = lifestealer_perk
			}
			if = {
				limit = {
					NOT = {
						has_perk = true_witch_perk
					}
				}
				add_perk = true_witch_perk
			}
		}
	}
}
turn_into_mage_effect = {
	if = {
		limit = {
			NOR = {
				has_trait = supernatural_hunter
				has_character_modifier = novice_witch_hunter_modifier
			}
		}
		if = {
			limit = {
				NOT = {
					has_trait = archmage
				}
			}
			show_as_tooltip = {
				add_trait = archmage
			}
		}
		hidden_effect = {
			if = {
				limit = {
					NOR = {
						has_trait = witch
						any_secret = { secret_type = secret_witch }
					}
				}
				give_witch_secret_or_trait_effect2 = yes
			}
			if = {
				limit = {
					NOT = {
						has_perk = magical_experiments_p1_perk
					}
				}
				add_perk = magical_experiments_p1_perk
			}
			if = {
				limit = {
					NOT = {
						has_perk = mage_tower_p2_perk
					}
				}
				add_perk = mage_tower_p2_perk
			}
			if = {
				limit = {
					NOT = {
						has_perk = mind_control_p6_perk
					}
				}
				add_perk = mind_control_p6_perk
			}
			if = {
				limit = {
					NOT = {
						has_perk = forbidden_ritual_p7_perk
					}
				}
				add_perk = forbidden_ritual_p7_perk
			}
			if = {
				limit = {
					NOT = {
						has_perk = fate_weaver_p10_perk
					}
				}
				add_perk = fate_weaver_p10_perk
			}
			if = {
				limit = {
					NOT = {
						has_perk = magic_triangulation_p5_perk
					}
				}
				add_perk = magic_triangulation_p5_perk
			}
			if = {
				limit = {
					NOT = {
						has_perk = combat_spells_p3_perk
					}
				}
				add_perk = combat_spells_p3_perk
			}
			if = {
				limit = {
					NOT = {
						has_perk = healer_p9_perk
					}
				}
				add_perk = healer_p9_perk
			}
			if = {
				limit = {
					NOT = {
						has_perk = summoner_p8_perk
					}
				}
				add_perk = summoner_p8_perk
			}
			if = {
				limit = {
					NOT = {
						has_perk = mage_p4_perk
					}
				}
				add_perk = mage_p4_perk
			}
		}
	}
	
}
turn_into_mage_progress_effect = {
	if = {
		limit = {
			NOT = {
				has_perk = magical_experiments_p1_perk
			}
		}
		add_perk = magical_experiments_p1_perk
	}
	else_if = {
		limit = {
			NOT = {
				has_perk = mage_tower_p2_perk
			}
		}
		add_perk = mage_tower_p2_perk
	}
	else_if = {
		limit = {
			NOT = {
				has_perk = mind_control_p6_perk
			}
		}
		add_perk = mind_control_p6_perk
	}
	else_if = {
		limit = {
			NOT = {
				has_perk = forbidden_ritual_p7_perk
			}
		}
		add_perk = forbidden_ritual_p7_perk
	}
	else_if = {
		limit = {
			NOT = {
				has_perk = fate_weaver_p10_perk
			}
		}
		add_perk = fate_weaver_p10_perk
	}
	else_if = {
		limit = {
			NOT = {
				has_perk = magic_triangulation_p5_perk
			}
		}
		add_perk = magic_triangulation_p5_perk
	}
	else_if = {
		limit = {
			NOT = {
				has_perk = combat_spells_p3_perk
			}
		}
		add_perk = combat_spells_p3_perk
	}
	else_if = {
		limit = {
			NOT = {
				has_perk = healer_p9_perk
			}
		}
		add_perk = healer_p9_perk
	}
	else_if = {
		limit = {
			NOT = {
				has_perk = summoner_p8_perk
			}
		}
		add_perk = summoner_p8_perk
	}
	else_if = {
		limit = {
			NOT = {
				has_perk = mage_p4_perk
			}
		}
		add_perk = mage_p4_perk
		add_trait_xp = {
			trait = archmage
			track = secret_knowledge
			value = { 1 11 }
		}
	}
}

create_mage_effect = {
	hidden_effect = {
		random_ruler = {
			limit = {
				is_ai = no
			}
			save_scope_as = hplayer1
		}
		random_ruler = {
			limit = {
				is_landed_or_landless_administrative = yes	
				is_ruler = yes
				is_independent_ruler = yes
				primary_title = { is_mercenary_company = no }	
				highest_held_title_tier > 2
				exists = dynasty		
				dynasty={
					NOT={
						has_variable=ev1used
					}
				}
				in_diplomatic_range = scope:hplayer1
				#capital_province = {
				#	OR = {
				#		geographical_region = world_asia_minor
				#		geographical_region = world_europe
				#	}	
				#}
				is_ai = yes
				NOT = { has_trait = zealous }
				NOT = { has_trait = source }
				#NOT = { has_trait = source2 }
				#NOT = { has_trait = source3 }
				#NOT = { has_trait = source4 }
				OR = {
					has_trait = education_learning_1
					has_trait = education_learning_2
					has_trait = education_learning_3
					has_trait = education_learning_4
					has_trait = education_learning_5
					has_trait = education_martial_3
					has_trait = education_martial_4
					has_trait = education_martial_5
					has_trait = education_diplomacy_4
					has_trait = education_diplomacy_5
					has_trait = education_intrigue_3
					has_trait = education_intrigue_4
					has_trait = education_intrigue_5
				}
			}
			#save_temporary_scope_as = new_mage
			save_scope_as = new_mage
			#add_secret = {
			#	type = secret_witch
			#	target = this
			#}
			give_witch_secret_or_trait_effect2 = yes
			#random = {
			#	chance = 50
			#	add_trait = source
			#}
			add_learning_skill = 2
			#add_intrigue_skill = 2
			
			#add_perk = protective_runes_perk
			add_perk = magical_experiments_p1_perk
			add_perk = mage_tower_p2_perk
			add_perk = mind_control_p6_perk
			add_perk = forbidden_ritual_p7_perk
			add_perk = fate_weaver_p10_perk
			add_perk = magic_triangulation_p5_perk
			add_perk = combat_spells_p3_perk
			add_perk = healer_p9_perk
			add_perk = summoner_p8_perk
			add_perk = mage_p4_perk
			set_random_spell_id = yes
			random = {
				chance = 50
				add_trait_xp = {
					trait = archmage
					track = demonology
					value = 30
				}
			}
			random = {
				chance = 20
				add_character_modifier = gift_from_hell_modifier
			}
			set_random_spell_id = yes
			random_list = {
				55 = {
					add_min_source_trait = yes
					add_trait_xp = {
						trait = archmage
						track = secret_knowledge
						value = { 5 15 }
					}
					add_trait_xp = {
						trait = archmage
						track = alchemy
						value = { 1 10 }
					}
				}
				10 = {
					gain_huge_ps_effect = yes
					add_trait = source
					add_trait_xp = {
						trait = source
						track = magic_potential
						value = { 0 75 }
					}
					add_trait_xp = {
						trait = archmage
						track = secret_knowledge
						value = { 5 40 }
					}
					add_trait_xp = {
						trait = archmage
						track = combat_magic
						value = { 1 60 }
					}
				}
				25 = {
					gain_huge_ps_effect = yes
					add_trait_xp = {
						trait = archmage
						track = secret_knowledge
						value = { 15 60 }
					}
					add_trait_xp = {
						trait = archmage
						track = demonology
						value = { 25 65 }
					}
					add_trait_xp = {
						trait = archmage
						track = alchemy
						value = { 25 60 }
					}
				}
				10 = {	#badass
					trigger = {
						age > 50
					}
					add_prestige_level = 2
					add_gold = 1000
					add_trait = source
					add_trait_xp = {
						trait = source
						track = magic_potential
						value = 80
					}
					add_learning_skill = 6
					add_trait_xp = {
						trait = archmage
						track = secret_knowledge
						value = { 50 90 }
					}
					add_trait_xp = {
						trait = archmage
						track = demonology
						value = { 35 85 }
					}
					add_trait_xp = {
						trait = archmage
						track = combat_magic
						value = 100
					}
					assign_special_spell_effect = { NR = 1 S1 = 2 S2 = 1 S3 = 1 }
					add_trait_xp = {
						trait = archmage
						track = alchemy
						value = { 10 80 }
					}
					add_trait_xp = {
						trait = archmage
						track = power_saturation
						value = 70
					}
					random_artifact = {
						limit = {
							has_variable = magic1
							NOT = {
								artifact_owner = scope:new_mage
							}
						}
						save_scope_as = mart2
					}
					if = {
						limit = {
							exists = scope:mart2
							NOT = {
								has_personal_artifact_claim = scope:mart2
							}
						}
						add_personal_artifact_claim = scope:mart2
						add_character_modifier = {
							modifier = preparation_for_stealing_modifier
							years = 5
						}
					}
					if = {
						limit = {
							exists = scope:mart2
							in_diplomatic_range = scope:mart2.artifact_owner
						}
						#start_scheme = {
						#	type = steal_back_artifact
						#	target_character = scope:mart2.artifact_owner
						#	artifact = scope:mart2
						#}
						begin_scheme_with_agents_effect = {
							SCHEME_TYPE = steal_back_artifact
							TARGET_TYPE = target_character
							TARGET_SCOPE = scope:mart2.artifact_owner
							# Success.
							AGENT_1 = agent_thief
							AGENT_2 = agent_thief
							# Speed.
							AGENT_3 = agent_infiltrator
							AGENT_4 = agent_infiltrator
							# Secrecy.
							AGENT_5 = agent_lookout
						}
						scope:new_scheme ?= {
							set_variable = {
								name = target_artifact
								value = scope:mart2
							}
						}
					}
					add_character_modifier = {
						modifier = master_defence_modifier
						years = 2
					}
					add_character_modifier = {
						modifier = very_observant_of_details
						years = 10
					}
					add_character_modifier = {
						modifier = more_vigilant_recistance_modifier
					}
					random = {
						chance = 40
						add_character_modifier = {
							modifier = master_alteration_modifier
						}
						add_character_flag = magic_transmutation
					}
					random = {
						chance = 40
						add_character_modifier = {
							modifier = master_necromancer_modifier
						}
						add_trait = necromancer
						spawn_army = {
							name = undead_army_loc
							men_at_arms = {
								type = skeletons
								stacks = 10
							}
							inheritable = no
							uses_supply = no
							location = scope:new_mage.location
						}
						add_character_flag = skeleton_warriors
					}
					random = {
						chance = 40
						add_character_modifier = {
							modifier = master_metamagic_modifier
						}
					}
					random = {
						chance = 40
						add_character_modifier = {
							modifier = upgraded_body_modifier
						}
					}
					random = {
						chance = 40
						add_character_modifier = {
							modifier = master_psionic_modifier
						}
						add_character_modifier = {
							modifier = mind_reader_modifier
						}
					}
					random = {
						chance = 40
						add_character_modifier = {
							modifier = strength_ohm_modifier
						}
					}
					random = {
						chance = 40
						add_character_modifier = {
							modifier = demonic_charm_modifier
						}
					}
					random = {
						chance = 40
						add_character_flag = protection_ritual
					}
					random = {
						chance = 40
						add_character_modifier = {
							modifier = financial_knowledge_modifier
							years = 5
						}
					}
					random_list = {
						1 = {
							trigger = {
								NOT = { has_character_flag = shadowstep_flag }
							}
							add_character_flag = shadowstep_flag
						}
						1 = {
							trigger = {
								NOT = { has_character_flag = hipercognition_flag }
							}
							add_character_flag = hipercognition_flag
						}
						1 = {
							trigger = {
								NOT = { has_character_flag = firestorm_spell_flag }
							}
							add_character_flag = firestorm_spell_flag
						}
						1 = {
							trigger = {
								NOT = { has_character_flag = plague_spell_flag }
							}
							add_character_flag = plague_spell_flag
						}
						1 = {
							trigger = {
								NOT = { has_character_flag = healing_spell_flag }
							}
							add_character_flag = healing_spell_flag
						}
					}
					random_vassal = {
						limit = {
							is_powerful_vassal = yes
						}
						save_scope_as = some_vassal
						
					}
					if = {
						limit = {
							exists = scope:some_vassal
						}
						set_relation_mminion = scope:some_vassal
						add_hook = {
							type = magic_domination_hook
							target = scope:some_vassal
						}
					}
				}
				#1= {
				#	trigger = {
				#		NOT = {
				#			any_living_character = {
				#				has_trait = source3
				#			}
				#		}
				#	}
				#	add_trait = source3
				#}
			}
			random_list = {
				10 = {
					spawn_army = {
						name = demonic_knights
						men_at_arms = {
							type = demonic_knights
							stacks = 2
						}
						levies = {
							add = 600
						}
						inheritable = no
						uses_supply = no
						location = scope:new_mage.location
					}
					add_martial_skill = 4
				}
				10 = {
					if = {
						limit = {
							NOT = {
								has_perk = prepared_for_anything_perk
							}
						}
						add_perk = prepared_for_anything_perk
					}
					if = {
						limit = {
							NOT = {
								has_perk = a_job_done_right_perk
							}
						}
						add_perk = a_job_done_right_perk
					}
					add_intrigue_skill = 2
					add_martial_skill = 4
				}
				10 = {
					gain_huge_ps_effect = yes
					add_intrigue_skill = 3
					add_learning_skill = 3
					add_trait_xp = {
						trait = archmage
						track = secret_knowledge
						value = 8
					}
				}
			}
			add_stress = major_stress_loss
			random_ruler = {
				limit = {
					is_ai = no
					OR = {
						has_trait = witch_hunter
						has_trait = supernatural_hunter
						has_trait = archmage
						is_a_demon_trigger = yes
						has_perk = magical_experiments_p1_perk
					}
				}
				save_scope_as = ppplayer
			}
			if = {
				limit = {
					exists = scope:ppplayer
				}
				random = {
					chance = 30
					add_pressed_claim = scope:ppplayer.primary_title
				}
			}
			
			random = {
				chance = 50
				random_artifact = {
					limit = {
						has_variable = magic1
						NOT = {
							artifact_owner = scope:new_mage
						}
					}
					save_scope_as = mart
				}
				if = {
					limit = {
						exists = scope:mart
						NOT = {
							has_personal_artifact_claim = scope:mart
						}
					}
					add_personal_artifact_claim = scope:mart
					#add_intrigue_skill = 1
				}
			}
			
			random = {
				chance = 10
				add_character_modifier = {
					modifier = master_defence_modifier
					years = 10
				}
			}

			random = {
				chance = 10
				add_character_flag = healing_spell_flag
			}
			if = {
				limit = {
					NOT = {
						has_trait = compassionate
						has_trait = just
					}
					any_vassal = {
						is_powerful_vassal = yes
						is_ai = yes
					}
				}
				random_vassal = {
					limit = {
						is_powerful_vassal = yes
						is_ai = yes
					}
					save_scope_as = vvvasal
				}
				set_relation_mminion = scope:vvvasal
				if = {
					limit = {
						has_hook = scope:vvvasal
					}
					remove_hook = {
						target = scope:vvvasal
					}
				}
				add_hook = {
					type = magic_domination_hook
					target = scope:vvvasal
				}
			}
			if = {
				limit = {
					exists = primary_heir
					primary_heir = {
						NOR = {
							has_trait = witch
							any_secret = { secret_type = secret_witch }
						}
					}
				}
				primary_heir = {
					give_witch_secret_or_trait_effect2 = yes
				}
			}
			random_living_character = {
				limit = {
					NOT = { THIS = scope:new_mage }
					any_character_artifact = {
						has_variable = magic1
					}
					NOT = {
						has_character_flag = magic_item_offer_already_flag
					}
					is_adult = yes
					is_imprisoned = no
				}
				random = {
					chance = 50
					trigger_event = magic_ev7.136
				}
			}
		}
	}
}



burn_witch_effect = {
	$RWITCH$ = { save_scope_as = rwitch }
	
	scope:rwitch = {
		death = {
			killer = root
			death_reason = death_burned_witch
		}
	}
	if = {
		limit = {
			scope:rwitch = {
				OR = {
					OR = {
						has_trait = witch
						any_secret = { secret_type = secret_witch }
					}
				}
			}
		}
		#add_character_flag = killed_real_witch_flag
		if = {
			limit = {
				OR = {
					AND = {
						exists = scope:rwitch.house
						scope:rwitch.house = {
							has_house_modifier = witch_coven
						}
						scope:rwitch.house.house_head = scope:rwitch
					}
					AND = {
						scope:rwitch = {
							OR = {
								has_trait = archmage
								has_trait = grandmaster_coven
							}
						}
					}
					AND = {
						scope:rwitch = {
							is_a_demon_trigger = yes
						}
					}
				}
			}
			add_prestige = 1000
			#add_trait_xp = {
			#	trait = witch_hunter
			#	value = 100
			#}
			if = {
				limit = {
					trait_is_criminal_in_faith_trigger = { TRAIT = witch FAITH = root.faith GENDER_CHARACTER = scope:rwitch }
				}
				add_piety = 1000
			}
		}
		else_if = {
			limit = {
				scope:rwitch = {
					highest_held_title_tier >4
				}
			}
			add_prestige = 800
			#add_trait_xp = {
			#	trait = witch_hunter
			#	value = 80
			#}
			if = {
				limit = {
					trait_is_criminal_in_faith_trigger = { TRAIT = witch FAITH = root.faith GENDER_CHARACTER = scope:rwitch }
				}
				add_piety = 800
			}
		}
		else_if = {
			limit = {
				scope:rwitch = {
					OR = {
						highest_held_title_tier >3
						has_trait = true_witch
					}
				}
			}
			add_prestige = 500
			#add_trait_xp = {
			#	trait = witch_hunter
			#	value = 50
			#}
			if = {
				limit = {
					trait_is_criminal_in_faith_trigger = { TRAIT = witch FAITH = root.faith GENDER_CHARACTER = scope:rwitch }
				}
				add_piety = 500
			}
		}
		else_if = {
			limit = {
				scope:rwitch = {
					highest_held_title_tier >2
				}
			}
			add_prestige = 300
			#add_trait_xp = {
			#	trait = witch_hunter
			#	value = 30
			#}
			if = {
				limit = {
					trait_is_criminal_in_faith_trigger = { TRAIT = witch FAITH = root.faith GENDER_CHARACTER = scope:rwitch }
				}
				add_piety = 300
			}
		}
		else = {
			add_prestige = 100
			#add_trait_xp = {
			#	trait = witch_hunter
			#	value = 10
			#}
			if = {
				limit = {
					trait_is_criminal_in_faith_trigger = { TRAIT = witch FAITH = root.faith GENDER_CHARACTER = scope:rwitch }
				}
				add_piety = 100
			}
		}
		add_stress = medium_stress_loss
		
	}
	else = {
		add_stress = medium_stress_gain
		add_prestige = -100
		add_piety = -100
	}
	add_dread = 5
	clear_saved_scope = rwitch
}
#give_magic_sat_effect = {
#	if = {
#		limit = { has_perk = combat_spells_p3_perk }
#		add_character_modifier = {
#			modifier = power_saturated2
#		}
#	}
#	else = {
#			add_character_modifier = {
#				modifier = power_saturated1
#			}
#		
#	}
#}

#remove_magic_sat_effect = {
#	if = {
#		limit = { has_character_modifier = power_saturated2 }
#		remove_character_modifier = {
#			modifier = power_saturated2
#		}
#		
#	}
#	if = { limit = { has_character_modifier = power_saturated1 }
#		remove_character_modifier = {
#			modifier = power_saturated1
#		}
#		
#	}
#}

cgrandmaster_has_been_chosen_effect = {
	involved_activity = {
		add_activity_log_entry = {
			key = cgrandmaster_chosen
			tags = { good major completed }
			#tags = { completed }
			show_in_conclusion = yes
			character = root
			prev = {
				save_scope_as = i_am_new_cmg
				add_trait = grandmaster_coven
				if = {
					limit = {
						is_valid_for_legitimacy_change = yes
						culture = {
							has_cultural_tradition = coven_rule_tradition
						}
					}
					add_legitimacy = medium_legitimacy_gain
				}
				add_xp_2_grandmaster_inheriting = yes
				add_prestige = medium_prestige_gain
				complete_activity_intent = yes
				hidden_effect = {
					random_secret = {
						limit = {
							secret_type = secret_witch
						}
						save_scope_as = master_secret
					}
					house = {
						every_house_member = {
							limit = {
								NOR = {
									THIS = scope:i_am_new_cmg
									has_trait = witch
								}
								any_secret = {
									secret_type = secret_witch
									NOT = {	is_known_by = scope:i_am_new_cmg	}
								}
							}
							random_secret = {
								limit = {
									secret_type = secret_witch
								}
								reveal_to = scope:i_am_new_cmg
							}
							
							if = {
								limit = {
									has_trait = grandmaster_coven
								}
								remove_trait = grandmaster_coven
							}
						}
						if = {
							limit = {
								exists = scope:master_secret
							}
							every_house_member = {
								limit = {
									OR = {
										has_trait = witch
										any_secret = { secret_type = secret_witch }
									}
									NOT = { THIS = scope:i_am_new_cmg }
								}
								if = {
									limit = {
										scope:master_secret = {
											NOT = {	is_known_by = PREV	}
										}
									}
									scope:master_secret = {
										reveal_to = PREV
									}
								}
							}
						}
					}
				}
				clear_saved_scope = i_am_new_cmg
			}
		}
	}
}

seek_the_power1_effect = {
	involved_activity = {
		add_activity_log_entry = {
			key = seek_the_power1_key
			#tags = { good major completed }
			#tags = { completed }
			show_in_conclusion = yes
			character = root
			prev = {
				custom_tooltip = seek_the_power1_ct
			}
		}
	}
}

seek_the_power2_effect = {
	involved_activity = {
		add_activity_log_entry = {
			key = seek_the_power2_key
			#tags = { good major completed }
			#tags = { completed }
			show_in_conclusion = yes
			character = root
			prev = {
				show_as_tooltip = {
					add_character_modifier = {
						modifier = ancient_tomes_modifier
						years = 3
					}
				}
			}
		}
	}
}

seek_the_power3a_effect = {
	involved_activity = {
		add_activity_log_entry = {
			key = seek_the_power2_key
			#tags = { good major completed }
			#tags = { completed }
			show_in_conclusion = yes
			character = root
			prev = {
				show_as_tooltip = {
					gain_huge_ps_effect = yes
				}
			}
		}
	}
}

seek_the_power3b_effect = {
	involved_activity = {
		add_activity_log_entry = {
			key = seek_the_power2_key
			#tags = { good major completed }
			#tags = { completed }
			show_in_conclusion = yes
			character = root
			prev = {
				show_as_tooltip = {
					add_stress = minor_stress_loss
				}
			}
		}
	}
}

seek_the_power4a_effect = {
	involved_activity = {
		add_activity_log_entry = {
			key = seek_the_power2_key
			#tags = { good major completed }
			#tags = { completed }
			show_in_conclusion = yes
			character = root
			prev = {
				custom_tooltip = ev2.47.a_ct
			}
		}
	}
}

seek_the_power4b_effect = {
	involved_activity = {
		add_activity_log_entry = {
			key = seek_the_power2_key
			#tags = { good major completed }
			#tags = { completed }
			show_in_conclusion = yes
			character = root
			prev = {
				show_as_tooltip = {
					add_stress = medium_stress_loss
					#add_learning_skill = 1
				}
			}
		}
	}
}

seek_the_power4c_effect = {
	involved_activity = {
		add_activity_log_entry = {
			key = seek_the_power2_key
			#tags = { good major completed }
			#tags = { completed }
			show_in_conclusion = yes
			character = root
			prev = {
				show_as_tooltip = {
					gain_sc_xp1_effect = yes
				}
			}
		}
	}
}

seek_the_power5_effect = {
	involved_activity = {
		add_activity_log_entry = {
			key = seek_the_power2_key
			#tags = { good major completed }
			#tags = { completed }
			show_in_conclusion = yes
			character = root
			prev = {
				custom_tooltip = seek_the_power5_effect_ct
			}
		}
	}
}

seek_the_power6a_effect = {
	involved_activity = {
		add_activity_log_entry = {
			key = seek_the_power2_key
			#tags = { good major completed }
			#tags = { completed }
			show_in_conclusion = yes
			character = root
			prev = {
				custom_tooltip = ev4.88.0.a_ct
			}
		}
	}
}

artifacts_searching_completed_log_entry_effect = {
	involved_activity = {
		if = {
			limit = {
				var:activity_special_type_progression < 50
			}
			add_activity_log_entry = {
				key = artifacts_searching_studies_completed_log
				#tags = { completed }
				#score = 100
				show_in_conclusion = yes
				character = root
				#Effects
				root = {
					hidden_effect = {
						add_stress = medium_stress_gain
					}
					show_as_tooltip = {
						add_stress = medium_stress_gain
					}
				}
			}
		}
		else_if = {
			limit = {
				var:activity_special_type_progression < 75
			}
			add_activity_log_entry = {
				key = artifacts_searching_studies_completed_log2
				tags = { good major completed }
				show_in_conclusion = yes
				character = root
				root = {
					custom_tooltip = artifacts_searching_concluded
					custom_tooltip = artifacts_searching_concluded3
					complete_activity_intent = yes
				}
			}
		}
		else_if = {
			limit = {
				var:activity_special_type_progression < 100
			}
			add_activity_log_entry = {
				key = artifacts_searching_studies_completed_log2
				tags = { good major completed }
				show_in_conclusion = yes
				character = root
				root = {
					custom_tooltip = artifacts_searching_concluded
					if = {
						limit = {
							NOT = { has_personal_artifact_claim = scope:final_arti }
						}
						if = {
							limit = {
								has_character_flag = will_gain_claim_for_magic_item
							}
							hidden_effect = {
								add_personal_artifact_claim = scope:final_arti
							}
							show_as_tooltip = {
								add_personal_artifact_claim = scope:final_arti
							}
							#custom_tooltip = artifacts_searching_concluded4
						}
						else = {
							custom_tooltip = artifacts_searching_concluded3
						}
					}
					complete_activity_intent = yes
				}
			}
		}
		else_if = {
			limit = {
				var:activity_special_type_progression >99
			}
			add_activity_log_entry = {
				key = artifacts_searching_studies_completed_log2
				tags = { good major completed }
				show_in_conclusion = yes
				character = root
				root = {
					custom_tooltip = artifacts_searching_concluded
					if = {
						limit = {
							NOT = { has_personal_artifact_claim = scope:final_arti }
						}
						hidden_effect = {
							add_personal_artifact_claim = scope:final_arti
						}
						show_as_tooltip = {
							add_personal_artifact_claim = scope:final_arti
						}
						#custom_tooltip = artifacts_searching_concluded4
					}
					complete_activity_intent = yes
				}
			}
		}
	}
}

upgrade_arcana_legacy_effect = {
	if = {
		limit = {
			exists = dynasty
		}
		dynasty = {
			if = {
				limit = {
					NOT = {	has_dynasty_perk = witchcraft_legacy_1	}
				}
				hidden_effect = {
					add_dynasty_prestige = compensate_dynast_prest_value
				}
				add_dynasty_perk = witchcraft_legacy_1
			}
			else_if = {
				limit = {
					NOT = {	has_dynasty_perk = witchcraft_legacy_2	}
				}
				hidden_effect = {
					add_dynasty_prestige = compensate_dynast_prest_value
				}
				add_dynasty_perk = witchcraft_legacy_2
			}
			else_if = {
				limit = {
					NOT = {	has_dynasty_perk = witchcraft_legacy_3	}
				}
				hidden_effect = {
					add_dynasty_prestige = compensate_dynast_prest_value
				}
				add_dynasty_perk = witchcraft_legacy_3
			}
			else_if = {
				limit = {
					NOT = {	has_dynasty_perk = witchcraft_legacy_4	}
				}
				hidden_effect = {
					add_dynasty_prestige = compensate_dynast_prest_value
				}
				add_dynasty_perk = witchcraft_legacy_4
			}
			else_if = {
				limit = {
					NOT = {	has_dynasty_perk = witchcraft_legacy_5	}
				}
				hidden_effect = {
					add_dynasty_prestige = compensate_dynast_prest_value
				}
				add_dynasty_perk = witchcraft_legacy_5
			}
		}
	}
	
}

dark_blade_grows_stronger = {
	hidden_effect = {
		random_character_artifact = {
			limit = {	has_variable = dark_blade	}
			random_list = {
				2 = {	add_artifact_modifier = darkk_blade_1_modifier	}
				1 = {	add_artifact_modifier = darkk_blade_2_modifier	}
				1 = {	add_artifact_modifier = darkk_blade_3_modifier	}
				1 = {	add_artifact_modifier = darkk_blade_4_modifier	}
				#1 = {	add_artifact_modifier = darkk_blade_5_modifier	}
				1 = {	add_artifact_modifier = darkk_blade_6_modifier	}
			}
			add_durability = 100
		}
		if = {
			limit = {
				NOT = {
					has_character_flag = db_story_flag
				}
			}
			random = {
				chance = 50
				trigger_event = {
					id = magic_ev4.52
					months = { 12 24 }
				}
			}
		}
		if = {
			limit = {
				NOR = {
					any_secret = {
						secret_type = secret_witch
					}
					has_trait = witch
				}
			}
			give_witch_secret_or_trait_effect2 = yes
		}
	}
}

try_one_more_seek_power_effect1 = {
	random_list = {
		15 = {

		}
		10 = {
			trigger = {
				NOT = {	has_character_modifier = ancient_tomes_modifier	}
			}
			trigger_event = {
				id = magic_ev4.75
				days = 1
			}
		}
		2 = {
			trigger_event = {
				id = witch.3014
			}
		}
		5 = {
			trigger = {
				any_character_artifact = {
					has_variable = magic1
					count < 4
				}
			}
			trigger_event = {
				id = magic_ev4.78
				days = 1
			}
		}
	}
}
display_mage_duel_warnings_effect = {
	if = {
		limit = {
			OR = {
				scope:actor.overall_magic_power_value = scope:recipient.overall_magic_power_p1_value
				scope:actor.overall_magic_power_value = scope:recipient.overall_magic_power_value
				scope:actor.overall_magic_power_p1_value = scope:recipient.overall_magic_power_value
			}
		}
		scope:actor = {
			custom_tooltip = mage_duel_warnings_ct1
		}
	}
	else_if = {
		limit = {
			scope:actor.overall_magic_power_value > scope:recipient.overall_magic_power_p1_value
		}
		scope:actor = {
			custom_tooltip = mage_duel_warnings_ct3
		}
	}
	else_if = {
		limit = {
			scope:actor.overall_magic_power_p1_value < scope:recipient.overall_magic_power_value
		}
		scope:actor = {
			custom_tooltip = mage_duel_warnings_ct2
		}
	}
}

create_mefisto_effect = {
	hidden_effect_new_object = {
		random_ruler = {
			limit = {
				is_landed_or_landless_administrative = yes
				is_independent_ruler = yes
				is_ai = yes
			}
			create_character = {
				name = mefisto_name
				#location = root.capital_province
				employer = this
				faith = this.faith
				template = mefisto_demon_character
				save_scope_as = demon
				after_creation = {
					give_witch_secret_or_trait_effect2 = yes
				}
			}
			save_scope_as = mruler
		}
		scope:demon = {
			add_character_modifier = infertile_modifier
			add_character_flag = mefisto_devil
			add_character_flag = special_magic_character
			add_character_modifier = mind_reader_modifier
			add_character_modifier = demonic_charm_modifier
			add_character_modifier = peaceful_dreams_modifier
			#give_witch_secret_or_trait_effect2 = yes
			#add_trait_xp = {
			#	trait = demon2
			#	value = 55
			#}

			add_character_modifier = whisperer_modifier
			#turn_into_greater_demon = yes
			#add_trait_xp = {
			#	trait = demon2
			#	track = hell_powers
			#	value = 20
			#}
			#add_trait_xp = {
			#	trait = demon2
			#	track = demon_reputation
			#	value = 30
			#}
			add_perk = truth_is_relative_perk
			add_perk = digging_for_dirt_perk
			add_perk = kidnapper_perk
			add_perk = court_of_shadows_perk
			add_perk = prepared_for_anything_perk
			add_perk = swift_execution_perk
			add_perk = a_job_done_right_perk
			add_perk = twice_schemed_perk 
			add_perk = schemer_perk
			add_perk = carefree_perk
			add_trait_xp = {
				trait = source
				track = magic_potential
				value = 45
			}
			add_hook = {
				type = magic_domination_hook
				target = scope:mruler
			}
			set_relation_mminion = scope:mruler
			#create_landless_adventurer_title_effect = {
				#REASON = flag:voluntary
				#FLAVOR_CHAR = scope:mruler
			#	REASON = flag:wanderer
			#	FLAVOR_CHAR = THIS
			#}
			trigger_event = {
				id = magic_ev10.167
				days = 3
			}
		}
	}
}

create_pandora_effect = {
	hidden_effect = {
		create_character = {
			name = pandora_name
			gender = female
			employer = this
			faith = this.faith
			template = pandora_demon_character
			save_scope_as = demon
		}
		scope:demon = {
			add_character_flag = pandora_flag
			add_character_flag = special_magic_character
			add_secret = {
				type = secret_witch
				target = this
			}
			#add_trait_xp = {
			#	trait = demon2
			#	value = 40
			#}
			set_source4demon = yes
		}
	}
}

add_xp_2_grandmaster_inheriting = {
	hidden_effect = {
		if = {
			limit = {
				has_trait = grandmaster_coven
			}
			if = {
				limit = {
					OR = {
						AND = {
							exists = father
							father = {
								has_trait = grandmaster_coven
							}
						}
						AND = {
							exists = mother
							mother = {
								has_trait = grandmaster_coven
							}
						}
						AND = {
							exists = father.father
							father.father = {
								has_trait = grandmaster_coven
							}
						}
						AND = {
							exists = mother.father
							mother.father = {
								has_trait = grandmaster_coven
							}
						}
						AND = {
							exists = father.mother
							father.mother = {
								has_trait = grandmaster_coven
							}
						}
						AND = {
							exists = mother.mother
							mother.mother = {
								has_trait = grandmaster_coven
							}
						}
					}
				}
				add_trait_xp = {
					trait = grandmaster_coven
					value = 30
				}
			}
		}
	}
}
spawn_witch_hunter_full_chance_effect = {
	$EMPL$ = { save_scope_as = empl }
	hidden_effect_new_object = {
		if = {
			limit = {
				scope:empl = {
					is_landed_or_landless_administrative = yes
				}
			}
			create_character = {
				employer = scope:empl
				template = witch_hunter_character
				save_scope_as = whunter
				after_creation = {
					add_secret = {
						type = secret_witch_hunter
					}
					add_gold = 100
					#add_trait_xp = {
					#	trait = witch_hunter
					#	value = { 1 90 }
					#}
					random_living_character = {
						limit = {
							has_character_modifier = inq_modifier
						}
						add_hook = {
							type = loyalty_hook
							target = PREV
						}
					}
				}
			}
		}
		else = {
			create_character = {
				location = scope:empl.location
				faith = scope:empl.location.faith
				culture = scope:empl.location.culture
				template = witch_hunter_character
				save_scope_as = whunter
				after_creation = {
					add_secret = {
						type = secret_witch_hunter
					}
					add_gold = 50
					random_living_character = {
						limit = {
							has_character_modifier = inq_modifier
						}
						add_hook = {
							type = loyalty_hook
							target = PREV
						}
					}
				}
			}
		}
		if = {
			limit = {
				has_game_rule = high_whunters
			}
			scope:whunter = {
				add_intrigue_skill = 3
				add_prowess_skill = 3
				random = {
					chance = 50
					if = { limit = { has_perk = truth_is_relative_perk } add_perk = truth_is_relative_perk }
					if = { limit = { has_perk = digging_for_dirt_perk } add_perk = digging_for_dirt_perk }
					if = { limit = { has_perk = kidnapper_perk } add_perk = kidnapper_perk }
					if = { limit = { has_perk = court_of_shadows_perk } add_perk = court_of_shadows_perk }
					if = { limit = { has_perk = prepared_for_anything_perk } add_perk = prepared_for_anything_perk }
					if = { limit = { has_perk = swift_execution_perk } add_perk = swift_execution_perk }
					if = { limit = { has_perk = a_job_done_right_perk } add_perk = a_job_done_right_perk }
					if = { limit = { has_perk = twice_schemed_perk } add_perk = twice_schemed_perk }
					if = { limit = { has_perk = schemer_perk } add_perk = schemer_perk }
				}
			}
		}
		else = {
			scope:whunter = {
				random = {
					chance = 10
					if = { limit = { has_perk = truth_is_relative_perk } add_perk = truth_is_relative_perk }
					if = { limit = { has_perk = digging_for_dirt_perk } add_perk = digging_for_dirt_perk }
					if = { limit = { has_perk = kidnapper_perk } add_perk = kidnapper_perk }
					if = { limit = { has_perk = court_of_shadows_perk } add_perk = court_of_shadows_perk }
					if = { limit = { has_perk = prepared_for_anything_perk } add_perk = prepared_for_anything_perk }
					if = { limit = { has_perk = swift_execution_perk } add_perk = swift_execution_perk }
					if = { limit = { has_perk = a_job_done_right_perk } add_perk = a_job_done_right_perk }
					if = { limit = { has_perk = twice_schemed_perk } add_perk = twice_schemed_perk }
					if = { limit = { has_perk = schemer_perk } add_perk = schemer_perk }
				}
			}
		}
	}
}

massive_kill_player_dynasty = {
	random_ruler = {
		limit = {
			is_ai = no
		}
		dynasty = {
			save_scope_as = dyn0
		}
	}
	every_councillor = {
		limit = {
			is_ai = yes
			NOT = {
				any_scheme = {
					is_hostile = yes
				}
			}
		}
		add_gold = 50
		scope:dyn0 = {
			random_dynasty_member = {
				save_scope_as = tar
			}
		}
		start_scheme = {
			type = murder
			target_character = scope:tar
		}
	}
}

consider_demonslayer_nickname = {
	if = {
		limit = {
			has_trait = archmage
			#is_ai = no
			NOR = {
				has_character_flag = special_magic_character
				has_nickname = mage2_nickname
				has_nickname = mage3_nickname
				has_nickname = mage4m_nickname
				has_nickname = mage5m_nickname
				has_nickname = mage6m_nickname
				has_nickname = mage6f_nickname
				has_nickname = mage4f_nickname
				has_nickname = mage5f_nickname
				has_nickname = demonslayer_nickname
			}
		}
		give_nickname = demonslayer_nickname
	}
}

select_responsible_person_effect = {
	if = {
		limit = {
			any_relation = {
				type = guardian
			}
		}
		random_relation = {
			type = guardian
			save_scope_as = resper
		}
	}
	else_if = {
		limit = {
			is_ruler = no
			exists = liege
		}
		liege = {
			if = {
				limit = {
					employs_court_position = mage_court_position
				}
				random_court_position_holder = {
					type = mage_court_position
					save_scope_as = resper
				}
			}
			else = {
				save_scope_as = resper
			}
		}
	}
	else_if = {
		limit = {
			is_ruler = yes
			is_landed_or_landless_administrative = yes
		}
		if = {
			limit = {
				employs_court_position = mage_court_position
			}
			random_court_position_holder = {
				type = mage_court_position
				save_scope_as = resper
			}
		}
		else = {
			random_councillor = {
				save_scope_as = resper
			}
		}
	}
	else_if = {
		limit = {
			is_pool_character = no
		}
		random_living_character = {
			limit = {
				location = root.location
				NOT = { THIS = ROOT }
			}
			save_scope_as = resper
		}
	}
}
send_additional_notif_magic_eruption_effect = {
	hidden_effect = {
		if = {
			limit = {
				exists = scope:mchild
			}
			scope:mchild = {
				if = {
					limit = {
						is_ruler = no
					}
					if = {
						limit = {
							exists = liege
							NOT = {
								liege = scope:resper
							}
						}
						liege = {
							send_interface_toast = {
								title=ev7.6.title
								left_icon = scope:mchild
							}
						}
					}
					else_if = {
						limit = {
							NOT = {
								exists = liege
							}
							exists = location
							exists = location.county
							exists = location.county.holder
							NOT = {
								location.county.holder = scope:resper
							}
						}
						location.county.holder = {
							send_interface_toast = {
								title=ev7.6.title
								left_icon = scope:mchild
							}
						}
					}
				}
			}
		}
	}
}
heavy_wounds_effect = {
	if = {
		limit = {
			NOR = {
				has_trait = wounded_1
				has_trait = wounded_2
				has_trait = wounded_3
			}
		}
		add_trait = wounded_3
	}
	else = {
		death = natural
	}
}

clear_dc_mission_flags = {
	if = {
		limit = {
			has_character_flag = special_champion_mission1
		}
		remove_character_flag = special_champion_mission1
	}
	if = {
		limit = {
			has_character_flag = special_champion_mission2
		}
		remove_character_flag = special_champion_mission2
	}
	if = {
		limit = {
			has_character_flag = special_champion_mission3
		}
		remove_character_flag = special_champion_mission3
	}
	if = {
		limit = {
			has_character_flag = special_champion_mission4
		}
		remove_character_flag = special_champion_mission4
	}
	if = {
		limit = {
			has_character_flag = dc_duel_refused_flag
		}
		remove_character_flag = dc_duel_refused_flag
	}
	if = {
		limit = {
			has_character_flag = good_abduct_plan_dco
		}
		remove_character_flag = good_abduct_plan_dco
	}
	if = {
		limit = {
			has_character_flag = asked_for_gold_dco
		}
		remove_character_flag = asked_for_gold_dco
	}
	if = {
		limit = {
			has_variable = night_attack_q
		}
		remove_variable = night_attack_q
	}
}

#dark_champion_training_effect = {
#
#}

ms_load_intents_for_ai_effect = {
	random_list = {
		100 = {
			modifier = {
				add = 100
				OR = {
					has_trait = lifestyle_mystic
					has_trait = scholar
				}
				NOR = {
					has_trait = greedy
					has_trait = paranoid
				}
			}
			modifier = {
				add = 100
				can_unlock_arcane_focus_trigger = no
			}
			add_character_flag = ms_intent_flag1
		}
		100 = {
			modifier = {
				add = 100
				OR = {
					has_trait = diplomat
					#has_trait = ambitious
					has_trait = gregarious
					has_trait = greedy
					has_trait = cynical
				}
			}
			modifier = {
				add = -50
				has_trait = content
			}
			add_character_flag = ms_intent_flag2
		}
		100 = {
			trigger = {
				OR = {
					has_trait = archmage
					has_trait = yaga
					is_a_demon_trigger = yes
				}
			}
			modifier = {
				add = 100
				OR = {
					has_trait = arrogant
					has_trait = ambitious
					has_trait = conqueror
				}
			}
			modifier = {
				add = 50
				is_legendary_mage_trigger = yes
			}
			modifier = {
				add = 50
				OR = {
					any_relation = {
						type = rival
						OR = {
							has_trait = archmage
							has_focus = arcane_focus
						}
					}
					any_relation = {
						type = nemesis
						OR = {
							has_trait = archmage
							has_focus = arcane_focus
						}
					}
				}
			}
			modifier = {
				add = -150
				OR = {
					has_trait = humble
					has_trait = shy
				}
			}
			add_character_flag = ms_intent_flag3
		}
	}
}
ms_clear_flags_effect = {
	if = {
		limit = {
			has_character_flag = ms_intent_flag1
		}
		remove_character_flag = ms_intent_flag1
	}
	if = {
		limit = {
			has_character_flag = ms_intent_flag2
		}
		remove_character_flag = ms_intent_flag2
	}
	if = {
		limit = {
			has_character_flag = ms_intent_flag3
		}
		remove_character_flag = ms_intent_flag3
	}
	if = {
		limit = {
			has_variable = my_arch_votes
		}
		remove_variable = my_arch_votes
	}
	if = {
		limit = {
			has_variable = ms_i_support_someone
		}
		remove_variable = ms_i_support_someone
	}
}

pay_for_demon_head_effect = {
	hidden_effect = {
		send_interface_toast = {
			title = ev7.85.title
			add_gold = 300
		}
	}
}


assign_speaker_var = {
	if = {
		limit = {
			OR = {
				has_trait = archmage
				has_trait = true_witch
			}
		}
		set_variable = {
			name = speaker1
			value = 0
		}
		if = {
			limit = {
				is_legendary_mage_trigger = yes
			}
			change_variable = {
				name = speaker1
				add = 1
			}
		}
		if = {
			limit = {
				OR = {
					has_trait = archmage
					has_trait = yaga
					has_trait = grandmaster_coven
				}
			}
			change_variable = {
				name = speaker1
				add = 1
			}
		}
		if = {
			limit = {
				learning > 19
			}
			change_variable = {
				name = speaker1
				add = 1
			}
		}
		if = {
			limit = {
				prestige_level > 2
			}
			change_variable = {
				name = speaker1
				add = 1
			}
		}
		if = {
			limit = {
				this = scope:host
			}
			change_variable = {
				name = speaker1
				add = 1
			}
		}
		if = {
			limit = {
				has_variable = mc_member_var
			}
			change_variable = {
				name = speaker1
				add = 1
			}
		}
		if = {
			limit = {
				OR = {
					any_character_artifact = {
						has_variable = magic1
					}
					has_trait = source
					#has_trait = source2
					#has_trait = source3
					#has_trait = source4
				}
			}
			change_variable = {
				name = speaker1
				add = 1
			}
		}
	}
}

remove_speaker_var = {
	if = {
		limit = {
			has_variable = speaker1
		}
		remove_variable = speaker1
	}
	if = {
		limit = {
			has_variable = ms_vote_yes
		}
		remove_variable = ms_vote_yes
	}
	if = {
		limit = {
			has_variable = ms_vote_no
		}
		remove_variable = ms_vote_no
	}
	if = {
		limit = {
			has_character_flag = speaker_flag
		}
		remove_character_flag = speaker_flag
	}
	if = {
		limit = {
			has_character_flag = ms_research_cooperation_flag
		}
		remove_character_flag = ms_research_cooperation_flag
	}
	if = {
		limit = {
			has_character_flag = ms_magic_pact_flag
		}
		remove_character_flag = ms_magic_pact_flag
	}
	if = {
		limit = {
			has_character_flag = ms_want_be_archmage_flag
		}
		remove_character_flag = ms_want_be_archmage_flag
	}
	if = {
		limit = {
			has_character_flag = ms_archmage_tax_flag
		}
		remove_character_flag = ms_archmage_tax_flag
	}
	if = {
		limit = {
			has_character_flag = ms_archmage_submision_flag
		}
		remove_character_flag = ms_archmage_submision_flag
	}
	if = {
		limit = {
			has_character_flag = ms_singularity_modifier1_flag
		}
		remove_character_flag = ms_singularity_modifier1_flag
	}
	if = {
		limit = {
			has_character_flag = ms_black_magic_prohibited
		}
		remove_character_flag = ms_black_magic_prohibited
	}
	if = {
		limit = {
			has_character_flag = ms_schemer_flag
		}
		remove_character_flag = ms_schemer_flag
	}
	if = {
		limit = {
			has_character_flag = ms_against_target1_flag
		}
		remove_character_flag = ms_against_target1_flag
	}
	if = {
		limit = {
			has_character_flag = ms_against_target2_flag
		}
		remove_character_flag = ms_against_target2_flag
	}
	#if = {
	#	limit = {
	#		has_character_flag = ms_grand_spell_flag
	#	}
	#	remove_character_flag = ms_grand_spell_flag
	#}
	if = {
		limit = {
			has_character_flag = ms_may_lost_hooks_flag
		}
		remove_character_flag = ms_may_lost_hooks_flag
	}
	if = {
		limit = {
			has_character_flag = ms_additional_support_flag
		}
		remove_character_flag = ms_additional_support_flag
	}
}

select_speaker_effect = {
	hidden_effect = {
		scope:activity = {
			ordered_attending_character = {
				limit = {
					has_variable = speaker1
				}
				order_by = var:speaker1
				check_range_bounds = no
				position = 0
				add_character_flag = speaker_flag
				save_scope_as = speaker0
			}
		}
	}
}
select_archmage_candidates_effect = {
	hidden_effect = {
		scope:activity = {
			ordered_attending_character = {
				limit = {
					is_ai = yes
					scope:activity = {
						NOT = {
							is_target_in_variable_list = {
								name = ms_election_list
								target = PREV
							}
						}
					}
				}
				order_by = archmage_candidates_score_with_personality_value
				check_range_bounds = no
				position = 0
				scope:activity = {
					add_to_variable_list ={
						name = ms_election_list
						target = PREV
					}
				}
			}
			ordered_attending_character = {
				limit = {
					is_ai = yes
					scope:activity = {
						NOT = {
							is_target_in_variable_list = {
								name = ms_election_list
								target = PREV
							}
						}
					}
				}
				order_by = archmage_candidates_score_with_personality_value
				check_range_bounds = no
				position = 1
				scope:activity = {
					add_to_variable_list ={
						name = ms_election_list
						target = PREV
					}
				}
			}
			if = {
				limit = {
					any_in_list = {
						variable = ms_election_list
						count > 3
					}
				}
				ordered_in_list = {
					variable = ms_election_list
					order_by = archmage_candidates_score_with_personality_value
					check_range_bounds = no
					position = 0
					save_scope_as = ms_cand1
					set_variable = {
						name = my_arch_votes
						value = 0
					}
				}
				ordered_in_list = {
					variable = ms_election_list
					order_by = archmage_candidates_score_with_personality_value
					check_range_bounds = no
					position = 1
					save_scope_as = ms_cand2
					set_variable = {
						name = my_arch_votes
						value = 0
					}
				}
				ordered_in_list = {
					variable = ms_election_list
					order_by = archmage_candidates_score_with_personality_value
					check_range_bounds = no
					position = 2
					save_scope_as = ms_cand3
					set_variable = {
						name = my_arch_votes
						value = 0
					}
				}
				ordered_in_list = {
					variable = ms_election_list
					order_by = archmage_candidates_score_with_personality_value
					check_range_bounds = no
					position = 3
					save_scope_as = ms_cand4
					set_variable = {
						name = my_arch_votes
						value = 0
					}
				}
			}
			else_if = {
				limit = {
					any_in_list = {
						variable = ms_election_list
						count = 3
					}
				}
				ordered_in_list = {
					variable = ms_election_list
					order_by = archmage_candidates_score_with_personality_value
					check_range_bounds = no
					position = 0
					save_scope_as = ms_cand1
					set_variable = {
						name = my_arch_votes
						value = 0
					}
				}
				ordered_in_list = {
					variable = ms_election_list
					order_by = archmage_candidates_score_with_personality_value
					check_range_bounds = no
					position = 1
					save_scope_as = ms_cand2
					set_variable = {
						name = my_arch_votes
						value = 0
					}
				}
				ordered_in_list = {
					variable = ms_election_list
					order_by = archmage_candidates_score_with_personality_value
					check_range_bounds = no
					position = 2
					save_scope_as = ms_cand3
					set_variable = {
						name = my_arch_votes
						value = 0
					}
				}
			}
			else_if = {
				limit = {
					any_in_list = {
						variable = ms_election_list
						count = 2
					}
				}
				ordered_in_list = {
					variable = ms_election_list
					order_by = archmage_candidates_score_with_personality_value
					check_range_bounds = no
					position = 0
					save_scope_as = ms_cand1
					set_variable = {
						name = my_arch_votes
						value = 0
					}
				}
				ordered_in_list = {
					variable = ms_election_list
					order_by = archmage_candidates_score_with_personality_value
					check_range_bounds = no
					position = 1
					save_scope_as = ms_cand2
					set_variable = {
						name = my_arch_votes
						value = 0
					}
				}
			}
			else_if = {
				limit = {
					any_in_list = {
						variable = ms_election_list
						count = 1
					}
				}
				ordered_in_list = {
					variable = ms_election_list
					order_by = archmage_candidates_score_with_personality_value
					check_range_bounds = no
					position = 0
					save_scope_as = ms_cand1
					set_variable = {
						name = my_arch_votes
						value = 0
					}
				}
				random_attending_character = {
					limit = {
						is_ai = yes
						NOT = {
							THIS = scope:ms_cand1
						}
					}
					save_scope_as = ms_cand2
					set_variable = {
						name = my_arch_votes
						value = 0
					}
				}
			}
			else = {
				random_attending_character = {
					limit = {
						is_ai = yes
					}
					save_scope_as = ms_cand1
					set_variable = {
						name = my_arch_votes
						value = 0
					}
				}
				random_attending_character = {
					limit = {
						is_ai = yes
						NOT = {
							THIS = scope:ms_cand1
						}
					}
					save_scope_as = ms_cand2
					set_variable = {
						name = my_arch_votes
						value = 0
					}
				}
			}
			if = {
				limit = {
					exists = scope:ms_cand1
				}
				set_variable = {
					name = ms_cand1
					value = scope:ms_cand1
				}
			}
			if = {
				limit = {
					exists = scope:ms_cand2
				}
				set_variable = {
					name = ms_cand2
					value = scope:ms_cand2
				}
			}
			if = {
				limit = {
					exists = scope:ms_cand3
				}
				set_variable = {
					name = ms_cand3
					value = scope:ms_cand3
				}
			}
			if = {
				limit = {
					exists = scope:ms_cand4
				}
				set_variable = {
					name = ms_cand4
					value = scope:ms_cand4
				}
			}
		}
	}
}
recreate_ms_candidates_effect = {
	scope:activity = {
		if = {
			limit = {
				NOT = {
					exists = scope:ms_cand1
				}
				exists = var:ms_cand1
			}
			var:ms_cand1 = {
				save_scope_as = ms_cand1
			}
		}
		if = {
			limit = {
				NOT = {
					exists = scope:ms_cand2
				}
				exists = var:ms_cand2
			}
			var:ms_cand2 = {
				save_scope_as = ms_cand2
			}
		}
		if = {
			limit = {
				NOT = {
					exists = scope:ms_cand3
				}
				exists = var:ms_cand3
			}
			var:ms_cand3 = {
				save_scope_as = ms_cand3
			}
		}
		if = {
			limit = {
				NOT = {
					exists = scope:ms_cand4
				}
				exists = var:ms_cand4
			}
			var:ms_cand4 = {
				save_scope_as = ms_cand4
			}
		}
		if = {
			limit = {
				NOT = {
					exists = scope:new_arch
				}
				exists = var:new_arch
			}
			var:new_arch = {
				save_scope_as = new_arch
			}
		}
	}
}
calculate_ms_archmage_effect = {
	scope:activity = {
		if = {
			limit = {
				exists = scope:ms_cand1
			}
			add_to_variable_list = {
				name = ms_election_list2
				target = scope:ms_cand1
			}
		}
		if = {
			limit = {
				exists = scope:ms_cand2
			}
			add_to_variable_list = {
				name = ms_election_list2
				target = scope:ms_cand2
			}
		}
		if = {
			limit = {
				exists = scope:ms_cand3
			}
			add_to_variable_list = {
				name = ms_election_list2
				target = scope:ms_cand3
			}
		}
		if = {
			limit = {
				exists = scope:ms_cand4
			}
			add_to_variable_list = {
				name = ms_election_list2
				target = scope:ms_cand4
			}
		}
		ordered_in_list = {
			variable = ms_election_list2
			order_by = var:my_arch_votes
			check_range_bounds = no
			position = 0
			save_scope_as = new_arch
		}
		ordered_in_list = {
			variable = ms_election_list2
			limit = {
				NOT = {
					THIS = scope:new_arch
				}
			}
			order_by = var:my_arch_votes
			check_range_bounds = no
			position = 0
			save_scope_as = almost_new_arch
		}
		if = {
			limit = {
				exists = scope:almost_new_arch
				exists = scope:new_arch
			}
			#just to avoid no resolution
			if = {
				limit = {
					scope:almost_new_arch.var:my_arch_votes = scope:new_arch.var:my_arch_votes
				}
				scope:almost_new_arch = {
					change_variable = {
						name = my_arch_votes
						add = -1
					}
				}
			}
		}
		set_variable = {
			name = new_arch
			value = scope:new_arch
		}
	}
}

ms_resolve_voting_effects = {
	if = {
		limit = {
			THIS = scope:host
			new_archmage_must_be_selected_trigger = yes
		}
		hidden_effect = {
			recreate_ms_candidates_effect = yes
		}
		scope:activity = {
			add_activity_log_entry = {
				key = mage_summit_archmage_elected
				show_in_conclusion = yes
				character = scope:new_arch
				if = {
					limit = {
						exists = scope:ms_cand1
					}
					custom_tooltip = ms_cand1_votes_counter
				}
				if = {
					limit = {
						exists = scope:ms_cand2
					}
					custom_tooltip = ms_cand2_votes_counter
				}
				if = {
					limit = {
						exists = scope:ms_cand3
					}
					custom_tooltip = ms_cand3_votes_counter
				}
				if = {
					limit = {
						exists = scope:ms_cand4
					}
					custom_tooltip = ms_cand4_votes_counter
				}
				scope:new_arch = {
					add_prestige = major_prestige_gain
					appoint_as_archmage_effect = yes
				}
			}
		}
		
	}
	if = {
		limit = {
			has_character_flag = speaker_flag
			new_archmage_must_be_selected_trigger = no
		}
		save_scope_as = speaker0
		if = {
			limit = {
				var:ms_vote_yes > var:ms_vote_no
			}
			scope:activity = {
				add_activity_log_entry = {
					key = mage_summit_log_yes
					
					show_in_conclusion = yes
					character = scope:speaker0
					#scope:speaker0 = {
					#	custom_tooltip = mage_summit_log_yes_title
					#}
					#hidden_effect = {
					#	set_variable = {
					#		name = ms_vote_yes
					#		value = scope:speaker0.var:ms_vote_yes
					#	}
					#	set_variable = {
					#		name = ms_vote_no
					#		value = scope:speaker0.var:ms_vote_yes
					#	}
					#}
					custom_tooltip = mage_summit_log_yes_title
					custom_tooltip = mage_summit_log_yes_count
					custom_tooltip = mage_summit_log_no_count
					if = {
						limit = {
							scope:speaker0 = {
								has_character_flag = ms_research_cooperation_flag
							}
						}
						every_attending_character = {
							hidden_effect = {
								if = {
									limit = {
										has_character_modifier = research_cooperation
									}
									remove_character_modifier = research_cooperation
								}
							}
							add_character_modifier = {
								modifier = research_cooperation
								years = 10
							}
							gain_sc_xp2_effect = yes
						}
					}
					else_if = {
						limit = {
							scope:speaker0 = {
								has_character_flag = ms_magic_pact_flag
							}
						}
						custom_tooltip = ev7.105.b_ct2
						custom_tooltip = ev7.105.b_ct3
						every_attending_character = {
							limit = {
								is_landed_or_landless_administrative = yes
								NOT = {
									THIS = ROOT
								}
							}
							custom_tooltip = ev7.105.b_ct
							custom_description_no_bullet = {
								text = empty_description1
							}
							hidden_effect = {
								if = {
									limit = {
										NOT = {
											has_character_flag = ms_defence_pact_flag
										}
									}
									add_character_flag = ms_defence_pact_flag
								}
							}
						}
					}
					else_if = {
						limit = {
							scope:speaker0 = {
								has_character_flag = ms_want_be_archmage_flag
							}
						}
						scope:speaker0 = {
							#give_nickname = archmage_nickname
							#custom_tooltip = ev7.105.c_ct
							#custom_tooltip = ev7.105.c_ct2
							appoint_as_archmage_effect = yes
							custom_tooltip = ms_path_to_mc_ct
							add_prestige = massive_prestige_gain
							stress_impact = {
								ambitious = massive_stress_loss
							}
							if = {
								limit = {
									is_valid_for_legitimacy_change = yes
									culture = {
										has_cultural_tradition = mage_rulership_tradition
									}
								}
								add_legitimacy = major_legitimacy_gain
							}
							hidden_effect = {
								add_character_flag = ms_is_archmage_flag
							}
						}
					}
					else_if = {
						limit = {
							scope:speaker0 = {
								has_character_flag = ms_archmage_tax_flag
							}
						}
						scope:activity = {
							every_attending_character = {
								transfer_to_mc_funds_effect = {
									PAYER = THIS
									VALUE = THIS.my_gold_20p_value
								}
							}
						}
					}
					else_if = {
						limit = {
							scope:speaker0 = {
								has_character_flag = ms_archmage_submision_flag
							}
						}
						custom_tooltip = ev7.105.k_ct
						hidden_effect = {
							set_global_variable = archmage_can_deman_submision
						}
					}
					else_if = {
						limit = {
							scope:speaker0 = {
								has_character_flag = ms_singularity_modifier1_flag
							}
						}
						hidden_effect = {
							random_living_character = {
								limit = {
									any_character_artifact = {
										has_variable = singularity
										OR = {
											has_artifact_modifier = singularity_modifier5
											has_artifact_modifier = singularity_modifierX
										}
									}
								}
								save_scope_as = sing_owner
								random_character_artifact = {
									limit = {
										has_variable = singularity
										OR = {
											has_artifact_modifier = singularity_modifier5
											has_artifact_modifier = singularity_modifierX
										}
									}
									save_scope_as = singularity
								}
							}
						}
						show_as_tooltip = {
							custom_tooltip = ev7.105.l_ct
							scope:singularity = {
								add_artifact_modifier = singularity_modifier1
							}
						}
						hidden_effect = {
							scope:sing_owner = {
								trigger_event = {
									id = magic_ev10.158
									days = 5
								}
							}
						}
					}
					else_if = {
						limit = {
							scope:speaker0 = {
								has_character_flag = ms_black_magic_prohibited
							}
						}
						custom_tooltip = ev7.105.e_ct
						custom_tooltip = ev7.105.e_ct2
						hidden_effect = {
							scope:activity = {
								every_attending_character = {
									limit = {
										NOT = {
											has_character_flag = forbidden_black_magic_flag
										}
									}
									add_character_flag = forbidden_black_magic_flag
								}
							}
						}
					}
					else_if = {
						limit = {
							scope:speaker0 = {
								has_character_flag = ms_schemer_flag
							}
						}
						scope:speaker0 = {
							add_intrigue_skill = 1
						}
						scope:activity = {
							every_attending_character = {
								hidden_effect = {
									if = {
										limit = {
											has_character_modifier = joint_intrigues
										}
										remove_character_modifier = joint_intrigues
									}
								}
								add_character_modifier = {
									modifier = joint_intrigues
									years = 10
								}
							}
						}
					}
					else_if = {
						limit = {
							scope:speaker0 = {
								has_character_flag = ms_against_target1_flag
							}
						}
						random_living_character = {
							limit = {
								has_character_flag = ms_target1_flag
							}
							add_character_modifier = {
								modifier = death_sentence
								years = 10
							}
							save_scope_as = target1
							hidden_effect = {
								remove_character_flag = ms_target1_flag
							}
						}
						custom_tooltip = ev7.105.g_ct
						hidden_effect = {
							every_attending_character = {
								limit = {
									NOT = {
										THIS = scope:speaker0
									}
								}
								if = {
									limit = {
										is_ai = yes
										NOT = {
											THIS = scope:target1
										}
									}
									trigger_event = {
										id = magic_ev7.110
										days = { 7 14 }
									}
								}
								else = {
									trigger_event = {
										id = magic_ev7.110
										days = { 15 21 }
									}
								}
							}
						}
					}
					else_if = {
						limit = {
							scope:speaker0 = {
								has_character_flag = ms_against_target2_flag
							}
						}
						random_living_character = {
							limit = {
								has_character_flag = ms_target2_flag
							}
							add_character_modifier = {
								modifier = excluded_from_magic_community
								years = 50
							}
							add_prestige_level = -1
							add_stress = major_stress_gain
							hidden_effect = {
								remove_character_flag = ms_target2_flag
							}
						}
					}
					#else_if = {
					#	limit = {
					#		scope:speaker0 = {
					#			has_character_flag = ms_grand_spell_flag
					#		}
					#	}
					#	custom_tooltip = ev7.105.i_ct
					#	custom_tooltip = ev7.105.i_ct2
					#	scope:speaker0 = {
					#		add_trait_xp = {
					#			trait = archmage
					#			track = power_saturation
					#			value = 100
					#		}
					#		hidden_effect = {
					#			add_character_flag = ready_for_grand_spell_flag
					#		}
					#	}
					#	hidden_effect = {
					#		scope:activity = {
					#			every_attending_character = {
					#				limit = {
					#					NOT = {
					#						THIS = scope:speaker0
					#					}
					#					OR = {
					#						has_trait = archmage
					#						has_trait = true_witch
					#						has_focus = arcane_focus
					#					}
					#				}
					#				if = {
					#					limit = {
					#						can_spend_standard_ps_trigger = yes
					#					}
					#					send_interface_toast = {
					#						title = ev7.105.i_ct
					#						spend_standard_ps_effect = yes
					#					}
					#				}
					#				else_if = {
					#					limit = {
					#						NOR = {
					#							has_trait = wounded_1
					#							has_trait = wounded_2
					#							has_trait = wounded_3
					#						}
					#					}
					#					add_trait = wounded_1
					#				}
					#			}
					#		}
					#	}
					#}
				}
			}
		}
		else = {
			scope:activity = {
				add_activity_log_entry = {
					key = mage_summit_log_no
					
					show_in_conclusion = yes
					character = scope:speaker0
					#hidden_effect = {
					#	set_variable = {
					#		name = ms_vote_yes
					#		value = scope:speaker0.var:ms_vote_yes
					#	}
					#	set_variable = {
					#		name = ms_vote_no
					#		value = 4
					#	}
					#}
					custom_tooltip = mage_summit_log_no_title
					custom_tooltip = mage_summit_log_yes_count
					custom_tooltip = mage_summit_log_no_count
					scope:speaker0 = {
						add_prestige = minor_prestige_loss
					}
				}
			}
		}
	}
}

mark_as_black_magic_caster_effect = {
	custom_tooltip = use_magic_custom_tooltip
	hidden_effect_new_object = {
		#if = {
		#	limit = {
		#		has_character_flag = black_magic_caster_flag
		#	}
		#	remove_character_flag = black_magic_caster_flag
		#}
		#add_character_flag = {
		#	flag = black_magic_caster_flag
		#	years = 2
		#}
		if = {
			limit = {
				has_variable = black_magic_caster_var
			}
			set_variable = {
				name = black_magic_caster_var_temp
				value = var:black_magic_caster_var
			}
			remove_variable = black_magic_caster_var
			set_variable = {
				name = black_magic_caster_var
				value = var:black_magic_caster_var_temp
				years = 3
			}
			if = {
				limit = {
					OR = {
						var:black_magic_caster_var < 4
						is_ai = no
					}
				}
				change_variable = {
					name = black_magic_caster_var
					add = $L$
				}
			}
			remove_variable = black_magic_caster_var_temp
		}
		else = {
			set_variable = {
				name = black_magic_caster_var
				value = $L$
				years = 3
			}
		}
	}
}

me_unlock_new_special_project_effect = {
	random_list = {
		10 = {
			trigger = {
				NOR = {
					has_character_flag = me_golem_project_done
					has_character_flag = me_golem_project
				}
			}
			add_character_flag = me_golem_project_proposal
		}
		6 = {
			trigger = {
				NOR = {
					has_character_flag = me_immortality_project_done
					has_character_flag = me_immortality_project
					is_legendary_mage_trigger = yes
				}
				learning > 49
			}
			add_character_flag = me_immortality_project_proposal
		}
		10 = {
			trigger = {
				NOR = {
					has_character_flag = me_death_project_done
					has_character_flag = me_death_project
				}
				OR = {
					is_cannibal_trigger = yes
					has_trait = necromancer
				}
				is_or_will_be_a_demon_trigger = no
			}
			add_character_flag = me_death_project_proposal
		}
		10 = {
			trigger = {
				NOR = {
					has_character_flag = me_ascendency_project_done
					has_character_flag = me_ascendency_project
					is_a_demon_trigger = yes
				}
				OR = {
					has_trait = source
					#has_trait = source2
					#has_trait = source3
					#has_trait = source4
					any_character_artifact = {
						has_variable = magic_scepter
					}
				}
			}
			add_character_flag = me_ascendency_project_proposal
		}
		10 = {
			trigger = {
				NOR = {
					has_character_flag = me_castle_project_done
					has_character_flag = me_castle_project
				}
				is_landed = yes
			}
			add_character_flag = me_castle_project_proposal
		}
		10 = {
			trigger = {
				NOR = {
					has_character_flag = me_sing_project_done
					has_character_flag = me_sing_project
				}
				any_character_artifact = {
					has_variable = singularity
					has_artifact_modifier = singularity_modifier5
				}
			}
			add_character_flag = me_sing_project_proposal
		}
		10 = {
			trigger = {
				NOR = {
					has_character_flag = me_soul_project_done
					has_character_flag = me_soul_project
					has_character_flag = no_soul
				}
				#OR = {
				#	has_character_flag = me_sing_project_done
				#	has_character_flag = me_castle_project_done
				#	has_character_flag = me_ascendency_project_done
				#	has_character_flag = me_death_project_done
				#	has_character_flag = me_immortality_project_done
				#	has_character_flag = me_golem_project_done
				#}
				is_legendary_mage_trigger = yes
			}
			add_character_flag = me_soul_project_proposal
		}
		10 = {
			trigger = {
				may_unlock_time_travel_sp_trigger = yes
				is_ai = no
				NOR = {
					has_character_flag = me_time_travel_project_done
					has_character_flag = me_time_travel_project
				}
			}
			add_character_flag = me_time_travel_project_proposal
		}
		10 = {
			trigger = {
				NOR = {
					has_character_flag = me_as_project_done
					has_character_flag = me_as_project
					any_character_artifact = {
						has_variable = msscroll
					}
				}
				OR = {
					has_character_flag = me_as_project_may_be_random_flag
					is_legendary_mage_trigger = yes
				}
				any_character_artifact = {
					has_variable = singularity
					OR = {
						has_artifact_modifier = singularity_modifier2a
						has_artifact_modifier = singularity_modifier1
					}
				}
			}
			add_character_flag = me_as_project_proposal
		}
	}
}

me_unlock_new_special_project_effect2 = {
	random_list = {
		10 = {
			trigger = {
				NOR = {
					has_character_flag = me_golem_project_done
					has_character_flag = me_golem_project
				}
			}
			add_character_flag = me_golem_project
			send_interface_toast = {
				title = game_concept_magic_special_project
				custom_tooltip = me_golem_project_ct
			}
		}
		6 = {
			trigger = {
				NOR = {
					has_character_flag = me_immortality_project_done
					has_character_flag = me_immortality_project
					is_legendary_mage_trigger = yes
				}
				learning > 49
			}
			add_character_flag = me_immortality_project
			send_interface_toast = {
				title = game_concept_magic_special_project
				custom_tooltip = me_immortality_project_ct
			}
		}
		10 = {
			trigger = {
				NOR = {
					has_character_flag = me_death_project_done
					has_character_flag = me_death_project
				}
				OR = {
					is_cannibal_trigger = yes
					has_trait = necromancer
				}
				is_or_will_be_a_demon_trigger = no
			}
			add_character_flag = me_death_project
			send_interface_toast = {
				title = game_concept_magic_special_project
				custom_tooltip = me_death_project_ct
			}
		}
		10 = {
			trigger = {
				NOR = {
					has_character_flag = me_ascendency_project_done
					has_character_flag = me_ascendency_project
					is_a_demon_trigger = yes
				}
				OR = {
					has_trait = source
					any_character_artifact = {
						has_variable = magic_scepter
					}
				}
			}
			add_character_flag = me_ascendency_project
			send_interface_toast = {
				title = game_concept_magic_special_project
				custom_tooltip = me_ascendency_project_ct
			}
		}
		10 = {
			trigger = {
				NOR = {
					has_character_flag = me_castle_project_done
					has_character_flag = me_castle_project
				}
				is_landed = yes
			}
			add_character_flag = me_castle_project
			send_interface_toast = {
				title = game_concept_magic_special_project
				custom_tooltip = me_castle_project_ct
			}
		}
		10 = {
			trigger = {
				NOR = {
					has_character_flag = me_sing_project_done
					has_character_flag = me_sing_project
				}
				any_character_artifact = {
					has_variable = singularity
					has_artifact_modifier = singularity_modifier5
				}
			}
			add_character_flag = me_sing_project
			send_interface_toast = {
				title = game_concept_magic_special_project
				custom_tooltip = me_sing_project_ct
			}
		}
		10 = {
			trigger = {
				NOR = {
					has_character_flag = me_soul_project_done
					has_character_flag = me_soul_project
					has_character_flag = no_soul
				}
				is_legendary_mage_trigger = yes
			}
			add_character_flag = me_soul_project
			send_interface_toast = {
				title = game_concept_magic_special_project
				custom_tooltip = me_soul_project_ct
			}
		}
		10 = {
			trigger = {
				may_unlock_time_travel_sp_trigger = yes
				is_ai = no
				NOR = {
					has_character_flag = me_time_travel_project_done
					has_character_flag = me_time_travel_project
				}
			}
			add_character_flag = me_time_travel_project
			send_interface_toast = {
				title = game_concept_magic_special_project
				custom_tooltip = me_time_travel_project_ct
			}
		}
		10 = {
			trigger = {
				NOR = {
					has_character_flag = me_as_project_done
					has_character_flag = me_as_project
					any_character_artifact = {
						has_variable = msscroll
					}
				}
				OR = {
					has_character_flag = me_as_project_may_be_random_flag
					is_legendary_mage_trigger = yes
				}
				any_character_artifact = {
					has_variable = singularity
					OR = {
						has_artifact_modifier = singularity_modifier2a
						has_artifact_modifier = singularity_modifier1
					}
				}
			}
			add_character_flag = me_as_project
			send_interface_toast = {
				title = game_concept_magic_special_project
				custom_tooltip = me_as_project_ct
			}
		}
	}
}

me_clear_proposal_flags_effect = {
	if = {
		limit = {
			has_character_flag = me_golem_project_proposal
		}
		remove_character_flag = me_golem_project_proposal
	}
	if = {
		limit = {
			has_character_flag = me_immortality_project_proposal
		}
		remove_character_flag = me_immortality_project_proposal
	}
	if = {
		limit = {
			has_character_flag = me_death_project_proposal
		}
		remove_character_flag = me_death_project_proposal
	}
	if = {
		limit = {
			has_character_flag = me_ascendency_project_proposal
		}
		remove_character_flag = me_ascendency_project_proposal
	}
	if = {
		limit = {
			has_character_flag = me_castle_project_proposal
		}
		remove_character_flag = me_castle_project_proposal
	}
	if = {
		limit = {
			has_character_flag = me_sing_project_proposal
		}
		remove_character_flag = me_sing_project_proposal
	}
	if = {
		limit = {
			has_character_flag = me_soul_project_proposal
		}
		remove_character_flag = me_soul_project_proposal
	}
	if = {
		limit = {
			has_character_flag = me_time_travel_project_proposal
		}
		remove_character_flag = me_time_travel_project_proposal
	}
	if = {
		limit = {
			has_character_flag = me_as_project_proposal
		}
		remove_character_flag = me_as_project_proposal
	}
}

me_clear_progress_flags_effect = {
	if = {
		limit = {
			has_character_flag = magic_epic_book
		}
		remove_character_flag = magic_epic_book
	}
	if = {
		limit = {
			has_character_flag = magic_epic_magic
		}
		remove_character_flag = magic_epic_magic
	}
	if = {
		limit = {
			has_character_flag = magic_epic_project
		}
		remove_character_flag = magic_epic_project
	}
	if = {
		limit = {
			has_variable = magic_epic_q
		}
		remove_variable = magic_epic_q
	}
	if = {
		limit = {
			has_character_flag = me_golem_project_progress
		}
		remove_character_flag = me_golem_project_progress
	}
	if = {
		limit = {
			has_character_flag = me_custom_spell_progress
		}
		remove_character_flag = me_custom_spell_progress
	}
	if = {
		limit = {
			has_character_flag = me_golem2_project_progress
		}
		remove_character_flag = me_golem2_project_progress
	}
	if = {
		limit = {
			has_character_flag = me_immortality_project_progress
		}
		remove_character_flag = me_immortality_project_progress
	}
	if = {
		limit = {
			has_character_flag = me_death_project_progress
		}
		remove_character_flag = me_death_project_progress
	}
	if = {
		limit = {
			has_character_flag = me_ascendency_project_progress
		}
		remove_character_flag = me_ascendency_project_progress
	}
	if = {
		limit = {
			has_character_flag = me_castle_project_progress
		}
		remove_character_flag = me_castle_project_progress
	}
	if = {
		limit = {
			has_character_flag = me_sing_project_progress
		}
		remove_character_flag = me_sing_project_progress
	}
	if = {
		limit = {
			has_character_flag = me_golem_male
		}
		remove_character_flag = me_golem_male
	}
	if = {
		limit = {
			has_character_flag = me_golem_female
		}
		remove_character_flag = me_golem_female
	}
	#if = {
	#	limit = {
	#		has_character_flag = me_golem_me
	#	}
	#	remove_character_flag = me_golem_me
	#}
	if = {
		limit = {
			has_character_flag = me_soul_project_progress
		}
		remove_character_flag = me_soul_project_progress
	}
	if = {
		limit = {
			has_character_flag = me_time_travel_project_progress
		}
		remove_character_flag = me_time_travel_project_progress
	}
	if = {
		limit = {
			has_character_flag = me_as_project_progress
		}
		remove_character_flag = me_as_project_progress
	}
}
choose_blackgrimoire_chapter_effect = {
	#if = {
	#	limit = {
	#		NOT = {
	#			has_character_flag = necro_chapter1_flag
	#		}
	#	}
	#	add_character_flag = necro_chapter1_flag
	#}
	#else_
	if = {
		limit = {
			NOT = {
				has_character_flag = necro_chapter2_flag
			}
		}
		add_character_flag = necro_chapter2_flag
	}
	else_if = {
		limit = {
			NOT = {
				has_character_flag = necro_chapter3_flag
			}
		}
		add_character_flag = necro_chapter3_flag
	}
	else_if = {
		limit = {
			NOT = {
				has_character_flag = necro_chapter4_flag
			}
		}
		add_character_flag = necro_chapter4_flag
	}
	else_if = {
		limit = {
			NOT = {
				has_character_flag = necro_chapter5_flag
			}
		}
		add_character_flag = necro_chapter5_flag
	}
	else_if = {
		limit = {
			NOT = {
				has_character_flag = necro_chapter6_flag
			}
		}
		add_character_flag = necro_chapter6_flag
	}
}
choose_blackgrimoire_reward_effect = {
	if = {
		limit = {
			has_trait = witch_hunter
		}
		send_interface_toast = {
			title = study_blackgrimoire_decision
			random_list = {
				1 = {
					add_diplomacy_skill = 1
				}
				1 = {
					add_martial_skill = 1
				}
				1 = {
					add_stewardship_skill = 1
				}
				1 = {
					add_intrigue_skill = 1
				}
				1 = {
					add_learning_skill = 1
				}
			}
		}
	}
	else_if = {
		limit = {
			NOR = {
				has_trait = witch
				any_secret = { secret_type = secret_witch }
			}
		}
		
		send_interface_toast = {
			title = study_blackgrimoire_decision
			give_witch_secret_or_trait_effect2 = yes
		}
	}
	else_if = {
		limit = {
			OR = {
				has_focus = witch_focus
				has_focus = arcane_focus
			}
		}
		send_interface_toast = {
			title = study_blackgrimoire_decision
			custom_tooltip = ev2.47.a_ct
		}
		
		hidden_effect = {
			add_magic_lifestyle_perk_points = 1
		}
	}
	else_if = {
		limit = {
			has_trait = archmage
		}
		choose_blackgrimoire_reward_mages_effect = yes
	}
	else = {
		send_interface_toast = {
			title = study_blackgrimoire_decision
			random_list = {
				1 = {
					add_diplomacy_skill = 1
				}
				1 = {
					add_martial_skill = 1
				}
				1 = {
					add_stewardship_skill = 1
				}
				1 = {
					add_intrigue_skill = 1
				}
				1 = {
					add_learning_skill = 1
				}
				1 = {
					add_character_modifier = {
						modifier = secret_knowledge_modifier
						years = 1
					}
				}
			}
		}
	}
}
choose_blackgrimoire_reward_mages_effect = {
	random_list = {
		10 = {
			trigger = {
				NOT = {
					has_character_flag = bless_land_flag
				}
			}
			send_interface_toast = {
				title = study_blackgrimoire_decision
				custom_tooltip = ev5.1.0.a_ct
				gain_sc_xp1_effect = yes
			}
			add_character_flag = bless_land_flag
		}
		10 = {
			trigger = {
				NOT = {
					has_character_flag = healing_spell_flag
				}
			}
			send_interface_toast = {
				title = study_blackgrimoire_decision
				custom_tooltip = healer_p9_perk_eff
				gain_sc_xp1_effect = yes
			}
			add_character_flag = healing_spell_flag
		}
		10 = {
			trigger = {
				NOT = {
					has_character_flag = shadowstep_flag
				}
			}
			send_interface_toast = {
				title = study_blackgrimoire_decision
				custom_tooltip = ev5.1.0.e_ct
				gain_sc_xp1_effect = yes
			}
			add_character_flag = shadowstep_flag
		}
		10 = {
			trigger = {
				NOT = {
					has_character_flag = plague_spell_flag
				}
			}
			send_interface_toast = {
				title = study_blackgrimoire_decision
				custom_tooltip = ev5.1.0.f_ct
				gain_sc_xp1_effect = yes
			}
			add_character_flag = plague_spell_flag
		}
		10 = {
			trigger = {
				NOT = {
					has_character_flag = hipercognition_flag
				}
			}
			send_interface_toast = {
				title = study_blackgrimoire_decision
				custom_tooltip = ev5.1.0.h_ct
				gain_sc_xp1_effect = yes
			}
			add_character_flag = hipercognition_flag
		}
		5 = {
			trigger = {
				NOR = {
					has_character_flag = firestorm_spell_flag
					is_a_demon_trigger = yes
				}
			}
			send_interface_toast = {
				title = study_blackgrimoire_decision
				custom_tooltip = ev5.1.0.k_ct
				gain_sc_xp1_effect = yes
			}
			add_character_flag = firestorm_spell_flag
		}
		10 = {
			trigger = {
				NOT = {
					has_character_flag = aura_reading_spell
				}
			}
			send_interface_toast = {
				title = study_blackgrimoire_decision
				custom_tooltip = aura_reading_spell_got_it
				gain_sc_xp1_effect = yes
			}
			add_character_flag = aura_reading_spell
		}
		10 = {
			trigger = {
				NOT = {
					has_character_flag = thorn_walls_spell_flag
				}
			}
			send_interface_toast = {
				title = study_blackgrimoire_decision
				custom_tooltip = ev5.1.0.l_ct
				gain_sc_xp1_effect = yes
			}
			add_character_flag = thorn_walls_spell_flag
		}
		10 = {
			trigger = {
				NOR = {
					has_character_flag = banish_spell_flag
					AND = {
						has_trait = archmage
						has_trait_xp = {
							trait = archmage
							track = demonology
							value > 99
						}
					}
				}
			}
			send_interface_toast = {
				title = study_blackgrimoire_decision
				custom_tooltip = summoning_demonology3_terrain_cancel_negative_supply
				gain_sc_xp2_effect = yes
			}
			add_character_flag = banish_spell_flag
		}
		10 = {
			trigger = {
				has_trait = archmage
				has_trait_xp = {
					trait = archmage
					track = secret_knowledge
					value < 100
				}
			}
			send_interface_toast = {
				title = study_blackgrimoire_decision
				gain_sc_xp10_effect = yes
			}
		}
		10 = {
			trigger = {
				has_trait = archmage
				has_trait_xp = {
					trait = archmage
					track = demonology
					value < 100
				}
			}
			send_interface_toast = {
				title = study_blackgrimoire_decision
				gain_sc_xp1_effect = yes
				gain_demonology_standard_effect = yes
			}
		}
		10 = {
			trigger = {
				has_trait = archmage
				has_trait_xp = {
					trait = archmage
					track = combat_magic
					value < 100
				}
			}
			send_interface_toast = {
				title = study_blackgrimoire_decision
				gain_sc_xp1_effect = yes
				gain_cm_xp5_effect = yes
			}
		}
		5 = {
			trigger = {
				has_trait = archmage
				can_be_power_saturated_trigger = yes
			}
			send_interface_toast = {
				title = study_blackgrimoire_decision
				gain_sc_xp2_effect = yes
				gain_standard_ps_effect = yes
			}
		}
		5 = {
			trigger = {
				NOT = {
					has_character_modifier = mind_reader_modifier
				}
			}
			send_interface_toast = {
				title = study_blackgrimoire_decision
				gain_sc_xp1_effect = yes
				add_character_modifier = {
					modifier = mind_reader_modifier
				}
			}
		}
		1 = {
			trigger = {
				NOT = {
					has_character_modifier = secret_knowledge_modifier
				}
			}
			send_interface_toast = {
				title = study_blackgrimoire_decision
				add_character_modifier = {
					modifier = secret_knowledge_modifier
					years = 1
				}
				gain_sc_xp1_effect = yes
			}
		}
		1 = {
			send_interface_toast = {
				title = study_blackgrimoire_decision
				random_list = {
					1 = {
						add_diplomacy_skill = 1
					}
					1 = {
						add_martial_skill = 1
					}
					1 = {
						add_stewardship_skill = 1
					}
					1 = {
						add_intrigue_skill = 1
					}
					1 = {
						add_learning_skill = 1
					}
				}
				gain_sc_xp1_effect = yes
			}
		}
	}
}

samael_available_options_effect = {
	if = {
		limit = {
			has_character_flag = there_is_bael_flag
		}
		remove_character_flag = there_is_bael_flag
	}
	if = {
		limit = {
			has_character_flag = there_is_belial_flag
		}
		remove_character_flag = there_is_belial_flag
	}
	if = {
		limit = {
			has_character_flag = there_is_astaroth_flag
		}
		remove_character_flag = there_is_astaroth_flag
	}
	if = {
		limit = {
			has_character_flag = there_is_lilith_flag
		}
		remove_character_flag = there_is_lilith_flag
	}
	if = {
		limit = {
			has_character_flag = there_is_moloch_flag
		}
		remove_character_flag = there_is_moloch_flag
	}
	if = {
		limit = {
			has_character_flag = there_is_inq_flag
		}
		remove_character_flag = there_is_inq_flag
	}
	if = {
		limit = {
			has_character_flag = there_is_abdul_flag
		}
		remove_character_flag = there_is_abdul_flag
	}
	if = {
		limit = {
			has_character_flag = there_is_mammon_flag
		}
		remove_character_flag = there_is_mammon_flag
	}
	if = {
		limit = {
			has_character_flag = there_is_abraxas_flag
		}
		remove_character_flag = there_is_abraxas_flag
	}
	if = {
		limit = {
			any_living_character = {
				has_character_flag = mammon
			}
		}
		add_character_flag = there_is_mammon_flag
	}
	if = {
		limit = {
			any_living_character = {
				has_character_flag = abraxas
			}
		}
		add_character_flag = there_is_abraxas_flag
	}
	if = {
		limit = {
			any_living_character = {
				has_character_flag = bael_flag
			}
		}
		add_character_flag = there_is_bael_flag
	}
	if = {
		limit = {
			any_living_character = {
				has_character_flag = belial
			}
		}
		add_character_flag = there_is_belial_flag
	}
	if = {
		limit = {
			any_living_character = {
				has_character_flag = astaroth_flag
			}
		}
		add_character_flag = there_is_astaroth_flag
	}
	if = {
		limit = {
			any_living_character = {
				has_character_flag = lilith
			}
		}
		add_character_flag = there_is_lilith_flag
	}
	if = {
		limit = {
			any_living_character = {
				has_character_flag = moloch
			}
		}
		add_character_flag = there_is_moloch_flag
	}
	if = {
		limit = {
			any_living_character = {
				has_character_modifier = inq_modifier
			}
		}
		add_character_flag = there_is_inq_flag
	}
	if = {
		limit = {
			any_living_character = {
				has_character_flag = abdul_dude
			}
		}
		add_character_flag = there_is_abdul_flag
	}
}

add_corrupt_trait = {
	if = {
		limit = {
			NOT = {
				has_trait = corrupted
			}
		}
		#add_trait = corrupted
	}
	hidden_effect = {
		if = {
			limit = {
				has_character_modifier = novice_witch_hunter_modifier
			}
			remove_character_modifier = novice_witch_hunter_modifier
		}
		if = {
			limit = {
				has_character_modifier = inq_modifier
			}
			remove_character_modifier = inq_modifier
		}
	}
	
	if = {
		limit = {
			has_trait = witch_hunter
		}
		hidden_effect = {
			remove_trait = witch_hunter
		}
		#add_trait_force_tooltip = witch_hunter2
	}
	else_if = {
		limit = {
			any_secret = {
				secret_type = secret_witch_hunter
			}
		}
		hidden_effect = {
			random_secret = {
				limit = {
					secret_type = secret_witch_hunter
				}
				remove_secret = yes
			}
		}
		#add_trait_force_tooltip = witch_hunter2
	}
}

add_source4child = {
	if = {
		limit = {
			NOT = {
				has_trait = source
			}
		}
		add_trait = source
	}
	set_source4child = yes
}
set_source4child = {
	hidden_effect = {
		if = {
			limit = {
				has_trait = source
				has_trait_xp = {
					trait = source
					track = magic_potential
					value < 3
				}
			}
			random_list = {
				10 = {
					add_trait_xp = {
						trait = source
						track = magic_potential
						value = init_source_potential1
					}
				}
				10 = {
					add_trait_xp = {
						trait = source
						track = magic_potential
						value = init_source_potential2
					}
				}
				5 = {
					trigger = {
						#exists = this.mother
						#this.mother = {
						#	has_trait = source
						#}
						source_potential_from_mother >= source_potential_from_father
					}
					add_trait_xp = {
						trait = source
						track = magic_potential
						value = init_source_potential3
					}
				}
				5 = {
					trigger = {
						#exists = this.real_father
						#this.real_father = {
						#	has_trait = source
						#}
						source_potential_from_mother <= source_potential_from_father
					}
					add_trait_xp = {
						trait = source
						track = magic_potential
						value = init_source_potential4
					}
				}
			}

			add_trait_xp = {
				trait = source
				track = magic_potential
				value = { -15 15 }
			}
			random = {
				chance = 20
				add_trait_xp = {
					trait = source
					track = magic_potential
					value = { 0 20 }
				}
			}
			if = {
				limit = {
					exists = dynasty
					dynasty = {
						has_dynasty_perk = witchcraft_legacy_5
					}
				}
				add_trait_xp = {
					trait = source
					track = magic_potential
					value = 5
				}
			}
			if = {
				limit = {
					has_trait_xp = {
						trait = source
						track = magic_potential
						value < lower_smp_cap
					}
				}
				add_trait_xp = {
					trait = source
					track = magic_potential
					value = lower_smp_cap
				}
			}
			else_if = {
				limit = {
					has_trait_xp = {
						trait = source
						track = magic_potential
						value > upper_smp_cap
					}
				}
				add_trait_xp = {
					trait = source
					track = magic_potential
					value = { reduce_under_smp_cap_bottom reduce_under_smp_cap_top }
				}
			}
			
			if = {
				limit = {
					exists = this.mother
					this.mother = {
						has_character_flag = pandora_flag
					}
				}
				random = {
					chance = 3
					add_trait_xp = {
						trait = source
						track = magic_potential
						value = 100
					}
				}
			}
		}
	}
}
set_source4child_old = {
	hidden_effect = {
		if = {
			limit = {
				has_trait = source
				has_trait_xp = {
					trait = source
					track = magic_potential
					value < 10
				}
			}
			add_trait_xp = {
				trait = source
				track = magic_potential
				value = { 0 50 }
			}
			if = {
				limit = {
					exists = dynasty
					dynasty = {
						has_dynasty_perk = witchcraft_legacy_5
					}
				}
				add_trait_xp = {
					trait = source
					track = magic_potential
					value = 10
				}
			}
			if = {
				limit = {
					exists = this.mother
					exists = this.real_father
					this.mother = {
						has_trait = source
					}
					this.real_father = {
						has_trait = source
					}
				}
				add_trait_xp = {
					trait = source
					track = magic_potential
					value = { 0 10 }
				}
			}
			if = {
				limit = {
					exists = this.mother
				}
				if = {
					limit = {
						this.mother = {
							has_trait = source
							has_trait_xp = {
								trait = source
								track = magic_potential
								value > 79
							}
						}
					}
					add_trait_xp = {
						trait = source
						track = magic_potential
						value = 5
					}
				}
				if = {
					limit = {
						this.mother = {
							has_trait = yaga
						}
					}
					add_trait_xp = {
						trait = source
						track = magic_potential
						value = 5
					}
				}
				else_if = {
					limit = {
						this.mother = {
							has_trait = source2
						}
					}
					add_trait_xp = {
						trait = source
						track = magic_potential
						value = 5
					}
				}
				if = {
					limit = {
						this.mother = {
							has_character_flag = pandora_flag
						}
					}
					random = {
						chance = 3
						add_trait_xp = {
							trait = source
							track = magic_potential
							value = 50
						}
					}
				}
			}
			if = {
				limit = {
					exists = this.real_father
				}
				if = {
					limit = {
						this.real_father = {
							has_trait = source
							has_trait_xp = {
								trait = source
								track = magic_potential
								value > 79
							}
						}
					}
					add_trait_xp = {
						trait = source
						track = magic_potential
						value = 5
					}
				}
				if = {
					limit = {
						this.real_father = {
							has_trait = yaga
						}
					}
					add_trait_xp = {
						trait = source
						track = magic_potential
						value = 5
					}
				}
				else_if = {
					limit = {
						this.real_father = {
							has_trait = source2
						}
					}
					add_trait_xp = {
						trait = source
						track = magic_potential
						value = 5
					}
				}
			}
			if = {
				limit = {
					has_trait_xp = {
						trait = source
						track = magic_potential
						value < 50
					}
					any_parent = {
						OR = {
							AND = {
								has_trait = demon2
								has_trait_xp = {
									trait = demon2
									value > 50
								}
							}
							is_the_choosen_one_trigger = yes
							has_trait = yaga
						}
					}
				}
				add_trait_xp = {
					trait = source
					track = magic_potential
					value = 10
				}
			}
			if = {
				limit = {
					has_trait_xp = {
						trait = source
						track = magic_potential
						value < 70
					}
				}
				random = {
					chance = 20
					add_trait_xp = {
						trait = source
						track = magic_potential
						value = 20
					}
				}
			}
			random = {
				chance = 5
				add_trait_xp = {
					trait = source
					track = magic_potential
					value = 10
				}
			}
		}
	}
}
set_source4demon = {
	hidden_effect = {
		if = {
			limit = {
				has_trait = source
			}
			add_trait_xp = {
				trait = source
				track = magic_potential
				value = { 20 60 }
			}
			if = {
				limit = {
					exists = dynasty
					dynasty = {
						has_dynasty_perk = witchcraft_legacy_5
					}
				}
				add_trait_xp = {
					trait = source
					track = magic_potential
					value = 5
				}
			}
		}
	}
}

add_min_source_trait = {
	if = {
		limit = {
			NOT = {
				has_trait = source
			}
		}
		add_trait = source
	}
	hidden_effect = {
		add_trait_xp = {
			trait = source
			track = magic_potential
			value = 20
		}
		if = {
			limit = {
				exists = dynasty
				dynasty = {
					has_dynasty_perk = witchcraft_legacy_5
				}
			}
			add_trait_xp = {
				trait = source
				track = magic_potential
				value = 5
			}
		}
	}
}
add_20_magic_potential = {
	if = {
		limit = {
			has_trait = source
		}
		add_trait_xp = {
			trait = source
			track = magic_potential
			value = 20
		}
	}
}
add_10_magic_potential = {
	if = {
		limit = {
			has_trait = source
		}
		add_trait_xp = {
			trait = source
			track = magic_potential
			value = 10
		}
	}
}
add_5_magic_potential = {
	if = {
		limit = {
			has_trait = source
		}
		add_trait_xp = {
			trait = source
			track = magic_potential
			value = 5
		}
	}
}
add_2_magic_potential = {
	if = {
		limit = {
			has_trait = source
		}
		add_trait_xp = {
			trait = source
			track = magic_potential
			value = 2
		}
	}
}
add_1_magic_potential = {
	if = {
		limit = {
			has_trait = source
		}
		add_trait_xp = {
			trait = source
			track = magic_potential
			value = 1
		}
	}
}
make_source_unstable = {
	if = {
		limit = {
			has_trait = source
		}
		add_trait_xp = {
			trait = source
			track = instability
			value = 100
		}
		custom_tooltip = make_source_unstable_ct
	}
}
reduce_100_source_instability = {
	if = {
		limit = {
			has_trait = source
		}
		add_trait_xp = {
			trait = source
			track = instability
			value = -100
		}
		custom_tooltip = make_source_stable_ct
		add_trait_xp = {
			trait = source
			track = magic_potential
			value = 5
		}
	}
}
reduce_40_source_instability = {
	if = {
		limit = {
			has_trait = source
		}
		add_trait_xp = {
			trait = source
			track = instability
			value = -40
		}
		if = {
			limit = {
				has_trait_xp = {
					trait = source
					track = instability
					value < 30
				}
			}
			custom_tooltip = make_source_stable_ct
			add_trait_xp = {
				trait = source
				track = magic_potential
				value = 5
			}
		}
	}
}
reduce_20_source_instability = {
	if = {
		limit = {
			has_trait = source
		}
		add_trait_xp = {
			trait = source
			track = instability
			value = -20
		}
		if = {
			limit = {
				has_trait_xp = {
					trait = source
					track = instability
					value < 30
				}
			}
			custom_tooltip = make_source_stable_ct
			add_trait_xp = {
				trait = source
				track = magic_potential
				value = 5
			}
		}
	}
}
reduce_10_source_instability = {
	if = {
		limit = {
			has_trait = source
		}
		add_trait_xp = {
			trait = source
			track = instability
			value = -10
		}
		if = {
			limit = {
				has_trait_xp = {
					trait = source
					track = instability
					value < 30
				}
			}
			custom_tooltip = make_source_stable_ct
			add_trait_xp = {
				trait = source
				track = magic_potential
				value = 5
			}
		}
	}
}
set_spell_id = {
	hidden_effect = {
		set_variable = {
			name = spell_id
			value = $ID$
		}
	}
}
set_random_spell_id = {
	hidden_effect = {
		random_list = {
			1 = { set_spell_id = { ID = 2} }
			1 = { set_spell_id = { ID = 3} }
			1 = { set_spell_id = { ID = 5} }
			1 = { set_spell_id = { ID = 9} }
			1 = { set_spell_id = { ID = 10} }
		}
	}
}

cyro_common_offer_effect = {
	if = {
		limit = {
			scope:recipient = {
				is_witch_trigger = no
			}
		}
		scope:recipient = {
			give_witch_secret_or_trait_effect2 = yes
		}
	}
	if = {
		limit = {
			scope:actor = {
				NOT = {
					has_trait = demon2
				}
			}
		}
		scope:recipient = {
			if = {
				limit = {
					can_unlock_arcane_focus_trigger = no
				}
				if = {
					limit = {
						is_ai = yes
					}
					custom_tooltip = arcane_focus_unlocked_ct
					add_character_flag = arcane_unlocked_flag
				}
				else = {
					add_perk = magical_experiments_p1_perk
				}
				
			}
			else_if = {
				limit = {
					NOT = {
						has_trait = source
					}
				}
				add_min_source_trait = yes
				gain_sc_xp2_effect = yes
			}
			else = {
				gain_sc_xp5_effect = yes
				add_10_magic_potential = yes
			}
			add_learning_skill = 2
			add_diplomacy_skill = 2
			add_martial_skill = 2
			add_stewardship_skill = 2
			add_intrigue_skill = 2
			if = {
				limit = {
					NOT = {
						has_character_modifier = magic_resonance
					}
				}
				add_character_modifier = {
					modifier = magic_resonance
					years = 10
				}
			}
		}
	}
	else_if = {
		limit = {
			scope:actor = {
				has_trait = demon2
				has_trait_xp = {
					trait = demon2
					track = hell_powers
					value < 100
				}
			}
		}
		scope:recipient = {
			if = {
				limit = {
					can_unlock_arcane_focus_trigger = no
				}
				if = {
					limit = {
						is_ai = yes
					}
					custom_tooltip = arcane_focus_unlocked_ct
					add_character_flag = arcane_unlocked_flag
				}
				else = {
					add_perk = magical_experiments_p1_perk
				}
			}
			else_if = {
				limit = {
					NOT = {
						has_trait = source
					}
				}
				add_trait = source
				hidden_effect = {
					add_trait_xp = {
						trait = source
						track = magic_potential
						value = 40
					}
				}
				gain_sc_xp5_effect = yes
			}
			else = {
				gain_sc_xp5_effect = yes
				add_10_magic_potential = yes
			}
			add_learning_skill = 3
			add_diplomacy_skill = 3
			add_martial_skill = 3
			add_stewardship_skill = 3
			add_intrigue_skill = 3
			if = {
				limit = {
					NOT = {
						has_character_modifier = magic_resonance
					}
				}
				add_character_modifier = {
					modifier = magic_resonance
					years = 10
				}
			}
			if = {
				limit = {
					NOT = {
						has_character_modifier = gift_from_hell_modifier
					}
				}
				add_character_modifier = {
					modifier = gift_from_hell_modifier
				}
			}
		}
	}
	else = {
		scope:recipient = {
			if = {
				limit = {
					NOT = {
						has_trait = source
					}
				}
				add_trait = source
				hidden_effect = {
					add_trait_xp = {
						trait = source
						track = magic_potential
						value = 50
					}
				}
				gain_sc_xp5_effect = yes
			}
			else = {
				gain_sc_xp5_effect = yes
				if = {
					limit = {
						has_trait_xp = {
							trait = source
							track = magic_potential
							value < 70
						}
					}
					add_20_magic_potential = yes
				}
				else = {
					add_10_magic_potential = yes
				}
				
			}
			add_learning_skill = 5
			add_diplomacy_skill = 5
			add_martial_skill = 5
			add_stewardship_skill = 5
			add_intrigue_skill = 5
			if = {
				limit = {
					NOT = {
						has_character_modifier = magic_resonance
					}
				}
				add_character_modifier = {
					modifier = magic_resonance
					years = 10
				}
			}
			if = {
				limit = {
					NOT = {
						has_character_modifier = gift_from_hell_modifier
					}
				}
				add_character_modifier = {
					modifier = gift_from_hell_modifier
				}
			}
			if = {
				limit = {
					has_character_flag = select_better_offer_cyro_flag
					NOT = {
						has_trait = immortal1
					}
				}
				add_trait = immortal1
			}
		}
	}
	
}

cyro_better_offer_effect = {
	cyro_common_offer_effect = yes
	scope:recipient = {
		add_gold = 2000
		gain_cm_xp20_effect = yes
		if = {
			limit = {
				NOT = {
					has_character_modifier = mind_reader_modifier
				}
			}
			add_character_modifier = {
				modifier = mind_reader_modifier
			}
		}
	}
}

start_magic_cyro_effect = {
	hidden_effect = {
		scope:recipient = {
			add_character_flag = no_soul
			set_variable = {
				name = my_soul_owner
				value = scope:actor
			}
		}
		scope:actor = {
			if = {
				limit = {
					has_character_flag = magic_cyroo_o3_flag
				}
				
				scope:recipient = {
					trigger_event = {
						id = magic_ev8.18
						years = 10
					}
					hidden_effect = {
						add_character_flag = {
							flag = cyro_is_still_not_over_flag
							years = 9
						}
					}
				}
				remove_character_flag = magic_cyroo_o3_flag
			}
			else_if = {
				limit = {
					has_character_flag = magic_cyroo_o2_flag
				}
				scope:recipient = {
					trigger_event = {
						id = magic_ev8.18
						years = 20
					}
					hidden_effect = {
						add_character_flag = {
							flag = cyro_is_still_not_over_flag
							years = 19
						}
					}
				}
				remove_character_flag = magic_cyroo_o2_flag
			}
			else = {
				scope:recipient = {
					trigger_event = {
						id = magic_ev8.18
						years = 30
					}
					hidden_effect = {
						add_character_flag = {
							flag = cyro_is_still_not_over_flag
							years = 29
						}
					}
				}
				remove_character_flag = magic_cyroo_o3_flag
			}
			if = {
				limit = {
					has_character_flag = mefisto_devil
					scope:recipient = {
						is_ai = yes
					}
				}
				scope:recipient = {
					trigger_event = {
						id = magic_ev7.130
						years = { 1 2 }
					}
				}
			}
		}
	}
}

auto_cyro_4_mefito_effect = {
	random = {
		chance = 20
		if = {
			limit = {
				any_living_character = {
					has_trait = archmage
					count < 7
				}
				any_living_character = {
					has_character_flag = mefisto_devil
					is_landed_or_landless_administrative = no
					has_perk = deals_with_mortals_perk
					NOR = {
						has_character_flag = sign_cyrograph_recently
					}
				}
			}
			random_living_character = {
				limit = {
					has_character_flag = mefisto_devil
					is_landed_or_landless_administrative = no
					is_ai = yes
				}
				save_scope_as = actor
			}
			random_living_character = {
				limit = {
					is_immortal = no
					is_adult = yes
					is_imprisoned = no
					NOR =  {
						has_character_flag = no_soul
						has_character_flag = special_magic_character
						is_a_demon_trigger = yes
						any_parent = {
							is_ai = no
						}
					}
					OR = {
						has_trait = true_witch
						has_trait = archmage
						#has_focus = witch_focus
						has_focus = arcane_focus
						has_trait = grandmaster_coven
					}
				}
				save_scope_as = recipient
			}
			scope:actor = {
				add_character_flag = {
					flag = sign_cyrograph_recently
					years = 20
				}
				random_list = {
					1 = {
						add_character_flag = {
							flag = magic_cyroo_o1_flag
							years = 1
						}
					}
					1 = {
						add_character_flag = {
							flag = magic_cyroo_o2_flag
							years = 1
						}
					}
				}
			}
			scope:recipient = {
				trigger_event = magic_ev8.15
			}
		}
	}
}

give_magic_artifacts_claims_from_dynasty_perks_effect = {
	hidden_effect = {
		if = {
			limit = {
				exists = dynasty
				dynasty = {
					NOT = {
						any_dynasty_member = {
							OR = {
								is_ai = no
								has_character_flag = abdul_dude
							}
						}
					}
				}
			}
			random_artifact = {
				limit = {
					OR = {
						has_variable = magic1
						has_variable = singularity
					}
					ROOT.house = {
						NOT = {
							has_house_artifact_claim = PREV
						}
					}
				}
				save_scope_as = tmp_art
				ROOT.house = {
					add_house_artifact_claim = scope:tmp_art
				}
			}
		}
	}
}

blob_joins_you_effect = {
	hidden_effect = {
		culture = {
			set_variable = blob_exists
		}
		trigger_event = {
			id = magic_ev8.26
			months = { 1 2 }
		}
	}
}
blob_transformation_effect = {
	scope:blob = {
		change_first_name = blob_name2
		set_age = 60
		remove_trait = dwarf
		remove_trait = loyal
		add_trait = giant
		remove_trait = education_diplomacy_1
		add_trait = education_intrigue_5
		add_trait = cyrographer
		add_intrigue_skill = 20
		add_diplomacy_skill = 20
		add_martial_skill = 10
		add_stewardship_skill = 15
		add_learning_skill = 15
		add_prowess_skill = 20
		add_trait_xp = {
			trait = demon2
			track = hell_powers
			value = 100
		}
		add_trait_xp = {
			trait = demon2
			track = demon_reputation
			value = 60
		}
		add_trait = source
		add_trait_xp = {
			trait = source
			track = magic_potential
			value = 70
		}
		add_character_modifier = {
			modifier = demonic_charm_modifier
		}
		#add_character_modifier = {
		#	modifier = master_magic_modifier
		#}
		add_character_modifier = {
			modifier = master_alteration_modifier
		}
		add_character_modifier = {
			modifier = mind_reader_modifier
		}
		add_character_modifier = {
			modifier = master_metamagic_modifier
		}
		turn_into_mage_effect = yes
		add_trait_xp = {
			trait = archmage
			track = power_saturation
			value = 100
		}
		add_trait_xp = {
			trait = archmage
			track = demonology
			value = 60
		}
		add_trait_xp = {
			trait = archmage
			track = secret_knowledge
			value = 90
		}
		add_trait_xp = {
			trait = archmage
			track = combat_magic
			value = 70
		}
	}
}

give_me_more_wounds_effect = {
	if = {
		limit = {
			NOR = {
				has_trait = wounded_1
				has_trait = wounded_2
				has_trait = wounded_3
			}
		}
		add_trait = wounded_1
	}
	else_if = {
		limit = {
			has_trait = wounded_1
		}
		hidden_effect = {
			remove_trait = wounded_1
		}
		add_trait = wounded_2
	}
	else_if = {
		limit = {
			has_trait = wounded_2
		}
		hidden_effect = {
			remove_trait = wounded_2
		}
		add_trait = wounded_3
	}
}
blob_becomes_ruler_effect = {
	hidden_effect = {
		random_ruler = {
			limit = {
				is_landed_or_landless_administrative = yes
				is_ai = yes
				primary_title = { is_mercenary_company = no }	
				is_witch_trigger = no
				NOT = {
					has_trait = source
				}
				is_clergy = no
			}
			save_scope_as = unlucky_guy
		}
		random_living_character = {
			limit = {
				has_character_flag = blob_flag
			}
			save_scope_as = leviathan_demon
		}
		if = {
			limit = {
				exists = scope:leviathan_demon
				scope:leviathan_demon = {
					is_ruler = no
				}
			}
			scope:unlucky_guy = {
				create_title_and_vassal_change = {
					type = conquest
					save_scope_as = change
					add_claim_on_loss = no
				}
				every_held_title = {
					change_title_holder_include_vassals = {
						holder = scope:leviathan_demon
						change = scope:change
					}
				}
				resolve_title_and_vassal_change = scope:change
			}
			if = {
				limit = {
					exists = scope:demon2
					scope:demon2 = {
						is_alive = yes
					}
				}
				scope:leviathan_demon = {
					add_courtier = scope:demon2
				}
			}
			if = {
				limit = {
					exists = scope:demon3
					scope:demon3 = {
						is_alive = yes
					}
				}
				scope:leviathan_demon = {
					add_courtier = scope:demon3
				}
			}
			scope:leviathan_demon = {
				set_culture_same_as = scope:unlucky_guy
				set_character_faith = scope:unlucky_guy.faith
				if = {
					limit = {
						has_character_flag = special_magic_character
					}
					remove_character_flag = special_magic_character
				}
			}
			scope:unlucky_guy = {
				death = natural
			}
		}
	}
}

create_astaroth_effect = {
	if = {
		limit = {
			exists = scope:tttarget
		}
		random_vassal = {
			save_scope_as = vvasal
		}
	}
	else = {
		random_ruler = {
			save_scope_as = vvasal
		}
	}
	create_character = {
		employer = scope:vvasal
		name = astaroth_name
		template = astaroth_demon_character
		save_scope_as = asta
	}
	scope:asta = {
		#add_secret = {
		#	type = secret_witch
		#	target = scope:demon
		#}
		set_protection_from_harm_events_effect = yes
		give_witch_secret_or_trait_effect2 = yes
		add_character_flag = astaroth_flag
		give_nickname = astaroth_nickname
		#add_perk = protective_runes_perk
		add_perk = magical_senses_perk
		add_perk = combat_spells_p3_perk
		add_perk = truth_is_relative_perk
		add_perk = digging_for_dirt_perk
		add_perk = kidnapper_perk
		add_perk = court_of_shadows_perk
		add_perk = prepared_for_anything_perk
		add_perk = swift_execution_perk
		add_perk = a_job_done_right_perk
		add_perk = twice_schemed_perk
		add_perk = schemer_perk
		add_character_modifier = master_psionic_modifier
		add_character_modifier = mind_reader_modifier
		add_character_modifier = demonic_charm_modifier
		add_character_modifier = strength_ohm_modifier
		gain_standard_ps_effect = yes
		add_character_modifier = looked_to_the_future
		add_character_modifier = preparation_for_strike_modifier
		add_character_modifier = witch_poison_modifier
		add_character_modifier = touched_divinity_modifier
		add_character_modifier = alchemical_enhancement
		add_character_modifier = antimagic_seal_modifier
		add_character_modifier = astaroth_self_modifier
		add_character_flag = special_magic_character
		add_gold = 10000
		create_dead_ring_artifact_effect = {
			OWNER = scope:asta
		}
		add_character_modifier = whisperer_modifier
		turn_into_greater_demon = yes
		add_trait_xp = {
			trait = demon2
			track = hell_powers
			value = 100
		}
		add_trait_xp = {
			trait = demon2
			track = demon_reputation
			value = 100
		}
		add_trait_xp = {
			trait = witch_hunter
			value = 100
		}
		add_trait_xp = {
			trait = source
			track = magic_potential
			value = 84
		}
		random_character_artifact = {
			limit = {
				has_variable = magic_ring
			}
			equip_artifact_to_owner_replace = yes
		}
		
	}
}
di_reveal_astaroth = {
	if = {
		limit = {
			NOT = {
				exists = global_var:astaroth_reveal
			}
			any_living_character = {
				has_character_flag = bael_flag
			}
		}
		if = {
			limit = {
				any_ruler = {
					has_character_flag = bael_target
					is_ai = no
				}
			}
			random_ruler = {
				limit = {
					has_character_flag = bael_target
				}
				trigger_event = {
					id = magic_ev10.134
					days = 30
				}
			}
		}
		else = {
			di_astaroth_setup = yes
			random_ruler = {
				limit = {
					is_true_mage = yes
					is_a_demon_trigger = no
					in_diplomatic_range = scope:asta
				}
				save_scope_as = atar
				scope:asta = {
					start_scheme = {
						type = murder
						target_character = scope:atar
					}
				}
			}
			
		}
	}
}
di_astaroth_setup = {
	hidden_effect_new_object = {
		if = {
			limit = {
				any_living_character = {
					has_character_flag = astaroth_flag
				}
			}
			random_living_character = {
				limit = {
					has_character_flag = astaroth_flag
				}
				if = {
					limit = {
						any_character_artifact = {
							has_artifact_modifier = artifact_ring_of_dead_modifier
						}
					}
					random_character_artifact = {
						limit = {
							has_artifact_modifier = artifact_ring_of_dead_modifier
						}
						destroy_artifact = THIS
					}
				}
				death = {
					death_reason = death_mysterious
					killer = scope:target_ruler
				}
			}
		}
		create_astaroth_effect = yes
		random_ruler = {
			limit = {
				has_character_flag = bael_flag
			}
			add_courtier = scope:asta
			save_scope_as = bael0
			add_hook = {
				type = loyalty_hook
				target = scope:asta
			}
		}
		scope:asta = {
			set_variable = {
				name = di_supports
				value = scope:bael0
			}
		}
		set_global_variable = astaroth_reveal
	}
}

run_bael_effect = {
	random_ruler = {
		limit = {
			is_true_mage = yes
			is_ai = no
			has_trait_xp = {
				trait = archmage
				track = secret_knowledge
				value > 50
			}
			any_character_artifact = { has_variable = magic1 }
		}
		#send_interface_toast = {
		#	title = test
		#	show_as_tooltip = {
		#		add_diplomacy_skill = 1
		#	}
		#}
		trigger_event = {
			id = magic_ev10.120
			days = { 1 360 }
		}
	}
}
create_bael_effect = {
	hidden_effect_new_object = {
		create_character = {
			employer = THIS
			name = legion_name
			template = bael_demon_character
			save_scope_as = bael
			after_creation = {
				set_protection_from_harm_events_effect = yes
				set_sexuality = bisexual
				give_witch_secret_or_trait_effect2 = yes
				add_character_flag = bael_flag
				add_perk = court_of_shadows_perk
				add_perk = prepared_for_anything_perk
				add_character_modifier = master_psionic_modifier
				add_character_modifier = mind_reader_modifier
				#add_character_modifier = financial_knowledge_modifier
				add_character_modifier = more_knights_modifier
				add_character_modifier = demonic_charm_modifier
				add_character_modifier = strength_ohm_modifier
				add_character_modifier = peaceful_dreams_modifier
				#add_character_modifier = looked_to_the_future
				#add_trait = conqueror
				add_character_modifier = {
					modifier = power_saturated1
				}
				add_character_modifier = {
					modifier = hezrou_modifier
				}
				change_target_weight = 99
				add_prestige = massive_prestige_gain
				turn_into_greater_demon = yes
				add_trait_xp = {
					trait = demon2
					track = hell_powers
					value = 100
				}
				add_trait_xp = {
					trait = demon2
					track = demon_reputation
					value = 100
				}
				add_trait_xp = {
					trait = source
					track = magic_potential
					value = 75
				}
				add_prestige = 3000
				set_spell_id = { ID = 25 }
				if = {
					limit = {
						NOT = {
							has_perk = bellum_justum_perk
						}
					}
					add_perk = bellum_justum_perk
				}
				if = {
					limit = {
						NOT = {
							has_perk = parthian_tactics_perk
						}
					}
					add_perk = parthian_tactics_perk
				}
				if = {
					limit = {
						NOT = {
							has_perk = envelopment_perk
						}
					}
					add_perk = envelopment_perk
				}
				if = {
					limit = {
						NOT = {
							has_perk = organized_retreat_perk
						}
					}
					add_perk = organized_retreat_perk
				}
				if = {
					limit = {
						NOT = {
							has_perk = hit_and_run_perk
						}
					}
					add_perk = hit_and_run_perk
				}
				if = {
					limit = {
						NOT = {
							has_perk = engineered_for_destruction_perk
						}
					}
					add_perk = engineered_for_destruction_perk
				}
				if = {
					limit = {
						NOT = {
							has_perk = living_off_the_land_perk
						}
					}
					add_perk = living_off_the_land_perk
				}
				if = {
					limit = {
						NOT = {
							has_perk = sappers_perk
						}
					}
					add_perk = sappers_perk
				}
				if = {
					limit = {
						NOT = {
							has_perk = strategist_perk
						}
					}
					add_perk = strategist_perk
				}
			}
		}
	}
}
create_abraxas_effect = {
	hidden_effect_new_object = {
		create_character = {
			name = abraxas_name
			employer = THIS
			gender = male
			template = abraxas_demon_character
			save_scope_as = abraxas
		}
		scope:abraxas = {
			set_protection_from_harm_events_effect = yes
			set_sexuality = bisexual
			give_witch_secret_or_trait_effect2 = yes
			add_character_modifier = abraxas_self_modifier
			add_character_flag = abraxas
			add_trait_xp = {
				trait = source
				track = magic_potential
				value = 80
			}
			turn_into_greater_demon = yes
			add_trait_xp = {
				trait = demon2
				track = hell_powers
				value = 40
			}
			add_trait_xp = {
				trait = demon2
				track = demon_reputation
				value = 40
			}
			turn_into_mage_effect = yes
			add_trait_xp = {
				trait = archmage
				track = secret_knowledge
				value = 80
			}
			add_trait_xp = {
				trait = archmage
				track = combat_magic
				value = 100
			}
			add_trait_xp = {
				trait = archmage
				track = alchemy
				value = 25
			}
			add_trait_xp = {
				trait = archmage
				track = demonology
				value = 70
			}
			add_trait_xp = {
				trait = archmage
				track = power_saturation
				value = 100
			}
			save_or_load_demon_visual_effect = yes
			assign_special_spell_effect = { NR = 1 S1 = 2 S2 = 3 S3 = 1 }
		}
	}
}
create_mammon_effect = {
	hidden_effect_new_object = {
		create_character = {
			name = mammon_name
			gender = male
			employer = THIS
			template = mammon_demon_character
			save_scope_as = mammon
			after_creation = {
				set_protection_from_harm_events_effect = yes
				add_character_flag = {
					flag = just_summoned_demon_flag
					days = 7
				}
				set_sexuality = bisexual
				add_character_flag = mammon
				give_witch_secret_or_trait_effect2 = yes
				add_character_modifier = incubus_modifier
				add_character_modifier = {
					modifier = master_alteration_modifier
				}
				turn_into_greater_demon = yes
				
				add_trait_xp = {
					trait = demon2
					track = hell_powers
					value = 40
				}
				add_trait_xp = {
					trait = demon2
					track = demon_reputation
					value = 44
				}
				add_trait_xp = {
					trait = source
					track = magic_potential
					value = 42
				}
				turn_into_mage_effect = yes
				add_trait_xp = {
					trait = archmage
					track = secret_knowledge
					value = 20
				}
				add_trait_xp = {
					trait = archmage
					track = combat_magic
					value = 10
				}
				add_trait_xp = {
					trait = archmage
					track = alchemy
					value = 100
				}
				add_trait_xp = {
					trait = archmage
					track = demonology
					value = 40
				}
				add_trait_xp = {
					trait = archmage
					track = power_saturation
					value = 100
				}
				if = {
					limit = {
						NOT = {
							has_perk = golden_obligations_perk
						}
					}
					add_perk = golden_obligations_perk
				}
				if = {
					limit = {
						NOT = {
							has_perk = heregeld_perk
						}
					}
					add_perk = heregeld_perk
				}
				if = {
					limit = {
						NOT = {
							has_perk = detailed_ledgers_perk
						}
					}
					add_perk = detailed_ledgers_perk
				}
				if = {
					limit = {
						NOT = {
							has_perk = war_profiteer_perk
						}
					}
					add_perk = war_profiteer_perk
				}
				if = {
					limit = {
						NOT = {
							has_perk = fearful_troops_perk
						}
					}
					add_perk = fearful_troops_perk
				}
				if = {
					limit = {
						NOT = {
							has_perk = it_is_my_domain_perk
						}
					}
					add_perk = it_is_my_domain_perk
				}
				if = {
					limit = {
						NOT = {
							has_perk = golden_aplomb_perk
						}
					}
					add_perk = golden_aplomb_perk
				}
				if = {
					limit = {
						NOT = {
							has_perk = at_any_cost_perk
						}
					}
					add_perk = at_any_cost_perk
				}
				if = {
					limit = {
						NOT = {
							has_perk = avaricious_perk
						}
					}
					add_perk = avaricious_perk
				}
				save_or_load_demon_visual_effect = yes
			}
		}
	}
}
run_abdul_alhazred_effect = {
	random_ruler = {
		limit = {
			#is_legendary_mage_trigger = yes
			has_character_modifier = mc_archmage_modifier
			is_ai = no
			has_trait_xp = {
				trait = archmage
				track = secret_knowledge
				value >= 70
			}
			any_character_artifact = {
				has_variable = magic1
				count > 1
			}
		}
		if = {
			limit = {
				exists = global_var:us_magic_barrier_var
				any_living_character = {
					has_character_flag = us_magic_barrier_flag
				}
			}
			save_scope_as = abdul_target
			random_living_character = {
				limit = {
					has_character_flag = us_magic_barrier_flag
				}
				trigger_event = {
					id = magic_ev10.154
					days = { 1 300 }
				}
			}
		}
		else = {
			trigger_event = {
				id = magic_ev6.42
				days = { 1 360 }
			}
		}
	}
}

run_grand_coalition_effect = {
	if = {
		limit = {
			any_ruler = {
				has_trait = witch_hunter
				has_character_modifier = inq_modifier
				is_ai = yes
				is_imprisoned = no
			}
		}
		random_ruler = {
			limit = {
				has_trait = witch_hunter
				has_character_modifier = inq_modifier
				is_ai = yes
				is_imprisoned = no
			}
			if = {
				limit = {
					has_trait = incapable
				}
				remove_trait = incapable
			}
			save_scope_as = actor
			set_protection_from_harm_events_effect = yes
		}
		random_ruler = {
			limit = {
				has_trait = archmage
				is_ai = no
				wh_attraction_value > 3
				is_imprisoned = no
				NOR = {
					has_strong_hook = scope:actor
					has_relation_mmaster = scope:actor
					has_relation_mminion = scope:actor
				}
				any_held_title = {
					tier = tier_empire
				}
			}
			save_scope_as = recipient
		}
		if = {
			limit = {
				exists = scope:actor
				exists = scope:recipient
			}
			scope:actor = {
				trigger_event = {
					id = magic_ev8.42
					days = { 1 61 }
				}
			}
		}
		else = {
			#debug_log = test_test_decision_desc
		}
	}
	else = {
		#debug_log = test_test_decision_tooltip
	}
}

display_extended_duration_spell_catalyst = {
	if = {
		limit = {
			scope:actor = {
				any_equipped_character_artifact = {
					has_variable = catalyst
				}
			}
		}
		scope:actor = {
			custom_tooltip = magic_catalyst_spells_duration_ct
		}
	}
}
#normal
show_duel_conclusion_effect = {
	hidden_effect = {
		add_to_list_of_defeated_effect = {
			OWNER = $WINNER$
			TARGET = $LOSER$
		}
		every_living_character = {
			limit = {
				is_ai = no
				NOT = {	has_variable = pclash	}
			}
			send_interface_message = {
				type = event_toast_effect_neutral
				title = mage_duel
				desc = mage_duel
				left_icon = $WINNER$
				right_icon = $LOSER$
				show_as_tooltip = {
					$WINNER$ = {
						add_prestige = massive_prestige_gain
					}
				}
			}
		}
	}
}
#no resolution
show_duel_conclusion_effect2 = {
	hidden_effect = {
		every_living_character = {
			limit = {
				is_ai = no
				NOT = {	has_variable = pclash	}
			}
			send_interface_message = {
				type = event_toast_effect_neutral
				title = mage_duel
				desc = mage_duel
				left_icon = scope:char2
				right_icon = ROOT
				custom_tooltip = ev5.29.title
			}
		}
	}
}
#died durin combat
#normal
#show_duel_conclusion_effect3 = {
#	hidden_effect = {
#		add_to_list_of_defeated_effect = {
#			OWNER = root
#			TARGET = scope:char2
#		}
#		every_living_character = {
#			limit = {
#				is_ai = no
#				NOT = {	has_variable = pclash	}
#			}
#			send_interface_message = {
#				type = event_toast_effect_neutral
#				title = mage_duel
#				desc = mage_duel
#				left_icon = ROOT
#				right_icon = scope:char2
#				show_as_tooltip = {
#					ROOT = {
#						add_prestige = massive_prestige_gain
#					}
#				}
#			}
#		}
#	}
#}
add_to_list_of_defeated_effect = {
	$OWNER$ = { save_temporary_scope_as = own0 }
	$TARGET$ = { save_temporary_scope_as = tar0 }
	scope:own0 = {
		if = {
			limit = {
				NOT = {
					exists = var:mage_defeated_list
				}
			}
			set_variable = mage_defeated_list
		}
		if = {
			limit = {
				NOT = {
					is_target_in_variable_list = {
						name = mage_defeated_list
						target = scope:tar0
					}
				}
			}
			add_to_variable_list = {
				name = mage_defeated_list
				target = scope:tar0
			}
		}
		if = {
			limit = {
				scope:tar0 = {
					has_character_flag = moloch
				}
			}
			scope:own0 = {
				if = {
					limit = {
						NOT = {
							has_character_flag = beaten_moloch_flag
						}
					}
					add_character_flag = beaten_moloch_flag
				}
			}
		}
	}
}

lilith_find_new_owner_effect = {
	if = {
		limit = {
			is_married = no
		}
		if = {
			limit = {
				any_relation = {
					type = lover
					is_landed_or_landless_administrative = yes
					NOT = {
						has_character_flag = failed_lilith_flag
					}
				}
			}
			if = {
				limit = {
					exists = scope:owner
				}
				clear_saved_scope = owner
			}
			random_relation = {
				type = lover
				limit = {
					NOT = {
						has_character_flag = failed_lilith_flag
					}
					is_landed_or_landless_administrative = yes
				}
				save_scope_as = owner
			}
		}
		else_if = {
			limit = {
				any_relation = {
					type = soulmate
					is_landed_or_landless_administrative = yes
					NOT = {
						has_character_flag = failed_lilith_flag
					}
				}
			}
			if = {
				limit = {
					exists = scope:owner
				}
				clear_saved_scope = owner
			}
			random_relation = {
				type = soulmate
				limit = {
					NOT = {
						has_character_flag = failed_lilith_flag
					}
					is_landed_or_landless_administrative = yes
				}
				save_scope_as = owner
			}
		}
		else = {
			random_ruler = {
				limit = {
					is_landed_or_landless_administrative = yes
					is_adult = yes
					is_imprisoned = no
					is_attracted_to_gender_of = ROOT
					in_diplomatic_range = ROOT
				}
				save_scope_as = owner
			}
		}
		if = {
			limit = {
				NOT = {
					is_courtier_of = scope:owner
				}
			}
			scope:owner = {
				add_courtier = ROOT
			}
		}
		
		if = {
			limit = {
				NOR = {
					has_relation_lover = scope:owner
					has_relation_soulmate = scope:owner
				}
			}
			if = {
				limit = {
					scope:owner = {
						is_ai = yes
					}
				}
				random_list = {
					1 = {
						start_scheme = {
							type = seduce
							target_character = scope:owner
						}
					}
					1 = {
						set_relation_lover = scope:owner
					}
				}
			}
			else = {
				start_scheme = {
					type = seduce
					target_character = scope:owner
				}
			}
		}
	}
	else = {
		if = {
			limit = {
				exists = primary_partner
				NOT = {
					any_scheme = {
						scheme_type = murder
					}
				}
			}
			start_scheme = {
				type = murder
				target_character = primary_partner
			}
		}
	}
}
run_lilith_events_effect = {
	scope:owner = {
		if = {
			limit = {
				has_character_modifier = joy_with_lilith_modifier
			}
			random_list = {
				12 = {
					trigger = {
						#is_ai = no
						NOT = { has_character_flag = feast4lilith }
						NOT = { exists = involved_activity }
					}
					#feast please!
					trigger_event = magic_ev.46
				}
				10 = {
					trigger = {
						OR = {
							any_relation ={
								is_ruler = yes
								NOT = { is_a_demon_trigger = yes }
								type = rival
							}
							any_relation ={
								is_ruler = yes
								NOT = { is_a_demon_trigger = yes }
								type = nemesis
							}
						}
					}
					#I will spy 4u
					trigger_event = magic_ev.48
				}
				5 = {
					trigger = {
						is_male = yes
						NOR = {
							is_consort_of = root
							is_spouse_of = root
						}
						any_spouse = {
							count > 0
						}
						root = {
							is_married = no
						}
					}
					#I wanna be your queen
					trigger_event = magic_ev.54
				}
				5 = {
					trigger = {
						is_landed_or_landless_administrative = yes
						location = scope:target.location
					}
					#dresses
					trigger_event = magic_ev10.46
				}
				5 = {
					trigger = {
						is_landed_or_landless_administrative = yes
						location = scope:target.location
						exists = capital_province
						location = capital_province
					}
					#dungeons
					trigger_event = magic_ev10.47
				}
				8 = {
					#I'll kill my husband
					trigger = {
						root = {
							is_married = yes
							exists = primary_partner
							NOR = {
								has_relation_lover = primary_partner
								has_relation_soulmate = primary_partner
							}
						}
					}
					root = {
						start_scheme = {
							type = murder
							target_character = scope:target.primary_partner
						}
					}
				}
				5 = {
					#I'll seduce someone
					trigger = {
						root = {
							any_scheme = {
								scheme_type = seduce
								count = 0
							}
						}
					}
					random_relation = {
						type = rival
						limit = {
							NOR = {
								has_relation_lover = root
								has_relation_soulmate = root
							}
							is_attracted_to_gender_of = root
							in_diplomatic_range = root
							#type = rival
							is_adult = yes
						}
						add_to_list = potential_targs
					}
					random_relation = {
						type = friend
						limit = {
							#type = friend
							NOR = {
								has_relation_lover = root
								has_relation_soulmate = root
							}
							is_attracted_to_gender_of = root
							in_diplomatic_range = root
							is_adult = yes
						}
						add_to_list = potential_targs
					}
					random_neighboring_realm_same_rank_owner = {
						limit = {
							NOR = {
								has_relation_lover = root
								has_relation_soulmate = root
							}
							is_attracted_to_gender_of = root
							in_diplomatic_range = root
							is_adult = yes
						}
						add_to_list = potential_targs
						
					}
					random_courtier_or_guest = {
						limit = {
							NOR = {
								has_relation_lover = root
								has_relation_soulmate = root
							}
							is_attracted_to_gender_of = root
							in_diplomatic_range = root
							is_adult = yes
						}
						add_to_list = potential_targs
						
					}
					random_vassal = {
						limit = {
							NOR = {
								has_relation_lover = root
								has_relation_soulmate = root
							}
							is_powerful_vassal = yes
							is_attracted_to_gender_of = root
							in_diplomatic_range = root
							is_adult = yes
						}
						add_to_list = potential_targs
					}
					liege = {
						if = {
							limit = {
								NOT = { this = scope:owner }
								NOR = {
									has_relation_lover = root
									has_relation_soulmate = root
								}
								is_attracted_to_gender_of = root
								in_diplomatic_range = root
								is_adult = yes
							}
							add_to_list = potential_targs
						}
					}
					random_in_list = {
						list = potential_targs
						save_scope_as = potential_targ
					}
					root = {
						if = {
							limit = {
								exists = scope:potential_targ
							}
							start_scheme = {
								type = seduce
								target_character = scope:potential_targ
							}
						}
					}
				}
				5 = {
					#I kill your councilor...
					trigger = {
						any_councillor = {
							count > 3
						}
					}
					trigger_event = magic_ev.55
				}
				5 = {
					#give me some money
					#trigger = {
					#	gold > 100
					#}
					trigger_event = magic_ev.56
				}
				3 = {
					#I do nothing...
				}
			}
		}
		else = {
			send_interface_toast = {
				title = lilith_name
				left_icon = scope:owner
				right_icon = root
				add_character_modifier = {
					modifier = joy_with_lilith_modifier
				}
			}
		}
	}
}
consider_cult_events_effect = {
	domicile ?= {
		if = {
			limit = {
				exists = var:my_cult_list
				any_in_list = {
					variable = my_cult_list
					count > 0
				}
			}
			#PREV = {
			#	run_cult_events_effect = yes
			#}
			if = {
				limit = {
					any_in_list = {
						variable = my_cult_list
						count > 3
					}
				}
				PREV = {
					random = {
						chance = 75
						run_cult_events_effect = yes
					}
				}
			}
			else_if = {
				limit = {
					any_in_list = {
						variable = my_cult_list
						count > 2
					}
				}
				PREV = {
					random = {
						chance = 60
						run_cult_events_effect = yes
					}
				}
			}
			else_if = {
				limit = {
					any_in_list = {
						variable = my_cult_list
						count > 1
					}
				}
				PREV = {
					random = {
						chance = 45
						run_cult_events_effect = yes
					}
				}
			}
			else_if = {
				limit = {
					any_in_list = {
						variable = my_cult_list
						count > 0
					}
				}
				PREV = {
					random = {
						chance = 30
						run_cult_events_effect = yes
					}
				}
			}
		}
		#else_if = {	#temp
		#	limit = {
		#		exists = var:my_cult_list
		#	}
		#	PREV = {
		#		send_interface_toast = {
		#			title = ev9.27.0.b
		#			add_diplomacy_skill = 1
		#		}
		#	}
		#}
		#else = {
		#	PREV = {
		#		send_interface_toast = {
		#			title = ev9.27.0.b
		#			add_martial_skill = 1
		#		}
		#	}
		#}
	}
}
run_cult_events_effect = {
	#send_interface_toast = {
	#	title = ev9.27.0.b
	#	add_stewardship_skill = 1
	#}
	random_list = {
		1 = {
			trigger_event = {
				id = magic_ev9.5
				days = { 1 360 }
			}
		}
		1 = {
			trigger_event = {
				id = magic_ev9.6
				days = { 1 360 }
			}
		}
		1 = {
			trigger_event = {
				id = magic_ev9.7
				days = { 1 360 }
			}
		}
		1 = {
			trigger_event = {
				id = magic_ev9.8
				days = { 1 360 }
			}
		}
		1 = {
			trigger_event = {
				id = magic_ev9.9
				days = { 1 360 }
			}
		}
		1 = {
			trigger_event = {
				id = magic_ev9.10
				days = { 1 360 }
			}
		}
		1 = {
			trigger_event = {
				id = magic_ev9.11
				days = { 1 360 }
			}
		}
	}
}

give_knowledge_reward_for_wandering_mage_effect = {
	if = {
		limit = {
			has_trait = archmage
			has_trait_xp = {
				trait = archmage
				track = secret_knowledge
				value < 100
			}
		}
		gain_sc_xp2_effect = yes
	}
	else_if = {
		limit = {
			has_trait = archmage
			has_trait_xp = {
				trait = archmage
				track = demonology
				value < 100
			}
		}
		add_trait_xp = {
			trait = archmage
			track = demonology
			value = gain_standard_demonology_value
		}
	}
	else_if = {
		limit = {
			has_trait = archmage
			has_trait_xp = {
				trait = archmage
				track = alchemy
				value < 100
			}
		}
		gain_al_xp_small_effect = yes
	}
	else_if = {
		limit = {
			OR = {
				has_focus = witch_focus
				has_focus = arcane_focus
			}
		}
		custom_tooltip = ev2.47.a_ct
		hidden_effect = {
			add_magic_lifestyle_perk_points = 1
		}
	}
	else_if = {
		limit = {
			has_trait = lifestyle_mystic
			has_trait_xp = {
				trait = lifestyle_mystic
				value < 100
			}
		}
		add_trait_xp = {
			trait = lifestyle_mystic
			value = 50
		}
	}
	else_if = {
		limit = {
			NOT = {
				has_character_modifier = ancient_tomes_modifier
			}
		}
		add_character_modifier = {
			modifier = ancient_tomes_modifier
			years = 1
		}
		add_learning_skill = 1
	}
	else_if = {
		limit = {
			NOT = {
				has_character_modifier = secret_knowledge_modifier
			}
		}
		add_character_modifier = {
			modifier = secret_knowledge_modifier
			years = 1
		}
		add_learning_skill = 1
	}
	else = {
		add_learning_skill = 1
		add_intrigue_skill = 1
	}
}

turn_unlanded_into_landless_adventurer_effect = {
	save_scope_as = new_adv
	create_adventurer_title = {
		name = adventurer_name_001
		holder = scope:new_adv
		article = DEFAULT_TITLE_NAME_ARTICLE
		save_scope_as = new_title
	}
	create_title_and_vassal_change = {
		type = created
		save_scope_as = change
		add_claim_on_loss = no
	}
	scope:new_title ?= {
		create_landless_adventurer_title_history_effect = yes
		change_title_holder = {
			holder = scope:new_adv
			change = scope:change
		}
	}
	resolve_title_and_vassal_change = scope:change
	if = {
		limit = {
			NOT = { has_government = landless_adventurer_government }
		}
		change_government = landless_adventurer_government
	}
	if = {
		limit = {
			NOT = { has_realm_law = landless_adventurer_succession_law }
		}
		add_realm_law = landless_adventurer_succession_law
	}
	if = {
		limit = {
			has_realm_law = crown_authority_0
		}
		remove_realm_law = crown_authority_0
	}
	domicile = { change_provisions = starting_provisions_value }
	add_to_global_variable_list = {
		name = laamps_tally
		target = scope:new_adv.primary_title
	}
	set_variable = flavourise_camp_purpose_wanderers
}
consider_magic_rumors_events_effect = {
	if = {
		limit = {
			is_landless_adventurer = yes
			government_has_flag = government_is_landless_adventurer
			has_realm_law = camp_purpose_seekers
			domicile ?= {
				has_domicile_building_or_higher = camp_fire_juicy_rumors
			}
			NOT = {
				has_character_flag = used_magic_rumors_flag
			}
			has_trait = true_witch
			any_living_character = {
				NOT = { THIS = PREV }
				any_character_artifact = { has_variable = magic1 }
				in_diplomatic_range = PREV
			}
		}
		trigger_event = {
			id = magic_ev9.34
			days = { 1 360 }
		}
	}
}
vistited_place_of_power_effect = {
	send_interface_toast = {
		title = visited_place_of_power
		if = {
			limit = {
				OR = {
					has_focus = witch_focus
					has_focus = arcane_focus
				}
			}
			custom_tooltip = ev2.47.a_ct
			hidden_effect = {
				add_magic_lifestyle_perk_points = 1
			}
		}
		else_if = {
			limit = {
				has_trait = archmage
			}
			gain_sc_xp1_effect = yes
		}
		else = {
			stress_impact = {
				true_witch = medium_stress_loss
				lifestyle_mystic = minor_stress_loss
			}
		}
	}
}
make_demon_effect = {
	if = {
		limit = {
			has_trait = golem
		}
		remove_trait = golem
	}
	if = {
		limit = {
			has_trait = necromancer
		}
		remove_trait = necromancer
	}
	add_trait = demon1
	hidden_effect = {
		if = {
			limit = {
				has_trait = weak
			}
			remove_trait = weak
		}
		if = {
			limit = {
				has_trait = demon0
			}
			remove_trait = demon0
		}
	}
}

send_tornado_notification_effect = {
	army_owner = {
		if = {
			limit = {
				NOT = {
					has_character_flag = tornado_notification_flag
				}
			}
			add_character_flag = {
				flag = tornado_notification_flag
				days = 7
			}
			send_interface_toast = {
				title = tornado_spell
				custom_tooltip = tornado_notification_ct
			}
		}
	}
}

laamp_clear_inappropriate_buildings_effect2 = {
	trigger_event = {
		id = magic_ev9.79
		delayed = yes
	}
}
conclude_ultimate_spell_effect = {
	save_scope_as = scheme
	scheme_owner = {
		trigger_event = magic_ev9.91
	}
}
give_witch_secret_or_trait_effect2 = {
	if = {
		limit = {
			NOR = {
				has_trait = witch
				any_secret = { secret_type = secret_witch }
			}
		}
		save_temporary_scope_as = witch_character
		if = {
			limit = {
				trait_is_shunned_or_criminal_in_my_or_lieges_faith_trigger = { TRAIT = witch GENDER_CHARACTER = scope:witch_character }
			}
			add_secret = {
				type = secret_witch
			}
		}
		else = {
			add_trait = witch
		}
	}
}

turn_into_greater_demon = {
	hidden_effect = {
		if = {
			limit = {
				NOT = {
					has_trait = demon1
				}
			}
			add_trait = demon1
		}
		if = {
			limit = {
				NAND = {
					has_trait = demon2
					has_trait = cyrographer
				}
			}
			if = {
				limit = {
					NOT = {
						has_perk = inhuman_perk
					}
				}
				add_perk = inhuman_perk
			}
			if = {
				limit = {
					NOT = {
						has_perk = aspects_of_hell_perk
					}
				}
				add_perk = aspects_of_hell_perk
			}
			if = {
				limit = {
					NOT = {
						has_perk = sixth_sense_perk
					}
				}
				add_perk = sixth_sense_perk
			}
			if = {
				limit = {
					NOT = {
						has_perk = form_control_perk
					}
				}
				add_perk = form_control_perk
			}
			if = {
				limit = {
					NOT = {
						has_perk = master_of_deception_perk
					}
				}
				add_perk = master_of_deception_perk
			}
			if = {
				limit = {
					NOT = {
						has_perk = magical_creature_perk
					}
				}
				add_perk = magical_creature_perk
			}
			if = {
				limit = {
					NOT = {
						has_perk = deals_with_mortals_perk
					}
				}
				add_perk = deals_with_mortals_perk
			}
			if = {
				limit = {
					NOT = {
						has_perk = depravity_perk
					}
				}
				add_perk = depravity_perk
			}
			if = {
				limit = {
					NOT = {
						has_perk = crossroad_dealer_perk
					}
				}
				add_perk = crossroad_dealer_perk
			}
			if = {
				limit = {
					NOT = {
						has_perk = natural_immunity_perk
					}
				}
				add_perk = natural_immunity_perk
			}
			if = {
				limit = {
					NOT = {
						has_perk = destructive_force_perk
					}
				}
				add_perk = destructive_force_perk
			}
			if = {
				limit = {
					NOT = {
						has_perk = demonic_rage_perk
					}
				}
				add_perk = demonic_rage_perk
			}
			if = {
				limit = {
					NOT = {
						has_perk = master_of_war_perk
					}
				}
				add_perk = master_of_war_perk
			}
			if = {
				limit = {
					NOT = {
						has_perk = tough_as_hell_perk
					}
				}
				add_perk = tough_as_hell_perk
			}
			if = {
				limit = {
					NOT = {
						has_perk = killing_machine_perk
					}
				}
				add_perk = killing_machine_perk
			}
			if = {
				limit = {
					NOT = {
						has_perk = infernal_guardians_perk
					}
				}
				add_perk = infernal_guardians_perk
			}
			if = {
				limit = {
					NOT = {
						has_perk = archdemon_perk
					}
				}
				add_perk = archdemon_perk
			}
		}
	}
}
turn_into_super_demon_effect = {
	turn_into_greater_demon = yes
	add_trait_xp = {
		trait = demon2
		track = hell_powers
		value = 100
	}
	add_trait_xp = {
		trait = demon2
		track = demon_reputation
		value = 100
	}
}
turn_into_super_mage_effect = {
	turn_into_mage_effect = yes
	add_trait_xp = {
		trait = archmage
		track = secret_knowledge
		value = 100
	}
	add_trait_xp = {
		trait = archmage
		track = combat_magic
		value = 100
	}
	add_trait_xp = {
		trait = archmage
		track = alchemy
		value = 100
	}
	add_trait_xp = {
		trait = archmage
		track = demonology
		value = 100
	}
}
turn_into_chosen_one_effect = {
	if = {
		limit = {
			NOT = {
				has_trait = source
			}
		}
		add_trait = source
	}
	add_trait_xp = {
		trait = source
		track = magic_potential
		value = 100
	}
}
become_false_mage_effect = {
	if = {
		limit = {
			NOT = {
				has_perk = magical_experiments_p1_perk
			}
		}
		add_trait = archmage
		add_secret = {
			type = secret_false_mage
			target = THIS
		}
	}
}
proposal_to_become_court_mage = {
	random_living_character = {
		limit = {
			has_trait = archmage
			NOT = {
				has_character_flag = got_court_mage_proposal_flag
			}
			OR = {
				is_landless_adventurer = yes
				is_pool_character = yes
			}
		}
		trigger_event = {
			id = magic_ev10.40
			months = { 1 11 }
		}
	}
}
clear_all_cm_flags_effect = {
	if = {
		limit = {
			has_character_flag = cm_task_1_flag
		}
		remove_character_flag = cm_task_1_flag
	}
	if = {
		limit = {
			has_character_flag = cm_task_2_flag
		}
		remove_character_flag = cm_task_2_flag
	}
	if = {
		limit = {
			has_character_flag = cm_task_3_flag
		}
		remove_character_flag = cm_task_3_flag
	}
	if = {
		limit = {
			has_character_flag = cm_busy_flag
		}
		remove_character_flag = cm_busy_flag
	}
	if = {
		limit = {
			has_character_flag = cm_yellow_card_flag
		}
		remove_character_flag = cm_yellow_card_flag
	}
	if = {
		limit = {
			has_character_flag = cm_poduced_5_gold_flag
		}
		remove_character_flag = cm_poduced_5_gold_flag
	}
	if = {
		limit = {
			has_character_flag = cm_ask_for_gold_flag
		}
		remove_character_flag = cm_ask_for_gold_flag
	}
	if = {
		limit = {
			has_character_flag = cm_get_to_work_flag
		}
		remove_character_flag = cm_get_to_work_flag
	}
}

appoint_as_archmage_effect = {
	hidden_effect = {
		remove_from_mc_effect = yes
		if = {
			limit = {
				has_character_modifier = excluded_from_magic_community
			}
			remove_character_modifier = excluded_from_magic_community
		}
		if = {
			limit = {
				exists = global_var:current_archmage_global
			}
			remove_global_variable = current_archmage_global
		}
		if = {
			limit = {
				NOT = {
					exists = global_var:mc_has_been_formed
				}
			}
			set_global_variable = mc_has_been_formed
		}
		if = {
			limit = {
				NOT = {
					exists = global_var:mc_gold_global
				}
			}
			set_global_variable = {
				name = mc_gold_global
				value = 0
			}
		}
		set_global_variable = {
			name = current_archmage_global
			value = THIS
		}
		every_living_character = {
			limit = {
				has_character_modifier = mc_archmage_modifier
			}
			remove_character_modifier = mc_archmage_modifier
			remove_variable = mc_member_var
			if = {
				limit = {
					has_character_flag = i_am_the_archmage_flag
				}
				remove_character_flag = i_am_the_archmage_flag
			}
		}
		set_variable = mc_member_var
		if = {
			limit = {
				exists = global_var:mc_revealed
				NOT = {
					has_character_flag = i_am_the_archmage_flag
				}
			}
			add_character_flag = i_am_the_archmage_flag
		}
		trigger_event = {
			id = magic_ev10.133
			years = 60
		}
	}
	add_character_modifier = {
		modifier = mc_archmage_modifier
	}
}
appoint_to_mc1_effect = {
	save_temporary_scope_as = appointed_mc
	hidden_effect = {
		if = {
			limit = {
				exists = global_var:current_loremaster_global
			}
			global_var:current_loremaster_global = {
				remove_from_mc_effect = yes
			}
		}
	}
	if = {
		limit = {
			has_character_modifier = excluded_from_magic_community
		}
		remove_character_modifier = excluded_from_magic_community
	}
	add_character_modifier = {
		modifier = mc_loremaster_modifier
	}
	custom_tooltip = appoint_to_mc_effect_ct
	stress_impact = {
		ambitious = major_stress_loss
	}
	hidden_effect = {
		set_variable = mc_member_var
		set_global_variable = {
			name = current_loremaster_global
			value = scope:appointed_mc
		}
		every_ruler = {
			limit = {
				has_trait = archmage
			}
			send_interface_toast = {
				title = mc_toast_info1
				left_icon = scope:appointed_mc
				show_as_tooltip = {
					scope:appointed_mc = {
						add_character_modifier = {
							modifier = mc_loremaster_modifier
						}
					}
				}
			}
		}
		trigger_event = {
			id = magic_ev10.133
			years = 40
		}
	}
}
appoint_to_mc2_effect = {
	save_temporary_scope_as = appointed_mc
	hidden_effect = {
		if = {
			limit = {
				exists = global_var:current_black_mage_global
			}
			global_var:current_black_mage_global = {
				remove_from_mc_effect = yes
			}
		}
	}
	if = {
		limit = {
			has_character_modifier = excluded_from_magic_community
		}
		remove_character_modifier = excluded_from_magic_community
	}
	add_character_modifier = {
		modifier = mc_black_mage_modifier
	}
	custom_tooltip = appoint_to_mc_effect_ct
	stress_impact = {
		ambitious = major_stress_loss
	}
	hidden_effect = {
		set_variable = mc_member_var
		set_global_variable = {
			name = current_black_mage_global
			value = scope:appointed_mc
		}
		every_ruler = {
			limit = {
				has_trait = archmage
			}
			send_interface_toast = {
				title = mc_toast_info2
				left_icon = scope:appointed_mc
				show_as_tooltip = {
					scope:appointed_mc = {
						add_character_modifier = {
							modifier = mc_black_mage_modifier
						}
					}
				}
			}
		}
	}
}
appoint_to_mc3_effect = {
	save_temporary_scope_as = appointed_mc
	hidden_effect = {
		if = {
			limit = {
				exists = global_var:current_admin_global
			}
			global_var:current_admin_global = {
				remove_from_mc_effect = yes
			}
		}
	}
	if = {
		limit = {
			has_character_modifier = excluded_from_magic_community
		}
		remove_character_modifier = excluded_from_magic_community
	}
	add_character_modifier = {
		modifier = mc_admin_modifier
	}
	custom_tooltip = appoint_to_mc_effect_ct
	stress_impact = {
		ambitious = major_stress_loss
	}
	hidden_effect = {
		set_variable = mc_member_var
		set_global_variable = {
			name = current_admin_global
			value = scope:appointed_mc
		}
		every_ruler = {
			limit = {
				has_trait = archmage
			}
			send_interface_toast = {
				title = mc_toast_info3
				left_icon = scope:appointed_mc
				show_as_tooltip = {
					scope:appointed_mc = {
						add_character_modifier = {
							modifier = mc_admin_modifier
						}
					}
				}
			}
		}
	}
}
remove_from_mc_effect = {
	if = {
		limit = {
			exists = global_var:current_archmage_global
			global_var:current_archmage_global = THIS
		}
		remove_global_variable = current_archmage_global
		remove_variable = mc_member_var
		remove_character_modifier = mc_archmage_modifier
		if = {
			limit = {
				has_character_flag = i_am_the_archmage_flag
			}
			remove_character_flag = i_am_the_archmage_flag
		}
	}
	if = {
		limit = {
			exists = global_var:current_loremaster_global
			global_var:current_loremaster_global = THIS
		}
		remove_global_variable = current_loremaster_global
		remove_variable = mc_member_var
		remove_character_modifier = mc_loremaster_modifier
	}
	if = {
		limit = {
			exists = global_var:current_black_mage_global
			global_var:current_black_mage_global = THIS
		}
		remove_global_variable = current_black_mage_global
		remove_variable = mc_member_var
		remove_character_modifier = mc_black_mage_modifier
	}
	if = {
		limit = {
			exists = global_var:current_admin_global
			global_var:current_admin_global = THIS
		}
		remove_global_variable = current_admin_global
		remove_variable = mc_member_var
		remove_character_modifier = mc_admin_modifier
	}
}

transfer_to_mc_funds_effect = {
	custom_description = {
		text = transfer_to_mc_funds_txt
		subject = $PAYER$
		value = $VALUE$
		$PAYER$ = {
			remove_short_term_gold = $VALUE$
		}
		change_global_variable = {
			name = mc_gold_global
			add = $VALUE$
		}
	}
}
take_from_mc_funds_effect = {
	custom_description = {
		text = take_from_mc_funds_txt
		subject = $RECEIVER$
		value = $VALUE$
		$RECEIVER$ = {
			add_gold = $VALUE$
		}
		change_global_variable = {
			name = mc_gold_global
			subtract = $VALUE$
		}
	}
}
increase_mc_funds_effect = {
	custom_description = {
		text = increase_mc_funds_effect_txt
		value = $VALUE$
		change_global_variable = {
			name = mc_gold_global
			add = $VALUE$
		}
	}
}
decrease_mc_funds_effect = {
	custom_description = {
		text = decrease_mc_funds_effect_txt
		value = $VALUE$
		change_global_variable = {
			name = mc_gold_global
			subtract = $VALUE$
		}
	}
}
configure_mc_secret_meeting_effect = {
	custom_tooltip = mc_meeting_decision_ct
	hidden_effect = {
		global_var:current_archmage_global = {
			save_scope_as = amage
			sm_clear_flags_vars_effect = yes
		}
		global_var:current_loremaster_global = {
			save_scope_as = loremaster
			sm_clear_flags_vars_effect = yes
		}
		global_var:current_black_mage_global = {
			save_scope_as = bmage
			sm_clear_flags_vars_effect = yes
		}
		global_var:current_admin_global = {
			save_scope_as = admin
			sm_clear_flags_vars_effect = yes
		}
		scope:amage = {
			#save_scope_as = cspeaker
			trigger_event = magic_ev10.81
		}
	}
}

sm_set_portraits_effect = {
	hidden_effect = {
		sm_clear_portraits_effect = yes
		if = {
			limit = {
				ROOT = scope:amage
			}
			scope:bmage = {
				save_scope_as = p3
			}
			scope:loremaster = {
				save_scope_as = p4
			}
			scope:admin = {
				save_scope_as = p5
			}
		}
		else_if = {
			limit = {
				ROOT = scope:bmage
			}
			scope:amage = {
				save_scope_as = p3
			}
			scope:loremaster = {
				save_scope_as = p4
			}
			scope:admin = {
				save_scope_as = p5
			}
		}
		else_if = {
			limit = {
				ROOT = scope:loremaster
			}
			scope:amage = {
				save_scope_as = p3
			}
			scope:bmage = {
				save_scope_as = p4
			}
			scope:admin = {
				save_scope_as = p5
			}
		}
		else_if = {
			limit = {
				ROOT = scope:admin
			}
			scope:amage = {
				save_scope_as = p3
			}
			scope:bmage = {
				save_scope_as = p4
			}
			scope:loremaster = {
				save_scope_as = p5
			}
		}
	}
}
sm_set_special_portraits_effect = {
	hidden_effect = {
		sm_clear_special_portraits_effect = yes
		if = {
			limit = {
				$SPECIAL$ = 2
			}
			if = {
				limit = {
					ROOT = scope:bmage
				}
				scope:bmage = {
					save_scope_as = s2
				}
				scope:amage = {
					save_scope_as = s1
				}
				scope:loremaster = {
					save_scope_as = s3
				}
				scope:admin = {
					save_scope_as = s4
				}
			}
			else = {
				scope:bmage = {
					save_scope_as = s1
				}
				scope:amage = {
					save_scope_as = s2
				}
				scope:loremaster = {
					save_scope_as = s3
				}
				scope:admin = {
					save_scope_as = s4
				}
			}
		}
		else_if = {
			limit = {
				$SPECIAL$ = 3
			}
			if = {
				limit = {
					ROOT = scope:loremaster
				}
				scope:loremaster = {
					save_scope_as = s2
				}
				scope:amage = {
					save_scope_as = s1
				}
				scope:bmage = {
					save_scope_as = s3
				}
				scope:admin = {
					save_scope_as = s4
				}
			}
			else = {
				scope:loremaster = {
					save_scope_as = s1
				}
				scope:amage = {
					save_scope_as = s2
				}
				scope:bmage = {
					save_scope_as = s3
				}
				scope:admin = {
					save_scope_as = s4
				}
			}
		}
		else_if = {	
			limit = {
				$SPECIAL$ = 4
			}
			if = {
				limit = {
					ROOT = scope:admin
				}
				scope:admin = {
					save_scope_as = s2
				}
				scope:amage = {
					save_scope_as = s1
				}
				scope:bmage = {
					save_scope_as = s3
				}
				scope:loremaster = {
					save_scope_as = s4
				}
			}
			else = {
				scope:admin = {
					save_scope_as = s1
				}
				scope:amage = {
					save_scope_as = s2
				}
				scope:bmage = {
					save_scope_as = s3
				}
			scope:loremaster = {
					save_scope_as = s4
				}
			}
		}
	}
}
sm_clear_special_portraits_effect = {
	if = {
		limit = {
			exists = scope:s1
		}
		clear_saved_scope = s1
	}
	if = {
		limit = {
			exists = scope:s2
		}
		clear_saved_scope = s2
	}
	if = {
		limit = {
			exists = scope:s3
		}
		clear_saved_scope = s3
	}
	if = {
		limit = {
			exists = scope:s4
		}
		clear_saved_scope = s4
	}
}
grants_loremaster_rew_effect = {
	if = {
		limit = {
			scope:loremaster = {
				has_character_flag = lore_rew1_flag
			}
		}
		if = {
			limit = {
				is_true_mage = yes
				has_trait_xp = {
					trait = archmage
					track = secret_knowledge
					value < 100
				}
			}
			add_trait_xp = {
				trait = archmage
				track = secret_knowledge
				value = 1
			}
		}
		else = {
			add_learning_skill = 1
		}
	}
	else_if = {
		limit = {
			scope:loremaster = {
				has_character_flag = lore_rew2_flag
			}
		}
		if = {
			limit = {
				is_true_mage = yes
				has_trait_xp = {
					trait = archmage
					track = demonology
					value < 100
				}
			}
			add_trait_xp = {
				trait = archmage
				track = demonology
				value = 1
			}
		}
		else = {
			add_intrigue_skill = 1
		}
	}
	else_if = {
		limit = {
			scope:loremaster = {
				has_character_flag = lore_rew3_flag
			}
		}
		if = {
			limit = {
				is_true_mage = yes
				has_trait_xp = {
					trait = archmage
					track = alchemy
					value < 100
				}
			}
			add_trait_xp = {
				trait = archmage
				track = alchemy
				value = 1
			}
		}
		else = {
			add_stewardship_skill = 1
		}
	}
	else_if = {
		limit = {
			scope:loremaster = {
				has_character_flag = lore_rew4_flag
			}
		}
		if = {
			limit = {
				is_true_mage = yes
				has_trait_xp = {
					trait = archmage
					track = combat_magic
					value < 100
				}
			}
			add_trait_xp = {
				trait = archmage
				track = combat_magic
				value = 1
			}
		}
		else = {
			add_martial_skill = 1
		}
	}
}
sm_clear_portraits_effect = {
	if = {
		limit = {
			exists = scope:p1
		}
		clear_saved_scope = p1
	}
	if = {
		limit = {
			exists = scope:p2
		}
		clear_saved_scope = p2
	}
	if = {
		limit = {
			exists = scope:p3
		}
		clear_saved_scope = p3
	}
	if = {
		limit = {
			exists = scope:p4
		}
		clear_saved_scope = p4
	}
	if = {
		limit = {
			exists = scope:p5
		}
		clear_saved_scope = p5
	}
}
sm_clear_flags_vars_effect = {
	if = {
		limit = {
			has_character_flag = lore_rew1_flag
		}
		remove_character_flag = lore_rew1_flag
	}
	if = {
		limit = {
			has_character_flag = lore_rew2_flag
		}
		remove_character_flag = lore_rew2_flag
	}
	if = {
		limit = {
			has_character_flag = lore_rew3_flag
		}
		remove_character_flag = lore_rew3_flag
	}
	if = {
		limit = {
			has_character_flag = lore_rew4_flag
		}
		remove_character_flag = lore_rew4_flag
	}
	if = {
		limit = {
			has_character_flag = bmage_rep1_flag
		}
		remove_character_flag = bmage_rep1_flag
	}
	else_if = {
		limit = {
			has_character_flag = bmage_rep2_flag
		}
		remove_character_flag = bmage_rep2_flag
	}
	else_if = {
		limit = {
			has_character_flag = bmage_rep3_flag
		}
		remove_character_flag = bmage_rep3_flag
	}
	else_if = {
		limit = {
			has_character_flag = bmage_rep4_flag
		}
		remove_character_flag = bmage_rep4_flag
	}
	if = {
		limit = {
			has_variable = fixed_gold_value
		}
		remove_variable = fixed_gold_value
	}
	if = {
		limit = {
			has_character_flag = amage_rep1_bmage_rep1_flag
		}
		remove_character_flag = amage_rep1_bmage_rep1_flag
	}
	else_if = {
		limit = {
			has_character_flag = amage_rep2_bmage_rep1_flag
		}
		remove_character_flag = amage_rep2_bmage_rep1_flag
	}
	else_if = {
		limit = {
			has_character_flag = amage_rep3_bmage_rep1_flag
		}
		remove_character_flag = amage_rep3_bmage_rep1_flag
	}
	else_if = {
		limit = {
			has_character_flag = amage_rep4_bmage_rep1_flag
		}
		remove_character_flag = amage_rep4_bmage_rep1_flag
	}
	if = {
		limit = {
			has_character_flag = amage_rep1_bmage_rep2_flag
		}
		remove_character_flag = amage_rep1_bmage_rep2_flag
	}
	if = {
		limit = {
			has_character_flag = lore_rep1_flag
		}
		remove_character_flag = lore_rep1_flag
	}
	else_if = {
		limit = {
			has_character_flag = lore_rep2_flag
		}
		remove_character_flag = lore_rep2_flag
	}
	else_if = {
		limit = {
			has_character_flag = lore_rep3_flag
		}
		remove_character_flag = lore_rep3_flag
	}
	else_if = {
		limit = {
			has_character_flag = lore_rep4_flag
		}
		remove_character_flag = lore_rep4_flag
	}
	else_if = {
		limit = {
			has_character_flag = lore_rep5_flag
		}
		remove_character_flag = lore_rep5_flag
	}
	if = {
		limit = {
			has_character_flag = rector_is_valid_option_flag
		}
		remove_character_flag = rector_is_valid_option_flag
	}
	if = {
		limit = {
			has_character_flag = amage_rep1_lore_rep1_flag
		}
		remove_character_flag = amage_rep1_lore_rep1_flag
	}
	else_if = {
		limit = {
			has_character_flag = amage_rep2_lore_rep1_flag
		}
		remove_character_flag = amage_rep2_lore_rep1_flag
	}
	else_if = {
		limit = {
			has_character_flag = amage_rep3_lore_rep1_flag
		}
		remove_character_flag = amage_rep3_lore_rep1_flag
	}
	else_if = {
		limit = {
			has_character_flag = amage_rep4_lore_rep1_flag
		}
		remove_character_flag = amage_rep4_lore_rep1_flag
	}
	else_if = {
		limit = {
			has_character_flag = amage_rep5_lore_rep1_flag
		}
		remove_character_flag = amage_rep5_lore_rep1_flag
	}
	else_if = {
		limit = {
			has_character_flag = amage_rep1_lore_rep2_flag
		}
		remove_character_flag = amage_rep1_lore_rep2_flag
	}
	else_if = {
		limit = {
			has_character_flag = amage_rep2_lore_rep2_flag
		}
		remove_character_flag = amage_rep2_lore_rep2_flag
	}
	else_if = {
		limit = {
			has_character_flag = amage_rep1_lore_rep3_flag
		}
		remove_character_flag = amage_rep1_lore_rep3_flag
	}
	else_if = {
		limit = {
			has_character_flag = amage_rep2_lore_rep3_flag
		}
		remove_character_flag = amage_rep2_lore_rep3_flag
	}
	else_if = {
		limit = {
			has_character_flag = amage_rep1_lore_rep4_flag
		}
		remove_character_flag = amage_rep1_lore_rep4_flag
	}
	else_if = {
		limit = {
			has_character_flag = amage_rep2_lore_rep4_flag
		}
		remove_character_flag = amage_rep2_lore_rep4_flag
	}
	else_if = {
		limit = {
			has_character_flag = amage_rep1_lore_rep5_flag
		}
		remove_character_flag = amage_rep1_lore_rep5_flag
	}
	else_if = {
		limit = {
			has_character_flag = amage_rep2_lore_rep5_flag
		}
		remove_character_flag = amage_rep2_lore_rep5_flag
	}
	else_if = {
		limit = {
			has_character_flag = amage_rep3_lore_rep5_flag
		}
		remove_character_flag = amage_rep3_lore_rep5_flag
	}
	else_if = {
		limit = {
			has_character_flag = amage_rep4_lore_rep5_flag
		}
		remove_character_flag = amage_rep4_lore_rep5_flag
	}
	if = {
		limit = {
			has_character_flag = bmage_rep5_flag
		}
		remove_character_flag = bmage_rep5_flag
	}
	else_if = {
		limit = {
			has_character_flag = bmage_rep6_flag
		}
		remove_character_flag = bmage_rep6_flag
	}
	else_if = {
		limit = {
			has_character_flag = bmage_rep7_flag
		}
		remove_character_flag = bmage_rep7_flag
	}
	else_if = {
		limit = {
			has_character_flag = bmage_rep8_flag
		}
		remove_character_flag = bmage_rep8_flag
	}
	if = {
		limit = {
			has_character_flag = amage_rep1_bmage_rep5_flag
		}
		remove_character_flag = amage_rep1_bmage_rep5_flag
	}
	else_if = {
		limit = {
			has_character_flag = amage_rep2_bmage_rep5_flag
		}
		remove_character_flag = amage_rep2_bmage_rep5_flag
	}
	if = {
		limit = {
			has_character_flag = amage_rep1_bmage_rep6_flag
		}
		remove_character_flag = amage_rep1_bmage_rep6_flag
	}
	else_if = {
		limit = {
			has_character_flag = amage_rep2_bmage_rep6_flag
		}
		remove_character_flag = amage_rep2_bmage_rep6_flag
	}
	else_if = {
		limit = {
			has_character_flag = amage_rep3_bmage_rep6_flag
		}
		remove_character_flag = amage_rep3_bmage_rep6_flag
	}
	if = {
		limit = {
			has_character_flag = amage_rep1_bmage_rep7_flag
		}
		remove_character_flag = amage_rep1_bmage_rep7_flag
	}
	else_if = {
		limit = {
			has_character_flag = amage_rep2_bmage_rep7_flag
		}
		remove_character_flag = amage_rep2_bmage_rep7_flag
	}
	else_if = {
		limit = {
			has_character_flag = amage_rep3_bmage_rep7_flag
		}
		remove_character_flag = amage_rep3_bmage_rep7_flag
	}
	if = {
		limit = {
			has_character_flag = amage_rep1_bmage_rep8_flag
		}
		remove_character_flag = amage_rep1_bmage_rep8_flag
	}
	else_if = {
		limit = {
			has_character_flag = amage_rep2_bmage_rep8_flag
		}
		remove_character_flag = amage_rep2_bmage_rep8_flag
	}
	if = {
		limit = {
			has_character_flag = admin_rep1_flag
		}
		remove_character_flag = admin_rep1_flag
	}
	else_if = {
		limit = {
			has_character_flag = admin_rep2_flag
		}
		remove_character_flag = admin_rep2_flag
	}
	else_if = {
		limit = {
			has_character_flag = admin_rep3_flag
		}
		remove_character_flag = admin_rep3_flag
	}
	else_if = {
		limit = {
			has_character_flag = admin_rep4_flag
		}
		remove_character_flag = admin_rep4_flag
	}
	else_if = {
		limit = {
			has_character_flag = admin_rep5_flag
		}
		remove_character_flag = admin_rep5_flag
	}
	else_if = {
		limit = {
			has_character_flag = admin_rep6_flag
		}
		remove_character_flag = admin_rep6_flag
	}
	if = {
		limit = {
			has_character_flag = amage_rep1_admin_rep1_flag
		}
		remove_character_flag = amage_rep1_admin_rep1_flag
	}
	else_if = {
		limit = {
			has_character_flag = amage_rep2_admin_rep1_flag
		}
		remove_character_flag = amage_rep2_admin_rep1_flag
	}
	else_if = {
		limit = {
			has_character_flag = amage_rep1_admin_rep2_flag
		}
		remove_character_flag = amage_rep1_admin_rep2_flag
	}
	else_if = {
		limit = {
			has_character_flag = amage_rep2_admin_rep2_flag
		}
		remove_character_flag = amage_rep2_admin_rep2_flag
	}
	else_if = {
		limit = {
			has_character_flag = amage_rep1_admin_rep3_flag
		}
		remove_character_flag = amage_rep1_admin_rep3_flag
	}
	else_if = {
		limit = {
			has_character_flag = amage_rep2_admin_rep3_flag
		}
		remove_character_flag = amage_rep2_admin_rep3_flag
	}
	else_if = {
		limit = {
			has_character_flag = amage_rep1_admin_rep4_flag
		}
		remove_character_flag = amage_rep1_admin_rep4_flag
	}
	else_if = {
		limit = {
			has_character_flag = amage_rep2_admin_rep4_flag
		}
		remove_character_flag = amage_rep2_admin_rep4_flag
	}
	else_if = {
		limit = {
			has_character_flag = amage_rep1_admin_rep5_flag
		}
		remove_character_flag = amage_rep1_admin_rep5_flag
	}
	else_if = {
		limit = {
			has_character_flag = amage_rep2_admin_rep5_flag
		}
		remove_character_flag = amage_rep2_admin_rep5_flag
	}
	else_if = {
		limit = {
			has_character_flag = amage_rep1_admin_rep6_flag
		}
		remove_character_flag = amage_rep1_admin_rep6_flag
	}
	else_if = {
		limit = {
			has_character_flag = amage_rep2_admin_rep6_flag
		}
		remove_character_flag = amage_rep2_admin_rep6_flag
	}
	if = {
		limit = {
			has_character_flag = amage_rep1_bmage_rep3_flag
		}
		remove_character_flag = amage_rep1_bmage_rep3_flag
	}
	if = {
		limit = {
			has_character_flag = amage_rep1_bmage_rep4_flag
		}
		remove_character_flag = amage_rep1_bmage_rep4_flag
	}
	if = {
		limit = {
			has_character_flag = mc_crisises_flag
		}
		remove_character_flag = mc_crisises_flag
	}
	if = {
		limit = {
			has_character_flag = arch_crisis_o1_flag
		}
		remove_character_flag = arch_crisis_o1_flag
	}
	else_if = {
		limit = {
			has_character_flag = arch_crisis_o2_flag
		}
		remove_character_flag = arch_crisis_o2_flag
	}
	if = {
		limit = {
			has_variable = tbmaker
		}
		if = {
			limit = {
				exists = scope:actor
			}
			clear_saved_scope = actor
		}
		if = {
			limit = {
				exists = scope:recipient
			}
			clear_saved_scope = recipient
		}
		global_var:current_archmage_global = {
			save_scope_as = actor
		}
		var:tbmaker = {
			save_scope_as = recipient
		}
		trigger_event = {
			id = magic_ev10.79
			days = 3
		}
		remove_variable = tbmaker
	}
}
seek_and_destroy_hunters_effect = {
	witch_hunter_vacations_effect = { Y = 3 }
	if = {
		limit = {
			is_ai = yes
		}
		save_scope_as = hunter_hunter
		random_living_character = {
			limit = {
				has_trait = witch_hunter
				any_secret = {
					secret_type = secret_witch_hunter
					is_known_by = scope:hunter_hunter
				}
			}
			save_scope_as = wh1
		}
		random_living_character = {
			limit = {
				has_trait = witch_hunter
				any_secret = {
					secret_type = secret_witch_hunter
					is_known_by = scope:hunter_hunter
				}
				NOT = { THIS = scope:wh1 }
			}
			save_scope_as = wh2
		}
		if = {
			limit = {
				exists = scope:wh1
				is_character_interaction_shown = {
					recipient = scope:wh1
					interaction = cast_powerfull_curse
				}
				is_character_interaction_valid = {
					recipient = scope:wh1
					interaction = cast_powerfull_curse
				}
			}
			run_interaction = {
				interaction = cast_powerfull_curse
				actor = this
				recipient = scope:wh1
				execute_threshold = accept
			}
		}
		else_if = {
			limit = {
				exists = scope:wh1
				NOT = {
					any_scheme = {
						scheme_type = murder
					}
				}
			}
			start_scheme = {
				type = murder
				target_character = scope:wh1
			}
		}
		if = {
			limit = {
				exists = scope:wh2
				is_character_interaction_shown = {
					recipient = scope:wh2
					interaction = cast_powerfull_curse
				}
				is_character_interaction_valid = {
					recipient = scope:wh2
					interaction = cast_powerfull_curse
				}
			}
			run_interaction = {
				interaction = cast_powerfull_curse
				actor = this
				recipient = scope:wh2
				execute_threshold = accept
			}
		}
		else_if = {
			limit = {
				exists = scope:wh2
				NOT = {
					any_scheme = {
						scheme_type = murder
					}
				}
			}
			start_scheme = {
				type = murder
				target_character = scope:wh2
			}
		}
	}
}
mc_revealing_effect = {
	hidden_effect = {
		set_global_variable = mc_revealed
		global_var:current_archmage_global = {
			if = {
				limit = {
					NOT = {
						has_character_flag = i_am_the_archmage_flag
					}
				}
				add_character_flag = i_am_the_archmage_flag
			}
		}
		every_ruler = {
			limit = {
				OR = {
					is_ai = no
					THIS = scope:amage
				}
			}
			trigger_event = {
				id = magic_ev10.93
				days = 14
			}
		}
	}
}
activate_whunter_effect = {
	random_living_character = {
		limit = {
			is_ai = yes
			is_imprisoned = no
			is_witch_huter = yes
			NOR = {
				has_trait = incapable
				has_character_modifier = inq_modifier
				has_character_flag = special_magic_character
				any_scheme = {
					is_hostile = yes
				}
			}
		}
		save_scope_as = witch_hunter
	}
	if = {
		limit = {
			exists = scope:witch_hunter
		}
		if = {
			limit = {
				exists = scope:inq_perspective
			}
			clear_saved_scope = inq_perspective
		}
		save_scope_as = inq_perspective
		ordered_living_character = {
			limit = {
				in_diplomatic_range = scope:witch_hunter
				NOR = {
					has_character_flag = special_magic_character
					has_strong_hook = scope:witch_hunter
					has_character_flag = clean4charges
					has_character_flag = hunted4magic
				}
				is_imprisoned = no
			}
			order_by = wh_attraction_value
			check_range_bounds = no
			position = 0
			save_scope_as = my_vic
		}
		scope:witch_hunter = {
			#start_scheme = {
			#	type = murder
			#	target_character = scope:my_vic
			#}
			begin_scheme_with_agents_effect = {
				SCHEME_TYPE = murder
				TARGET_TYPE = target_character
				TARGET_SCOPE = scope:my_vic
				# Success.
				AGENT_1 = agent_assassin
				AGENT_2 = agent_assassin
				AGENT_3 = agent_thug
				# Speed.
				AGENT_4 = agent_infiltrator
				# Secrecy.
				AGENT_5 = agent_alibi
			}
		}
		scope:my_vic = {
			random = {
				chance = 10
				if = {
					limit = {
						any_courtier_or_guest = {
							is_witch_huter = no
							is_witch_trigger = no
							is_lowborn = yes
						}
					}
					random_courtier_or_guest = {
						limit = {
							is_witch_huter = no
							is_witch_trigger = no
							is_lowborn = yes
						}
						add_secret = {
							type = secret_witch_hunter
						}
						scope:witch_hunter = {
							if = {
								limit = {
									NOT = {
										has_hook = PREV
									}
								}
								add_hook = {
									type = loyalty_hook
									target = PREV
								}
							}
						}
					}
				}
			}
		}
	}
	else = {
		random_ruler = {
			spawn_witch_hunter_full_chance_effect = { EMPL = THIS }
		}
	}
}
intercept_magic_item_4_mages = {
	random_ruler = {
		limit = {
			is_ai = yes
			NOR = {
				has_character_flag = special_magic_character
				has_trait = just
				has_trait = content
			}
			OR = {
				is_true_mage = yes
				has_trait = true_witch
			}
			exists = dynasty
			dynasty = {
				has_dynasty_perk = witchcraft_legacy_1
				NOT = {
					any_dynasty_member = {
						is_ai = yes
					}
				}
			}
			NOT = {
				any_scheme = {
					is_hostile = yes
				}
			}
		}
		save_scope_as = mmmage
	}
	if = {
		limit = {
			exists = scope:mmmage
		}
		random_living_character = {
			limit = {
				any_character_artifact = { has_variable = magic1 }
				NOT = { THIS = scope:mmmage }
				NOT = { has_hook = scope:mmmage }
				NOR = {
					has_relation_soulmate = scope:mmmage
					has_relation_best_friend = scope:mmmage
				}
				in_diplomatic_range = scope:mmmage
			}
			save_scope_as = tttarget
		}
		if = {
			limit = {
				exists = scope:tttarget
			}
			scope:mmmage = {
				start_scheme = {
					type = abduct
					target_character = scope:tttarget
				}
			}
		}
	}
}
turn_place_of_power_owner_into_witch_effect = {
	if = {
		limit = {
			NOT = {
				has_game_rule = min_num_of_mages
			}
			any_ruler = {
				is_ai = yes
				has_power_place_trigger = yes
				is_witch_trigger = no
			}
		}
		random_ruler = {
			limit = {
				is_ai = yes
				has_power_place_trigger = yes
				is_witch_trigger = no
			}
			give_witch_secret_or_trait_effect2 = yes
		}
	}
}
activate_stressed_demon_effect = {
	if = {
		limit = {
			any_living_character = {
				is_a_demon_trigger = yes
				is_ai = yes
				NOT = {
					has_character_flag = special_magic_character
				}
			}
		}
		random_living_character = {
			limit = {
				is_a_demon_trigger = yes
				is_ai = yes
				NOT = {
					has_character_flag = special_magic_character
				}
				OR = {
					stress_level > 2
					is_imprisoned = yes
				}
			}
			save_scope_as = demon1
		}
		if = {
			limit = {
				NOT = {
					exists = scope:demon1
				}
			}
			random_living_character = {
				limit = {
					is_a_demon_trigger = yes
					is_ai = yes
					NOT = {
						has_character_flag = special_magic_character
					}
				}
				save_scope_as = demon1
			}
		}
		scope:demon1 = {
			trigger_event = {
				id = magic_ev10.115
				days = { 1 360 }
			}
		}
		
	}
}
save_or_load_demon_visual_effect = {
	if = {
		limit = {
			has_character_flag = asmodeus
		}
		if = {
			limit = {
				exists = global_var:asmodeus_visual
			}
			copy_inheritable_appearance_from = global_var:asmodeus_visual
		}
		else = {
			set_global_variable = {
				name = asmodeus_visual
				value = THIS
			}
		}
	}
	else_if = {
		limit = {
			has_character_flag = belial
		}
		if = {
			limit = {
				exists = global_var:belial_visual
			}
			copy_inheritable_appearance_from = global_var:belial_visual
		}
		else = {
			set_global_variable = {
				name = belial_visual
				value = THIS
			}
		}
	}
	else_if = {
		limit = {
			has_character_flag = lilith
		}
		if = {
			limit = {
				exists = global_var:lilith_visual
			}
			copy_inheritable_appearance_from = global_var:lilith_visual
		}
		else = {
			set_global_variable = {
				name = lilith_visual
				value = THIS
			}
		}
	}
	else_if = {
		limit = {
			has_character_flag = mammon
		}
		if = {
			limit = {
				exists = global_var:mammon_visual
			}
			copy_inheritable_appearance_from = global_var:mammon_visual
		}
		else = {
			set_global_variable = {
				name = mammon_visual
				value = THIS
			}
		}
	}
	else_if = {
		limit = {
			has_character_flag = abraxas
		}
		if = {
			limit = {
				exists = global_var:abraxas_visual
			}
			copy_inheritable_appearance_from = global_var:abraxas_visual
		}
		else = {
			set_global_variable = {
				name = abraxas_visual
				value = THIS
			}
		}
	}
	else_if = {
		limit = {
			has_character_flag = harmonius_flag
		}
		if = {
			limit = {
				exists = global_var:harmonius_visual
			}
			copy_inheritable_appearance_from = global_var:harmonius_visual
		}
		else = {
			set_global_variable = {
				name = harmonius_visual
				value = THIS
			}
		}
	}
	else_if = {
		limit = {
			has_character_flag = samael
		}
		if = {
			limit = {
				exists = global_var:samael_visual
			}
			copy_inheritable_appearance_from = global_var:samael_visual
		}
		else = {
			set_global_variable = {
				name = samael_visual
				value = THIS
			}
		}
	}
	else_if = {
		limit = {
			has_character_flag = moloch
		}
		if = {
			limit = {
				exists = global_var:moloch_visual
			}
			copy_inheritable_appearance_from = global_var:moloch_visual
		}
		else = {
			set_global_variable = {
				name = moloch_visual
				value = THIS
			}
		}
	}
	else_if = {
		limit = {
			has_character_flag = hecate
		}
		if = {
			limit = {
				exists = global_var:hecate_visual
			}
			copy_inheritable_appearance_from = global_var:hecate_visual
		}
		else = {
			set_global_variable = {
				name = hecate_visual
				value = THIS
			}
		}
	}
	else_if = {
		limit = {
			has_character_flag = nyx
		}
		if = {
			limit = {
				exists = global_var:nyx_visual
			}
			copy_inheritable_appearance_from = global_var:nyx_visual
		}
		else = {
			set_global_variable = {
				name = nyx_visual
				value = THIS
			}
		}
	}
	else_if = {
		limit = {
			has_character_flag = blob_flag
		}
		if = {
			limit = {
				exists = global_var:blob_visual
			}
			copy_inheritable_appearance_from = global_var:blob_visual
		}
		else = {
			set_global_variable = {
				name = blob_visual
				value = THIS
			}
		}
	}
}
#uses
#transfer_to_mc_funds_effect = {
#	PAYER = scope:rruler
#	VALUE = 100
#}
#take_from_mc_funds_effect = {
#	RECEIVER = ROOT
#	VALUE = 100
#}
#increase_mc_funds_effect = {
#	VALUE = 100
#}
#decrease_mc_funds_effect = {
#	VALUE = 100
#}
demon_escapes_effect = {
	hidden_effect_new_object = {
		if = {
			limit = {
				NOT = {
					exists = scope:this0
				}
			}
			ROOT = {
				save_scope_as = this0
			}
		}
		create_character = {
			#employer = scope:target
			gender_female_chance = 30
			location = scope:this0.location
			faith = root.faith
			culture = root.culture
			template = generic_demon_character
			save_scope_as = demon
		}
		scope:demon = {
			set_relation_nemesis = scope:this0
			#set_relation_rival = scope:heir0
			if = {
				limit = {
					exists = primary_heir
				}
				set_random_rivalry_reason = { TARGET = primary_heir RELATION = rival }
			}
			add_trait_xp = {
				trait = source
				track = magic_potential
				value = { 20 45 }
			}
			if = {
				limit = {
					NOT = {
						has_perk = a_job_done_right_perk
					}
				}
				random = {
					chance = 90
					add_perk = a_job_done_right_perk
				}
			}
			add_character_modifier = demonic_charm_modifier
			gain_source_ps_effect = yes
			add_gold = 250
			random = {
				chance = 50
				add_character_modifier = {
					modifier = oneiromancy_modifier
					years = 5
				}
			}
			random = {
				chance = 50
				add_character_modifier = {
					modifier = preparation_for_strike_modifier
					years = 5
				}
			}
			random = {
				chance = 50
				add_character_modifier = mind_reader_modifier
			}
			create_landless_adventurer_title_effect = {
				REASON = flag:exile
				FLAVOR_CHAR = scope:this0
			}
			start_scheme = {
				type = murder
				target_character = scope:this0
			}
		}
	}
}
assign_special_spell_effect = {
	hidden_effect = {
		if = {
			limit = {
				$NR$ = 1
			}
			set_variable = {
				name = my_cs_slot1
				value = $S1$
			}
			set_variable = {
				name = my_cs_slot2
				value = $S2$
			}
			set_variable = {
				name = my_cs_slot3
				value = $S3$
			}
			set_variable = {
				name = cs_predef_name
				value = 2
			}
			add_character_flag = me_custom_spell_project_done
		}
		else = {
			set_variable = {
				name = my_cs_slot1b
				value = $S1$
			}
			set_variable = {
				name = my_cs_slot2b
				value = $S2$
			}
			set_variable = {
				name = my_cs_slot3b
				value = $S3$
			}
			set_variable = {
				name = cs_predef_name2
				value = 3
			}
		}
	}
}
laamp_magic_1013_reward_hidden_effect = {
	hidden_effect = {
		if = {
			limit = {
				is_witch_trigger = no
			}
			give_witch_secret_or_trait_effect2 = yes
		}
		if = {
			limit = {
				OR = {
					has_focus = witch_focus
					has_focus = arcane_focus
				}
			}
			send_interface_toast = {
				title = ev3.52.a_1
				add_prestige = task_contract_success_prestige_gain_half_value
				add_learning_skill = 1
			}
			add_magic_lifestyle_perk_points = 1
		}
		else = {
			random_list = {
				10 = {
					send_interface_toast = {
						title = ev3.52.a_1
						add_prestige = task_contract_success_prestige_gain_half_value
						add_diplomacy_skill = 1
						if = {
							limit = {
								is_true_mage = yes
								has_trait_xp = {
									trait = archmage
									track = alchemy
									value < 100
								}
							}
							add_trait_xp = {
								trait = archmage
								track = alchemy
								value = 1
							}
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NAND = {
									has_trait = diplomat
									has_trait = august
									has_trait = family_first
								}
							}
							add_diplomacy_lifestyle_perk_points = 1
						}
					}
				}
				10 = {
					send_interface_toast = {
						title = ev3.52.a_1
						add_prestige = task_contract_success_prestige_gain_half_value
						add_martial_skill = 1
						if = {
							limit = {
								is_true_mage = yes
								has_trait_xp = {
									trait = archmage
									track = combat_magic
									value < 100
								}
							}
							add_trait_xp = {
								trait = archmage
								track = combat_magic
								value = 1
							}
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NAND = {
									has_trait = strategist
									has_trait = overseer
									has_trait = gallant
								}
							}
							add_martial_lifestyle_perk_points =  1
						}
					}
				}
				10 = {
					send_interface_toast = {
						title = ev3.52.a_1
						add_prestige = task_contract_success_prestige_gain_half_value
						add_stewardship_skill = 1
						if = {
							limit = {
								is_true_mage = yes
								has_trait_xp = {
									trait = archmage
									track = alchemy
									value < 100
								}
							}
							add_trait_xp = {
								trait = archmage
								track = alchemy
								value = 1
							}
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NAND = {
									has_trait = avaricious
									has_trait = architect
									has_trait = administrator
								}
							}
							add_stewardship_lifestyle_perk_points = 1
						}
					}
				}
				10 = {
					send_interface_toast = {
						title = ev3.52.a_1
						add_prestige = task_contract_success_prestige_gain_half_value
						add_intrigue_skill = 1
						if = {
							limit = {
								is_true_mage = yes
								has_trait_xp = {
									trait = archmage
									track = alchemy
									value < 100
								}
							}
							add_trait_xp = {
								trait = archmage
								track = alchemy
								value = 1
							}
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NAND = {
									has_trait = schemer
									has_trait = seducer
									has_trait = torturer
								}
							}
							add_intrigue_lifestyle_perk_points = 1
						}
					}
				}
				10 = {
					send_interface_toast = {
						title = ev3.52.a_1
						add_prestige = task_contract_success_prestige_gain_half_value
						add_learning_skill = 1
						if = {
							limit = {
								is_true_mage = yes
								has_trait_xp = {
									trait = archmage
									track = alchemy
									value < 100
								}
							}
							add_trait_xp = {
								trait = archmage
								track = alchemy
								value = 1
							}
						}
					}
					hidden_effect = {
						if = {
							limit = {
								NAND = {
									has_trait = whole_of_body
									has_trait = scholar
									has_trait = theologian
								}
							}
							add_learning_lifestyle_perk_points = 1
						}
					}
				}
			}
		}
	}
}
distrusts_mages_effect = {
	random_ruler = {
		limit = {
			OR = {
				highest_held_title_tier = tier_empire
				highest_held_title_tier = tier_kingdom
			}
			is_ai = yes
			is_adult = yes
			is_witch_trigger = no
			NOR = {
				has_trait = trusting
				has_trait = archmage
				has_character_flag = distrusts_mages_flag
			}
			culture = {
				NOT = {
					has_cultural_tradition = mage_rulership_tradition
				}
			}
		}
		add_character_flag = {
			flag = distrusts_mages_flag
			years = 40
		}
		save_scope_as = distrusts_mages_ruler
		every_living_character = {
			limit = {
				has_trait = archmage
				NOT = {
					has_relation_mmaster = scope:distrusts_mages_ruler
				}
			}
			scope:distrusts_mages_ruler = {
				add_opinion = {
					target = PREV
					modifier = distrusts_mages
					years = 40
				}
			}
		}
	}
}
ai_striving_for_magic_power_effect = {
	if = {
		limit = {
			exists = scope:oart2
		}
		clear_saved_scope = oart2
	}
	if = {
		limit = {
			exists = scope:art2
		}
		clear_saved_scope = art2
	}
	if = {
		limit = {
			exists = scope:art1
		}
		clear_saved_scope = art1
	}
	if = {
		limit = {
			exists = scope:target
		}
		clear_saved_scope = target
	}
	if = {
		limit = {
			any_artifact = {
				has_variable = magic1
				NOT = { artifact_owner = ROOT }
				NOT = { any_artifact_claimant = { THIS = ROOT } }
				artifact_owner = { in_diplomatic_range = ROOT NOT = { has_strong_hook = ROOT } }
			}
		}
		random_artifact = {
			limit = {
				has_variable = magic1
				NOT = { artifact_owner = ROOT }
				NOT = { any_artifact_claimant = { THIS = ROOT } }
				artifact_owner = { in_diplomatic_range = ROOT NOT = { has_strong_hook = ROOT } }
			}
			save_scope_as = art1
		}
	}
	else_if = {
		limit = {
			any_artifact = {
				has_variable = magic1
				NOT = { artifact_owner = ROOT }
				NOT = { any_artifact_claimant = { THIS = ROOT } }
				artifact_owner = { NOT = { has_strong_hook = ROOT } }
			}
		}
		random_artifact = {
			limit = {
				has_variable = magic1
				NOT = { artifact_owner = ROOT }
				NOT = { any_artifact_claimant = { THIS = ROOT } }
				artifact_owner = { NOT = { has_strong_hook = ROOT } }
			}
			save_scope_as = art1
		}
	}
	if = {
		limit = {
			exists = scope:art1
		}
		if = {
			limit = {
				has_perk = accomplished_forger_perk
				is_landless_adventurer = no
			}
			add_personal_artifact_claim = scope:art1
		}
		else_if = {
			limit = {
				is_ruler = yes
				in_diplomatic_range = scope:art1.artifact_owner
				has_trait = schemer
				NOT = {
					any_scheme = {
						is_hostile = yes
					}
				}
				exists = dynasty
				dynasty = {
					has_dynasty_perk = witchcraft_legacy_1
				}
			}
			start_scheme = {
				type = abduct
				target_character = scope:art1.artifact_owner
			}
		}
		else_if = {
			limit = {
				has_trait = grandmaster_coven
				exists = house
			}
			random = {
				chance = 50
				house = {
					add_house_artifact_claim = scope:art1
				}
			}
		}
		else_if = {
			limit = {
				has_trait = true_witch
			}
			random = {
				chance = 20
				add_personal_artifact_claim = scope:art1
			}
		}
	}
	if = {
		limit = {
			any_claimed_artifact = { has_variable = magic1 artifact_owner = { in_diplomatic_range = ROOT } }
		}
		random_claimed_artifact = {
			limit = { has_variable = magic1 artifact_owner = { in_diplomatic_range = ROOT } }
			save_scope_as = art2
			artifact_owner = { save_scope_as = oart2 }
		}
		if = {
			limit = {	#forcing
				is_ruler = yes
				scope:oart2 = {
					is_ai = yes
					is_adult = yes
					is_powerful_being = no
					NOR = {
						has_trait = true_witch
						has_trait = archmage
					}
					OR = {
						ROOT = {
							has_strong_hook = scope:oart2
						}
						is_lowborn = yes
						AND = {
							is_pool_character = yes
							trigger_if = {
								limit = { exists = house }
								house = {
									NOT = {
										has_house_modifier = witch_coven
									}
								}
							}
						}
					}
				}
			}
			scope:art2 = {
				set_owner = {
					target = ROOT
					history = {
						type = given
						actor = scope:oart2
						recipient = ROOT
						location = scope:oart2.location
					}
				}
			}
		}
		else_if = {
			limit = {	#duel
				is_adult = yes
				is_imprisoned = no
				prowess > scope:oart2.prowess
				can_start_single_combat_trigger = yes
				NOR = {
					has_trait = craven
					has_trait = compassionate
				}
				scope:oart2 = {
					can_start_single_combat_trigger = yes
					is_ai = yes
					is_adult = yes
					is_imprisoned = no
					is_powerful_being = no
					NOR = {
						has_trait = craven
						has_trait = incapable
					}
					OR = {
						has_trait = brave
						has_trait = reckless
						has_trait = arrogant
						has_trait = wrathful
						has_trait = irritable
						has_trait = lunatic_1
						has_trait = lunatic_genetic
					}
				}
			}
			scope:art2 = {
				save_scope_as = target
			}
			configure_start_single_combat_effect = {
				SC_INITIATOR = ROOT
				SC_ATTACKER = ROOT
				SC_DEFENDER = scope:oart2
				FATALITY = no
				FIXED = no
				LOCALE = terrain_scope
				OUTPUT_EVENT = artifact.2001
				INVALIDATION_EVENT = fp1_tbc.0021
			}
		}
		else_if = {
			limit = {	#war
				is_ruler = yes
				is_landed_or_landless_administrative = yes
				is_independent_ruler = yes
				is_adult = yes
				is_imprisoned = no
				is_at_war = no
				NOR = {
					has_truce = scope:oart2
					is_allied_to = scope:oart2
					has_relation_lover = scope:oart2
					has_relation_friend = scope:oart2
					has_relation_best_friend = scope:oart2
					has_relation_soulmate = scope:oart2
				}
				NOR = {
					has_trait = incapable
					has_trait = craven
					has_trait = compassionate
				}
				scope:oart2 = {
					is_ruler = yes
					is_landed_or_landless_administrative = yes
					is_independent_ruler = yes
					is_imprisoned = no
				}
				OR = {
					max_military_strength > scope:oart2.max_military_strength
					AND = {
						OR = {
							highest_held_title_tier = tier_empire
							highest_held_title_tier = tier_kingdom
						}
						scope:oart2 = {
							is_at_war = yes
						}
					}
				}
			}
			start_war = {
				target = scope:oart2
				cb = artifact_war
			}
		}
		else_if = {	#purchasing
			limit = {
				gold > 600
				NOT = {
					has_trait = greedy
				}
				scope:oart2 = {
					is_adult = yes
					NOT = {
						has_character_flag = magic_item_offer_already_flag
					}
					is_witch_trigger = no
					trigger_if = {
						limit = { exists = house }
						house = {
							NOT = {
								has_house_modifier = witch_coven
							}
						}
					}
				}
			}
			save_scope_as = new_mage
			scope:oart2 = {
				trigger_event = magic_ev7.136
			}
		}
		else_if = {	#abduct
			limit = {
				is_ruler = yes
				in_diplomatic_range = scope:oart2
				has_trait = schemer
				NOT = {
					any_scheme = {
						is_hostile = yes
					}
				}
				exists = dynasty
				dynasty = {
					has_dynasty_perk = witchcraft_legacy_1
				}
				NOR = {
					has_relation_lover = scope:oart2
					has_relation_friend = scope:oart2
					has_relation_best_friend = scope:oart2
					has_relation_soulmate = scope:oart2
				}
				scope:oart2.prowess < 50
			}
			start_scheme = {
				type = abduct
				target_character = scope:oart2
			}
		}
		else_if = {	#domination
			limit = {
				NOR = {
					has_relation_lover = scope:oart2
					has_relation_friend = scope:oart2
					has_relation_best_friend = scope:oart2
					has_relation_soulmate = scope:oart2
					has_relation_mminion = scope:oart2
					has_relation_mmaster = scope:oart2
				}
				is_character_interaction_shown = {
					recipient = scope:oart2
					interaction = magic_domination
				}
				is_character_interaction_valid = {
					recipient = scope:oart2
					interaction = magic_domination
				}
			}
			run_interaction = {
				interaction = magic_domination
				actor = ROOT
				recipient = scope:oart2
				execute_threshold = accept
			}
			trigger_event = {
				id = magic_ev10.157
				days = 14
			}
		}
		else_if = {	#stealing
			limit = {
				is_ruler = yes
				in_diplomatic_range = scope:oart2
				NOT = {
					any_scheme = {
						is_hostile = yes
					}
				}
				NOR = {
					has_relation_lover = scope:oart2
					has_relation_friend = scope:oart2
					has_relation_best_friend = scope:oart2
					has_relation_soulmate = scope:oart2
				}
			}
			start_scheme = {
				type = steal_back_artifact
				target_character = scope:oart2
			}
			random_scheme = {
				limit = {
					scheme_type = steal_back_artifact
					scheme_target_character = scope:oart2
				}
				set_variable = {
					name = target_artifact
					value = scope:art2
				}
			}
		}
		#conduct magical research
		if = {
			limit = {
				is_true_mage = yes
			}
			if = {
				limit = {
					OR = {
						has_trait_xp = {
							trait = archmage
							track = secret_knowledge
							value > 24
						}
						has_trait = scholar
					}
				}
				gain_sc_xp5_effect = yes
				random_list = {
					1 = {
						trigger = {
							NOT = {
								has_character_modifier = master_metamagic_modifier
							}
						}
						add_character_flag = master_metamagic
						add_stress = medium_stress_loss
						add_prestige = major_prestige_gain
						add_learning_skill = 2
						add_character_modifier = master_metamagic_modifier
						add_1_magic_potential = yes
					}
					1 = {
						trigger = {
							NOT = {
								has_character_modifier = master_alteration_modifier
							}
						}
						gain_al_xp_huge_effect = yes
						add_stress = medium_stress_loss
						add_character_modifier = master_alteration_modifier
						add_prestige = major_prestige_gain
						add_stewardship_skill = 1
						add_learning_skill = 1
						add_1_magic_potential = yes
					}
					1 = {
						trigger = {
							NOT = {
								has_character_modifier = master_necromancer_modifier
							}
						}
						add_character_flag = skeleton_warriors
						add_stress = medium_stress_loss
						add_prestige = major_prestige_gain
						add_martial_skill = 1
						add_learning_skill = 1
						add_character_modifier = master_necromancer_modifier
					}
					1 = {
						trigger = {
							NOT = {
								has_character_modifier = master_psionic_modifier
							}
						}
						add_character_flag = better_domination_spell
						add_stress = medium_stress_loss
						add_prestige = major_prestige_gain
						add_intrigue_skill = 1
						add_diplomacy_skill = 1
						add_character_modifier = master_psionic_modifier
						add_1_magic_potential = yes
					}
					1 = {
						trigger = {
							NOT = {
								has_character_modifier = mind_reader_modifier
							}
						}
						add_prestige = major_prestige_gain
						add_intrigue_skill = 2
						add_character_modifier = mind_reader_modifier
						add_1_magic_potential = yes
					}
					1 = {
						trigger = {
							NOT = {
								has_character_modifier = upgraded_body_modifier
							}
						}
						add_stress = medium_stress_loss
						add_prestige = major_prestige_gain
						add_diplomacy_skill = 4
						add_martial_skill = 4
						add_stewardship_skill = 4
						add_intrigue_skill = 4
						add_learning_skill = 4
						add_prowess_skill = 4
						if = {
							limit = {
								NOT = {
									has_trait = source
								}
							}
							random = {
								chance = 50
								add_min_source_trait = yes
							}
						}
						else = {
							add_1_magic_potential = yes
						}
						add_character_modifier = upgraded_body_modifier
					}
					1 = {
						trigger = {
							NOT = {
								has_character_flag = protection_ritual
							}
						}
						add_stress = medium_stress_loss
						add_prestige = major_prestige_gain
						add_learning_skill = 2
						add_intrigue_skill = 2
						gain_cm_xp5_effect = yes
					}
					1 = {
						trigger = {
							NOT = {
								has_character_flag = tornado_spell_flag
							}
						}
						gain_huge_ps_effect = yes
						add_character_flag = tornado_spell_flag
						add_prestige = major_prestige_gain
						add_martial_skill = 3
						add_learning_skill = 3
						add_1_magic_potential = yes
					}
					1 = {
						trigger = {
							is_or_will_be_a_demon_trigger = no
							has_trait_xp = {
								trait = archmage
								track = secret_knowledge
								value > 50
							}
							has_trait = source
						}
						add_trait = demon1
					}
					1 = {
						trigger = {
							NOT = {
								has_variable = my_cs_slot1
							}
						}
						if = {
							limit = {
								has_trait_xp = {
									trait = archmage
									track = combat_magic
									value > 80
								}
							}
							add_trait_xp = {
								trait = archmage
								track = combat_magic
								value = 20
							}
							random_list = {
								1 = {
									assign_special_spell_effect = { NR = 1 S1 = 1 S2 = 2 S3 = 3 }
								}
								1 = {
									assign_special_spell_effect = { NR = 1 S1 = 2 S2 = 3 S3 = 3 }
								}
								1 = {
									assign_special_spell_effect = { NR = 1 S1 = 3 S2 = 2 S3 = 1 }
								}
								1 = {
									assign_special_spell_effect = { NR = 1 S1 = 2 S2 = 4 S3 = 6 }
								}
								1 = {
									assign_special_spell_effect = { NR = 1 S1 = 3 S2 = 2 S3 = 6 }
								}
								1 = {
									assign_special_spell_effect = { NR = 1 S1 = 2 S2 = 4 S3 = 3 }
								}
							}
						}
						else = {
							add_trait_xp = {
								trait = archmage
								track = combat_magic
								value = { 10 20 }
							}
						}
					}
					1 = {
						
					}
				}
				if = {
					limit = {
						NOR = {
							has_character_flag = special_magic_character
							has_nickname = mage_nickname
							has_nickname = mage2_nickname
							has_nickname = mage3_nickname
							has_nickname = mage4m_nickname
							has_nickname = mage5m_nickname
							has_nickname = mage6m_nickname
							has_nickname = mage6f_nickname
							has_nickname = mage4f_nickname
							has_nickname = mage5f_nickname
							has_nickname = archmage_nickname
							has_nickname = demonslayer_nickname
						}
					}
					random_list = {
						1 = { give_nickname = mage_nickname }
						1 = { give_nickname = mage2_nickname }
						1 = {
							if = {
								limit = {
									is_male = yes
								}
								give_nickname = mage5m_nickname
							}
							else = {
								give_nickname = mage5f_nickname
							}
						}
						1 = {
							if = {
								limit = {
									is_male = yes
								}
								give_nickname = mage4m_nickname
							}
							else = {
								give_nickname = mage4f_nickname
							}
						}
						6 = {
							trigger = {
								has_any_nickname = yes
							}
						}
						4 = {

						}
					}
				}
			}
			else = {
				add_trait_xp = {
					trait = archmage
					track = secret_knowledge
					value = { 1 7 }
				}
			}
		}
	}
}
expose_your_witch_secret = {
	hidden_effect = {
		if = {
			limit = {
				NOT = {
					has_trait = witch
				}
			}
			send_interface_toast = {
				title = tournament_secret_exposed_log_title
				add_trait = witch
				add_piety_level = -1
			}
		}
	}
	if = {
		limit = {
			any_secret = {
				secret_type = secret_witch
			}
		}
		every_secret = {
			limit = {
				secret_type = secret_witch
			}
			save_scope_as = secret
			expose_secret = this.secret_owner
		}
		show_as_tooltip = {
			add_trait_force_tooltip = witch
		}
	}
}
run_mage_arena_mode_effect = {
	#setting_easy_difficulty
	#normal_difficult
	#hard_difficult
	#very_hard_difficult
	#extremely_hard_difficult
	#impossibly_hard_difficult
	hidden_effect = {
		if = { limit = { has_trait = wounded_2 } remove_trait = wounded_2	}
		if = { limit = { has_trait = wounded_3 } remove_trait = wounded_3	}
		if = { limit = { has_trait = wounded_1 } remove_trait = wounded_1	}
		if = { limit = { has_trait = maimed } remove_trait = maimed	}
		if = { limit = { has_trait = infirm } remove_trait = infirm	}
		if = { limit = { has_trait = ill } remove_trait = ill	}
		if = { limit = { has_trait = incapable } remove_trait = incapable	}
		if = { limit = { has_trait = blind } remove_trait = blind	}
	}
	turn_into_mage_effect = yes
	add_trait_xp = {
		trait = archmage
		track = power_saturation
		value = 100
	}
	if = {
		limit = {
			OR = {
				NOT = {
					exists = var:marena_level
				}
				AND = {
					exists = var:marena_level
					var:marena_level < 1
				}
			}
		}
		custom_tooltip = challenge_mage_arena_ct1
		custom_tooltip = mage_duel_difficulty_ct1
		hidden_effect_new_object = {
			create_character = {
				employer = ROOT
				#location = root.capital_province
				gender_female_chance = 30
				template = generic_demon_character
				save_scope_as = mage_arena_opponent
				after_creation = {
					set_sexuality = bisexual
					give_witch_secret_or_trait_effect2 = yes
					set_source4demon = yes
					add_character_modifier = {
						modifier = power_saturated1
					}
					add_character_flag = {
						flag = just_summoned_demon_flag
						days = 7
					}
				}
			}
		}
	}
	else_if = {
		limit = {
			exists = var:marena_level
			var:marena_level = 1
		}
		custom_tooltip = challenge_mage_arena_ct2
		custom_tooltip = mage_duel_difficulty_ct2
		hidden_effect_new_object = {
			create_character = {
				employer = ROOT
				gender_female_chance = 50
				template = student_mage_character
				save_scope_as = mage_arena_opponent
				after_creation = {
					give_witch_secret_or_trait_effect2 = yes
					turn_into_mage_effect = yes
					set_random_spell_id = yes
					if = {
						limit = {
							NOT = {	has_trait = archmage	}
						}
						add_trait = archmage
					}
					add_trait_xp = {
						trait = archmage
						track = power_saturation
						value = 100
					}
				}
			}
		}
	}
	else_if = {
		limit = {
			exists = var:marena_level
			var:marena_level = 2
		}
		custom_tooltip = challenge_mage_arena_ct3
		custom_tooltip = mage_duel_difficulty_ct3
		hidden_effect_new_object = {
			create_character = {
				employer = ROOT
				template = wandering_mage_character
				gender_female_chance = 20
				save_scope_as = mage_arena_opponent
				after_creation = {
					add_trait = adventurer
					add_trait = aggressive_attacker
					add_trait = strategist
					give_witch_secret_or_trait_effect2 = yes
					add_trait_xp = {
						trait = lifestyle_traveler
						track = travel
						value = { 40 80 }
					}
					add_trait_xp = {
						trait = lifestyle_traveler
						track = danger
						value = { 40 80 }
					}
					turn_into_mage_effect = yes
					set_random_spell_id = yes
					random = {
						chance = 20
						add_character_modifier = gift_from_hell_modifier
					}
					if = {
						limit = {
							NOT = {	has_trait = archmage	}
						}
						add_trait = archmage
					}
					add_trait_xp = {
						trait = archmage
						track = secret_knowledge
						value = { 25 65 }
					}
					add_trait_xp = {
						trait = archmage
						track = combat_magic
						value = 100
					}
					add_trait_xp = {
						trait = archmage
						track = alchemy
						value = { 10 35 }
					}
					add_trait_xp = {
						trait = archmage
						track = power_saturation
						value = 100
					}
					add_character_flag = shadowstep_flag
					add_martial_skill = 20
					add_intrigue_skill = 20
					add_learning_skill = 30
				}
			}
		}
	}
	else_if = {
		limit = {
			exists = var:marena_level
			var:marena_level = 3
		}
		custom_tooltip = challenge_mage_arena_ct4
		custom_tooltip = mage_duel_difficulty_ct4
		hidden_effect_new_object = {
			create_character = {
				employer = ROOT
				template = generic_demon_character
				gender_female_chance = 40
				save_scope_as = mage_arena_opponent
				after_creation = {
					set_sexuality = bisexual
					give_witch_secret_or_trait_effect2 = yes
					add_character_modifier = whisperer_modifier
					set_source4demon = yes
					turn_into_mage_effect = yes
					turn_into_super_demon_effect = yes
					set_random_spell_id = yes
					if = {
						limit = {
							NOT = {	has_trait = archmage	}
						}
						add_trait = archmage
					}
					add_trait_xp = {
						trait = archmage
						track = secret_knowledge
						value = { 65 95 }
					}
					add_trait_xp = {
						trait = archmage
						track = combat_magic
						value = 90
					}
					add_trait_xp = {
						trait = archmage
						track = alchemy
						value = 50
					}
					add_trait_xp = {
						trait = archmage
						track = power_saturation
						value = 100
					}
					add_character_flag = shadowstep_flag
					add_martial_skill = 20
					add_intrigue_skill = 20
					add_learning_skill = 30
				}
			}
		}
	}
	else_if = {
		limit = {
			exists = var:marena_level
			var:marena_level = 4
		}
		custom_tooltip = challenge_mage_arena_ct5
		custom_tooltip = mage_duel_difficulty_ct5
		hidden_effect_new_object = {
			create_character = {
				employer = ROOT
				template = wandering_mage_character
				gender_female_chance = 40
				save_scope_as = mage_arena_opponent
				after_creation = {
					add_trait = strategist
					give_witch_secret_or_trait_effect2 = yes
					add_trait_xp = {
						trait = lifestyle_traveler
						track = travel
						value = { 40 80 }
					}
					add_trait_xp = {
						trait = lifestyle_traveler
						track = danger
						value = { 40 80 }
					}
					turn_into_mage_effect = yes
					set_random_spell_id = yes
					random = {
						chance = 20
						add_character_modifier = gift_from_hell_modifier
					}
					if = {
						limit = {
							NOT = {	has_trait = archmage	}
						}
						add_trait = archmage
					}
					if = {
						limit = {
							is_male = yes
						}
						give_nickname = mage5m_nickname
					}
					else = {
						give_nickname = mage5f_nickname
					}
					add_trait_xp = {
						trait = archmage
						track = secret_knowledge
						value = 100
					}
					add_trait_xp = {
						trait = archmage
						track = combat_magic
						value = 100
					}
					add_trait_xp = {
						trait = archmage
						track = alchemy
						value = 90
					}
					add_trait_xp = {
						trait = archmage
						track = demonology
						value = 90
					}
					add_trait_xp = {
						trait = archmage
						track = power_saturation
						value = 100
					}
					add_character_flag = shadowstep_flag
					add_character_flag = firestorm_spell_flag
					add_character_modifier = master_magic_modifier
					add_character_modifier = upgraded_body_modifier
					add_martial_skill = 20
					add_intrigue_skill = 20
					add_learning_skill = 50
					add_trait = source
					add_trait_xp = {
						trait = source
						track = magic_potential
						value = 80
					}
					random_list = {
						1 = {
							assign_special_spell_effect = { NR = 1 S1 = 1 S2 = 2 S3 = 3 }
						}
						1 = {
							assign_special_spell_effect = { NR = 1 S1 = 2 S2 = 3 S3 = 3 }
						}
						1 = {
							assign_special_spell_effect = { NR = 1 S1 = 3 S2 = 2 S3 = 1 }
						}
						1 = {
							assign_special_spell_effect = { NR = 1 S1 = 2 S2 = 4 S3 = 6 }
						}
						1 = {
							assign_special_spell_effect = { NR = 1 S1 = 3 S2 = 2 S3 = 6 }
						}
						1 = {
							assign_special_spell_effect = { NR = 1 S1 = 2 S2 = 4 S3 = 3 }
						}
					}
				}
			}
		}
	}
	else_if = {
		limit = {
			exists = var:marena_level
			var:marena_level = 5
		}
		custom_tooltip = challenge_mage_arena_ct6
		custom_tooltip = mage_duel_difficulty_ct6
		hidden_effect_new_object = {
			create_character = {
				employer = ROOT
				template = wandering_mage_character
				gender_female_chance = 40
				save_scope_as = mage_arena_opponent
				after_creation = {
					add_trait = strategist
					give_witch_secret_or_trait_effect2 = yes
					add_trait_xp = {
						trait = lifestyle_traveler
						track = travel
						value = { 40 80 }
					}
					add_trait_xp = {
						trait = lifestyle_traveler
						track = danger
						value = { 40 80 }
					}
					turn_into_mage_effect = yes
					set_random_spell_id = yes
					random = {
						chance = 20
						add_character_modifier = gift_from_hell_modifier
					}
					if = {
						limit = {
							NOT = {	has_trait = archmage	}
						}
						add_trait = archmage
					}
					add_trait_xp = {
						trait = archmage
						track = secret_knowledge
						value = 100
					}
					add_trait_xp = {
						trait = archmage
						track = combat_magic
						value = 100
					}
					add_trait_xp = {
						trait = archmage
						track = alchemy
						value = 100
					}
					add_trait_xp = {
						trait = archmage
						track = demonology
						value = 100
					}
					add_trait_xp = {
						trait = archmage
						track = power_saturation
						value = 100
					}
					
					add_character_flag = shadowstep_flag
					add_character_flag = firestorm_spell_flag
					add_character_modifier = master_magic_modifier
					add_character_modifier = upgraded_body_modifier
					add_character_modifier = ancient_archmage_modifier
					add_martial_skill = 20
					add_intrigue_skill = 20
					add_learning_skill = 50
					add_trait = source
					add_trait_xp = {
						trait = source
						track = magic_potential
						value = 100
					}
					random_list = {
						1 = {
							assign_special_spell_effect = { NR = 1 S1 = 1 S2 = 2 S3 = 3 }
						}
						1 = {
							assign_special_spell_effect = { NR = 1 S1 = 2 S2 = 3 S3 = 3 }
						}
						1 = {
							assign_special_spell_effect = { NR = 1 S1 = 3 S2 = 2 S3 = 1 }
						}
						1 = {
							assign_special_spell_effect = { NR = 1 S1 = 2 S2 = 4 S3 = 6 }
						}
						1 = {
							assign_special_spell_effect = { NR = 1 S1 = 3 S2 = 2 S3 = 6 }
						}
						1 = {
							assign_special_spell_effect = { NR = 1 S1 = 2 S2 = 4 S3 = 3 }
						}
					}
					random_list = {
						1 = {
							assign_special_spell_effect = { NR = 2 S1 = 1 S2 = 2 S3 = 3 }
						}
						1 = {
							assign_special_spell_effect = { NR = 2 S1 = 2 S2 = 3 S3 = 3 }
						}
						1 = {
							assign_special_spell_effect = { NR = 2 S1 = 3 S2 = 2 S3 = 1 }
						}
						1 = {
							assign_special_spell_effect = { NR = 2 S1 = 2 S2 = 4 S3 = 6 }
						}
						1 = {
							assign_special_spell_effect = { NR = 2 S1 = 3 S2 = 2 S3 = 6 }
						}
						1 = {
							assign_special_spell_effect = { NR = 2 S1 = 2 S2 = 4 S3 = 3 }
						}
					}
				}
			}
		}
	}
	else_if = {
		limit = {
			exists = var:marena_level
			var:marena_level = 6
		}
		custom_tooltip = challenge_mage_arena_ct7
		custom_tooltip = mage_duel_difficulty_ct7
		hidden_effect_new_object = {
			create_character = {
				name = asmodeus_name
				#gender = female
				employer = ROOT
				template = asmodeus_demon_character
				save_scope_as = mage_arena_opponent
				after_creation = {
					add_character_flag = {
						flag = just_summoned_demon_flag
						days = 7
					}
					set_sexuality = bisexual
					give_witch_secret_or_trait_effect2 = yes
					add_character_modifier = whisperer_modifier
					turn_into_greater_demon = yes
					add_trait_xp = {
						trait = demon2
						track = hell_powers
						value = 100
					}
					add_trait_xp = {
						trait = demon2
						track = demon_reputation
						value = 100
					}
					turn_into_mage_effect = yes
					add_trait_xp = {
						trait = source
						track = magic_potential
						value = 90
					}
					add_perk = truth_is_relative_perk
					add_perk = digging_for_dirt_perk
					add_perk = kidnapper_perk
					add_perk = court_of_shadows_perk
					add_perk = prepared_for_anything_perk
					add_perk = swift_execution_perk
					add_perk = a_job_done_right_perk
					add_perk = twice_schemed_perk
					add_perk = schemer_perk
					add_character_modifier = master_psionic_modifier
					add_character_modifier = mind_reader_modifier
					add_character_modifier = financial_knowledge_modifier
					add_character_modifier = more_knights_modifier
					add_character_modifier = demonic_charm_modifier
					add_character_modifier = strength_ohm_modifier
					add_character_modifier = looked_to_the_future
					add_character_modifier = master_magic_modifier
					add_character_modifier = touched_divinity_modifier
					add_character_modifier = hells_envoy_modifier
					add_character_modifier = asmodeus_self_modifier
					#add_trait = archmage
					add_trait_xp = {
						trait = archmage
						track = secret_knowledge
						value = 100
					}
					add_trait_xp = {
						trait = archmage
						track = combat_magic
						value = 100
					}
					add_trait_xp = {
						trait = archmage
						track = alchemy
						value = 100
					}
					add_trait_xp = {
						trait = archmage
						track = demonology
						value = 100
					}
					add_trait_xp = {
						trait = archmage
						track = power_saturation
						value = 100
					}
					assign_special_spell_effect = { NR = 1 S1 = 5 S2 = 2 S3 = 3 }
					add_gold = 50000
					add_prestige_level = 5
					add_piety_level = -5
				}
			}
		}
	}
	else_if = {
		limit = {
			exists = var:marena_level
			var:marena_level > 6
		}
		custom_tooltip = challenge_mage_arena_ct8
		custom_tooltip = mage_duel_difficulty_ct8
		hidden_effect_new_object = {
			create_character = {
				employer = ROOT
				name = mimmy_name
				age = 3
				dynasty = none
				gender_female_chance = 100
				random_traits = yes
				save_scope_as = mage_arena_opponent
				after_creation = {
					give_witch_secret_or_trait_effect2 = yes
					turn_into_mage_effect = yes
					if = {
						limit = {
							NOT = {	has_trait = archmage	}
						}
						add_trait = archmage
					}
					add_trait_xp = {
						trait = archmage
						track = secret_knowledge
						value = 100
					}
					add_trait_xp = {
						trait = archmage
						track = combat_magic
						value = 100
					}
					add_trait_xp = {
						trait = archmage
						track = alchemy
						value = 100
					}
					add_trait_xp = {
						trait = archmage
						track = power_saturation
						value = 100
					}
					turn_into_super_demon_effect = yes
					add_character_flag = shadowstep_flag
					add_character_flag = firestorm_spell_flag
					add_character_modifier = master_magic_modifier
					add_character_modifier = upgraded_body_modifier
					add_character_modifier = ancient_archmage_modifier
					add_character_modifier = master_psionic_modifier
					add_character_modifier = mind_reader_modifier
					add_character_modifier = demonic_charm_modifier
					add_character_modifier = strength_ohm_modifier
					add_character_modifier = looked_to_the_future
					add_character_modifier = touched_divinity_modifier
					add_character_modifier = ultimate_spell_modifier
					add_character_modifier = minor_deity_arena_modifier
					add_diplomacy_skill = 100
					add_martial_skill = 100
					add_intrigue_skill = 100
					add_learning_skill = 100
					add_stewardship_skill = 100
					add_prowess_skill = 100
					add_trait = source
					add_trait_xp = {
						trait = source
						track = magic_potential
						value = 100
					}
					random_list = {
						1 = {
							assign_special_spell_effect = { NR = 1 S1 = 1 S2 = 2 S3 = 3 }
						}
						1 = {
							assign_special_spell_effect = { NR = 1 S1 = 2 S2 = 3 S3 = 3 }
						}
						1 = {
							assign_special_spell_effect = { NR = 1 S1 = 3 S2 = 2 S3 = 1 }
						}
						1 = {
							assign_special_spell_effect = { NR = 1 S1 = 2 S2 = 4 S3 = 6 }
						}
						1 = {
							assign_special_spell_effect = { NR = 1 S1 = 3 S2 = 2 S3 = 6 }
						}
						1 = {
							assign_special_spell_effect = { NR = 1 S1 = 2 S2 = 4 S3 = 3 }
						}
					}
					random_list = {
						1 = {
							assign_special_spell_effect = { NR = 2 S1 = 1 S2 = 2 S3 = 3 }
						}
						1 = {
							assign_special_spell_effect = { NR = 2 S1 = 2 S2 = 3 S3 = 3 }
						}
						1 = {
							assign_special_spell_effect = { NR = 2 S1 = 3 S2 = 2 S3 = 1 }
						}
						1 = {
							assign_special_spell_effect = { NR = 2 S1 = 2 S2 = 4 S3 = 6 }
						}
						1 = {
							assign_special_spell_effect = { NR = 2 S1 = 3 S2 = 2 S3 = 6 }
						}
						1 = {
							assign_special_spell_effect = { NR = 2 S1 = 2 S2 = 4 S3 = 3 }
						}
					}
				}
			}
		}
	}
	if = {
		limit = {
			any_character_artifact = {
				OR = {
					has_artifact_modifier = singularity_modifier5
					has_artifact_modifier = singularity_modifierX
				}
			}
		}
		hidden_effect = {
			add_character_flag = {
				flag = md_locked_as_for_duel
				years = 3
			}
		}
		custom_tooltip = MAGE_DUEL_O5_ct
	}
	add_character_flag = mage_arena_flag
	custom_tooltip = mage_duel_duel_ct
	hidden_effect_new_object = {
		configure_start_mage_duel_effect = {
			MD_ATTACKER = root
			MD_DEFENDER = scope:mage_arena_opponent
		}
	}
}
increment_mage_arena_challenge = {
	hidden_effect = {
		if = {
			limit = {
				has_variable = marena_level
			}
			change_variable = {
				name = marena_level
				add = 1
			}
		}
		else = {
			set_variable = {
				name = marena_level
				value = 1
			}
		}
	}
}
witch_hunter_vacations_effect = {
	hidden_effect = {
		if = {
			limit = {
				exists = global_var:witch_hunter_vacations
			}
			remove_global_variable = witch_hunter_vacations
		}
		set_global_variable = {
			name = witch_hunter_vacations
			years = $Y$
		}
	}
}

more_court_mage_effect = {
	if = {
		limit = {
			NOT = {
				has_game_rule = min_num_of_mages
			}
			NOT = {
				any_ruler = {
					highest_held_title_tier = tier_empire
					is_ai = yes
					is_adult = yes
					is_powerful_being = no
					any_court_position_holder = {
						type = mage_court_position
					}
				}
			}
		}
		random_ruler = {
			limit = {
				highest_held_title_tier = tier_empire
				is_ai = yes
				is_adult = yes
				is_powerful_being = no
				NOT = {
					any_court_position_holder = {
						type = mage_court_position
					}
				}
			}
			save_scope_as = some_emperor
		}
		if = {
			limit = {
				exists = scope:some_emperor
			}
			create_character = {
				employer = scope:some_emperor
				gender_female_chance = 50
				template = student_mage_character
				save_scope_as = cmage0
				after_creation = {
					give_witch_secret_or_trait_effect2 = yes
					turn_into_mage_effect = yes
					set_random_spell_id = yes
					if = {
						limit = {
							NOT = {	has_trait = archmage	}
						}
						add_trait = archmage
					}
					add_trait_xp = {
						trait = archmage
						track = power_saturation
						value = { 10 50 }
					}
					random = {
						chance = 10
						add_character_flag = healing_spell_flag
					}
					add_trait_xp = {
						trait = archmage
						track = secret_knowledge
						value = { 0 25 }
					}
					random_list = {
						1 = {
							add_trait_xp = {
								trait = archmage
								track = combat_magic
								value = { 0 40 }
							}
						}
						1 = {
							add_trait_xp = {
								trait = archmage
								track = alchemy
								value = { 0 40 }
							}
						}
						1 = {
							add_trait_xp = {
								trait = archmage
								track = demonology
								value = { 0 40 }
							}
						}
					}
				}
			}
			scope:some_emperor = {
				appoint_court_position = {
					recipient = scope:cmage0
					court_position = mage_court_position
				}
			}
		}
	}
}

merge_mamulets_4_ai_effect = {
	hidden_effect_new_object = {
		if = {
			limit = {
				is_ai = yes
				any_character_artifact = {
					has_variable = mamulet
					count > 1
				}
			}
			if = {
				limit = {
					any_character_artifact = {
						has_variable = mamulet
						rarity = illustrious
					}
				}
				random_character_artifact = {
					limit = {
						has_variable = mamulet
						rarity = illustrious
					}
					save_scope_as = target
				}
			}
			else_if = {
				limit = {
					any_character_artifact = {
						has_variable = mamulet
						rarity = famed
					}
				}
				random_character_artifact = {
					limit = {
						has_variable = mamulet
						rarity = famed
					}
					save_scope_as = target
				}
			}
			else_if = {
				limit = {
					any_character_artifact = {
						has_variable = mamulet
						rarity = masterwork
					}
				}
				random_character_artifact = {
					limit = {
						has_variable = mamulet
						rarity = masterwork
					}
					save_scope_as = target
				}
			}
			else = {
				random_character_artifact = {
					limit = {
						has_variable = mamulet
					}
					save_scope_as = target
				}
			}
			if = {
				limit = {
					exists = scope:target
				}
				every_character_artifact = {
					limit = {
						has_variable = mamulet
						NOT = {
							THIS = scope:target
						}
					}
					if = {
						limit = {
							has_artifact_modifier = immunity_curse_terrain_cancel_negative_supply
							scope:target = {
								has_artifact_modifier = immunity_curse_terrain_cancel_negative_supply
							}
						}
						remove_artifact_modifier = immunity_curse_terrain_cancel_negative_supply
					}
					if = {
						limit = {
							has_artifact_modifier = immunity_curse2_terrain_cancel_negative_supply
							scope:target = {
								has_artifact_modifier = immunity_curse2_terrain_cancel_negative_supply
							}
						}
						remove_artifact_modifier = immunity_curse2_terrain_cancel_negative_supply
					}
					if = {
						limit = {
							has_artifact_modifier = immunity_domination_terrain_cancel_negative_supply
							scope:target = {
								has_artifact_modifier = immunity_domination_terrain_cancel_negative_supply
							}
						}
						remove_artifact_modifier = immunity_domination_terrain_cancel_negative_supply
					}
					if = {
						limit = {
							has_artifact_modifier = immunity_mind_scan_terrain_cancel_negative_supply
							scope:target = {
								has_artifact_modifier = immunity_mind_scan_terrain_cancel_negative_supply
							}
						}
						remove_artifact_modifier = immunity_mind_scan_terrain_cancel_negative_supply
					}
					if = {
						limit = {
							OR = {
								has_artifact_modifier = artifact_hypnotic_power
								has_artifact_modifier = artifact_hypnotic_power2
							}
							scope:target = {
								has_artifact_modifier = artifact_hypnotic_power
							}
						}
						remove_artifact_modifier = artifact_hypnotic_power
					}
					if = {
						limit = {
							OR = {
								has_artifact_modifier = artifact_hypnotic_power
								has_artifact_modifier = artifact_hypnotic_power2
							}
							scope:target = {
								has_artifact_modifier = artifact_hypnotic_power2
							}
						}
						remove_artifact_modifier = artifact_hypnotic_power2
					}
					scope:target = {
						copy_artifact_modifiers = PREV
					}
					destroy_artifact = this
				}
				scope:target = {
					add_durability = 100
					random_list = {
						1 = {
							trigger = {
								NOT = { has_artifact_modifier = artifact_monthly_lifestyle_xp_05_modifier }
							}
							add_artifact_modifier = artifact_monthly_lifestyle_xp_05_modifier
						}
						1 = {
							trigger = {
								NOT = { has_artifact_modifier = artifact_hostile_scheme_phase_duration_add_1_modifier }
							}
							add_artifact_modifier = artifact_hostile_scheme_phase_duration_add_1_modifier
						}
						1 = {
							trigger = {
								NOT = { has_artifact_modifier = artifact_negate_health_penalty_add_1_modifier }
							}
							add_artifact_modifier = artifact_negate_health_penalty_add_1_modifier
						}
						1 = {
							trigger = {
								NOT = { has_artifact_modifier = artifact_epidemic_resistance_1_modifier }
							}
							add_artifact_modifier = artifact_epidemic_resistance_1_modifier
						}
						1 = {
							trigger = {
								NOT = { has_artifact_modifier = artifact_travel_safety_1 }
							}
							add_artifact_modifier = artifact_travel_safety_1
						}
						1 = {

						}
					}
					if = {
						limit = {
							rarity = common
						}
						set_artifact_rarity = masterwork
					}
					else_if = {
						limit = {
							rarity = masterwork
						}
						set_artifact_rarity = famed
					}
					else_if = {
						limit = {
							rarity = famed
						}
						set_artifact_rarity = illustrious
						set_should_decay = no
					}
				}
				clear_saved_scope = target
			}
		}
	}
}
